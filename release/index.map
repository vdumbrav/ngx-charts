{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/bar-label.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/common/base-chart.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/common/legend/advanced-legend.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/common/legend/legend.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/common/legend/scale-legend.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/common/timeline/timeline.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tooltip/tooltip.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/force-directed-graph/force-directed-graph.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/gauge/gauge.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/gauge/linear-gauge.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/number-card/card.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/pie-chart/advanced-pie-chart.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/pie-chart/pie-chart.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/pie-chart/pie-grid.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/polar-chart/polar-chart.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/src/tree-map/tree-map.component.scss","webpack:////home/vdumbrava/projects/ngx-charts/node_modules/css-loader/dist/runtime/api.js","webpack:////home/vdumbrava/projects/ngx-charts/node_modules/webpack/buildin/global.js","webpack://ngx-charts/./src/bar-chart/bar-label.component.scss?ad22","webpack://ngx-charts/./src/common/base-chart.component.scss?bdd9","webpack://ngx-charts/./src/common/legend/advanced-legend.component.scss?e810","webpack://ngx-charts/./src/common/legend/legend.component.scss?b0a7","webpack://ngx-charts/./src/common/legend/scale-legend.component.scss?79e9","webpack://ngx-charts/./src/common/timeline/timeline.component.scss?89d2","webpack://ngx-charts/./src/common/tooltip/tooltip.component.scss?7636","webpack:////home/vdumbrava/projects/ngx-charts/src/events.ts","webpack://ngx-charts/./src/force-directed-graph/force-directed-graph.component.scss?2232","webpack://ngx-charts/./src/gauge/gauge.component.scss?4472","webpack://ngx-charts/./src/gauge/linear-gauge.component.scss?7219","webpack:////home/vdumbrava/projects/ngx-charts/src/polyfills.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tooltip/position/placement.type.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tooltip/position/position.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tooltip/style.type.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tooltip/alignment.type.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tooltip/show.type.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tooltip/injection.service.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tooltip/injection-registery.service.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/utils/throttle.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tooltip/tooltip.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tooltip/tooltip.service.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tooltip/tooltip.directive.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tooltip/tooltip.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/charts/chart.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/label.helper.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/legend/legend.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/legend/scale-legend.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/legend/legend-entry.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/trim-label.helper.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/legend/advanced-legend.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/utils/id.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/utils/color-sets.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/utils/sort.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/utils/color-utils.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/utils/visibility-observer.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/base-chart.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/axes/axis-label.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/axes/ticks.helper.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/axes/x-axis-ticks.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/axes/x-axis.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/shape.helper.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/axes/y-axis-ticks.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/axes/y-axis.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/axes/axes.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/color.helper.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/circle-series.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/circle.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/grid-panel.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/grid-panel-series.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/svg-linear-gradient.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/svg-radial-gradient.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/timeline/timeline.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/area.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tooltip-area.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/count/count.helper.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/count/count.directive.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/chart-common.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/view-dimensions.helper.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/domain.helper.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/series-vertical.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/area-chart/area-chart.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/area-chart/area-chart-normalized.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/area-chart/area-chart-stacked.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/area-chart/area-series.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/area-chart/area-chart.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/bar.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/bar-horizontal.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/bar-horizontal-2d.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/bar-horizontal-normalized.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/bar-horizontal-stacked.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/bar-vertical.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/bar-vertical-2d.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/bar-vertical-normalized.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/bar-vertical-stacked.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/series-horizontal.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/bar-label.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bar-chart/bar-chart.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bubble-chart/bubble-chart.utils.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bubble-chart/bubble-chart.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bubble-chart/bubble-series.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/bubble-chart/bubble-chart.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/force-directed-graph/force-directed-graph.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/force-directed-graph/force-directed-graph.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/heat-map/heat-map-cell.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/heat-map/heat-map-cell-series.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/heat-map/heat-map.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/heat-map/heat-map.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/line-chart/line.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/line-chart/line-chart.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/line-chart/line-series.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/line-chart/line-chart.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/polar-chart/polar-chart.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/utils/types.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/polar-chart/polar-series.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/pie-chart/advanced-pie-chart.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/pie-chart/pie-label.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/pie-chart/pie-arc.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/pie-chart/pie-chart.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/grid-layout.helper.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/pie-chart/pie-grid.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/pie-chart/pie-grid-series.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/pie-chart/pie-series.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/pie-chart/pie-chart.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/polar-chart/polar-chart.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/number-card/card.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/number-card/card-series.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/number-card/number-card.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/number-card/number-card.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/tree-map/tree-map-cell.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/tree-map/tree-map-cell-series.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/tree-map/tree-map.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/tree-map/tree-map.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/gauge/linear-gauge.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/gauge/gauge.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/gauge/gauge-arc.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/gauge/gauge-axis.component.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/gauge/gauge.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/ngx-charts.module.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/common/tick-format.helper.ts","webpack:////home/vdumbrava/projects/ngx-charts/src/index.ts","webpack://ngx-charts/./src/number-card/card.component.scss?b695","webpack://ngx-charts/./src/pie-chart/advanced-pie-chart.component.scss?3ec8","webpack://ngx-charts/./src/pie-chart/pie-chart.component.scss?2149","webpack://ngx-charts/./src/pie-chart/pie-grid.component.scss?7be8","webpack://ngx-charts/./src/polar-chart/polar-chart.component.scss?ba88","webpack://ngx-charts/./src/tree-map/tree-map.component.scss?2416","webpack:///external \"@angular/animations\"","webpack:///external \"@angular/common\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/platform-browser\"","webpack:///external \"d3-array\"","webpack:///external \"d3-brush\"","webpack:///external \"d3-color\"","webpack:///external \"d3-force\"","webpack:///external \"d3-format\"","webpack:///external \"d3-hierarchy\"","webpack:///external \"d3-interpolate\"","webpack:///external \"d3-scale\"","webpack:///external \"d3-selection\"","webpack:///external \"d3-shape\"","webpack:///external \"d3-time-format\"","webpack:///external \"rxjs\"","webpack:///external \"rxjs/operators\""],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__angular_animations__","__WEBPACK_EXTERNAL_MODULE__angular_common__","__WEBPACK_EXTERNAL_MODULE__angular_core__","__WEBPACK_EXTERNAL_MODULE__angular_platform_browser__","__WEBPACK_EXTERNAL_MODULE_d3_array__","__WEBPACK_EXTERNAL_MODULE_d3_brush__","__WEBPACK_EXTERNAL_MODULE_d3_color__","__WEBPACK_EXTERNAL_MODULE_d3_force__","__WEBPACK_EXTERNAL_MODULE_d3_format__","__WEBPACK_EXTERNAL_MODULE_d3_hierarchy__","__WEBPACK_EXTERNAL_MODULE_d3_interpolate__","__WEBPACK_EXTERNAL_MODULE_d3_scale__","__WEBPACK_EXTERNAL_MODULE_d3_selection__","__WEBPACK_EXTERNAL_MODULE_d3_shape__","__WEBPACK_EXTERNAL_MODULE_d3_time_format__","__WEBPACK_EXTERNAL_MODULE_rxjs__","__WEBPACK_EXTERNAL_MODULE_rxjs_operators__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","push","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","g","Function","e","result","global","__webpack_exports__","createMouseEvent","MouseEvent","bubbles","cancelable","event_1","document","createEvent","initEvent","SVGElement","contains","HTMLDivElement","PlacementTypes","caretOffset","verticalPosition","elDimensions","popoverDimensions","alignment","top","height","horizontalPosition","left","width","StyleTypes","AlignmentTypes","ShowTypes","position_PositionHelper","PositionHelper","calculateVerticalAlignment","innerHeight","calculateVerticalCaret","caretDimensions","popoverPosition","calculateHorizontalAlignment","innerWidth","calculateHorizontalCaret","shouldFlip","placement","spacing","flip","positionCaret","elmDim","hostDim","right","bottom","positionContent","determinePlacement","injection_service_InjectionService","InjectionService","applicationRef","componentFactoryResolver","injector","setGlobalRootViewContainer","container","InjectionService_1","globalRootViewContainer","getRootViewContainer","rootComponents","components","_container","Error","setRootViewContainer","getComponentRootNode","componentRef","hostView","rootNodes","element","nativeElement","getRootViewContainerNode","projectComponentBindings","component","bindings","undefined","inputs","_i","bindingKeys_1","getOwnPropertyNames","bindingName","instance","outputs","_a","eventKeys_1","eventName","appendComponent","componentClass","location","resolveComponentFactory","appRef","componentRootNode","attachView","onDestroy","detachView","renderer","appendChild","__decorate","core_","InjectionRegistery","injectionService","defaults","Map","getByType","type","createByType","assignDefaults","injectComponent","register","destroy","compsByType","componentType","idx","indexOf","splice","destroyAll","destroyByType","comps","comps_1","comp","assign","has","set","throttle","func","wait","options","context","args","timeout","previous","later","leading","Date","apply","now","remaining","arguments","clearTimeout","trailing","setTimeout","tooltip_component_TooltipContentComponent","TooltipContentComponent","duration","clz","cssClass","ngAfterViewInit","position","_this","nativeElm","host","getBoundingClientRect","checkFlip","showCaret","addClass","setStyle","caretElm","onWindowResize","tooltip_component_decorate","static","target","descriptor","configurable","selector","template","encapsulation","None","styles","tooltip_service_TooltipService","_super","TooltipService","__extends","tooltip_service_decorate","tooltip_directive_TooltipDirective","TooltipDirective","tooltipService","viewContainerRef","tooltipCssClass","tooltipTitle","tooltipAppendToBody","tooltipSpacing","tooltipDisabled","tooltipShowCaret","tooltipPlacement","tooltipAlignment","center","tooltipType","popover","tooltipCloseOnClickOutside","tooltipCloseOnMouseLeave","tooltipHideTimeout","tooltipShowTimeout","tooltipShowEvent","all","tooltipImmediateExit","show","hide","focus","mouseover","ngOnDestroy","hideTooltip","onFocus","listensForFocus","showTooltip","onBlur","onMouseEnter","listensForHover","onMouseLeave","onMouseClick","immediate","time","createBoundOptions","addHideListeners","emit","tooltip","mouseEnterContentEvent","listen","mouseLeaveContentEvent","documentClickEvent","event","destroyFn","title","tooltipTemplate","tooltipContext","tooltip_directive_decorate","tooltip_module_TooltipModule","TooltipModule","tooltip_module_decorate","declarations","providers","imports","common_","entryComponents","chart_component_ChartComponent","ChartComponent","vcr","showLegend","animations","legendLabelClick","legendLabelActivate","legendLabelDeactivate","ngOnChanges","changes","update","legendColumns","legendType","getLegendType","legendOptions","chartColumns","chartWidth","Math","floor","view","legendWidth","scaleType","chart_component_decorate","changeDetection","OnPush","animations_","opacity","formatLabel","label","toLocaleDateString","toLocaleString","legend_component_LegendComponent","LegendComponent","cd","horizontal","labelClick","labelActivate","labelDeactivate","legendEntries","markForCheck","getLegendEntries","items","formattedLabel","findIndex","color","this_1","colors","getColor","data","isActive","entry","activeEntries","find","activate","deactivate","trackBy","index","legend_component_decorate","scale_legend_component_ScaleLegendComponent","ScaleLegendComponent","sanitizer","gradientValues","gradientString","range","domain","direction","gradient","bypassSecurityTrustStyle","splits","pairs","reverse","forEach","round","scale_legend_component_decorate","platform_browser_","legend_entry_component_LegendEntryComponent","LegendEntryComponent","select","toggle","legend_entry_component_decorate","trimLabel","max","trim","slice","advanced_legend_component_AdvancedLegendComponent","AdvancedLegendComponent","legendItems","labelFormatting","percentageFormatting","percentage","defaultValueFormatting","getTotal","reduce","sum","total","roundedTotal","getLegendItems","_value","displayLabel","origialLabel","advanced_legend_component_decorate","cache","newId","random","pow","colorSets","selectable","group","sortLinear","sort","a","b","sortByDomain","aVal","bVal","aIdx","bIdx","sortByTime","aDate","getTime","bDate","invertColor","external_d3_color_","percent","shadeRGBColor","visibility_observer_VisibilityObserver","VisibilityObserver","zone","visible","isVisible","runCheck","onVisibilityChange","run","check","offsetHeight","offsetWidth","runOutsideAngular","visibility_observer_decorate","base_chart_component_BaseChartComponent","BaseChartComponent","chartElement","scheme","schemeType","bindWindowResizeEvent","visibilityObserver","subscribe","unbindEvents","unsubscribe","results","cloneData","dims","getContainerDims","hostElem","parentNode","formatDates","series","j","resizeSubscription","subscription","external_rxjs_","pipe","operators_","data_1","copy","_b","seriesItem","seriesItemCopy","parse","base_chart_component_decorate","axis_label_component_AxisLabelComponent","AxisLabelComponent","textHeight","margin","strokeWidth","textAnchor","transform","orient","y","offset","x","axis_label_component_decorate","reduceTicks","ticks","maxTicks","reduced","modulus","x_axis_ticks_component_XAxisTicksComponent","XAxisTicksComponent","tickArguments","tickStroke","trimTicks","maxTickLength","showGridLines","rotateTicks","dimensionsChanged","verticalSpacing","rotateLabels","innerTickSize","outerTickSize","tickPadding","maxTicksLength","maxAllowedLength","updateDims","parseInt","ticksElement","scale","getTicks","tickFormatting","tickFormat","constructor","angle","getRotationAngle","adjustedScale","bandwidth","textTransform","tick","tickLength","tickTrim","wordWidth","min","baseWidth","maxBaseWidth","cos","PI","getMaxTicks","maxScaleTicks","tickValues","tickWidth","tickTransform","gridLineTransform","x_axis_ticks_component_decorate","x_axis_component_XAxisComponent","XAxisComponent","xOrient","xAxisOffset","xAxisClassName","labelOffset","fill","stroke","padding","xAxisTickCount","emitTicksHeight","newLabelOffset","x_axis_component_decorate","roundedRect","w","h","tl","tr","bl","br","retval","y_axis_ticks_component_YAxisTicksComponent","YAxisTicksComponent","showRefLabels","showRefLines","referenceLineLength","sign","tickSpacing","referenceLines","setReferencelines","y2","y1","dy","x2","x1","refMin","refMax","referenceAreaPath","gridLineWidth","tickHeight","y_axis_ticks_component_decorate","y_axis_component_YAxisComponent","YAxisComponent","yOrient","yAxisOffset","yAxisClassName","yAxisTickCount","emitTicksWidth","y_axis_component_decorate","axes_module_AxesModule","AxesModule","axes_module_decorate","color_helper_ColorHelper","ColorHelper","customColors","cs","colorDomain","generateColorScheme","colorScale","external_d3_scale_","points","external_d3_array_","valueScale","formattedValue_1","found","mapping","toLowerCase","getLinearGradientStops","start","colorValueScale","endColor","startVal","startColor","endVal","currentVal","stops","originalOffset","toFixed","stops_1","circle_series_component_CircleSeriesComponent","CircleSeriesComponent","barVisible","ngOnInit","gradientId","gradientFill","circle","getActiveCircle","indexActiveDataPoint","visibleValue","mapDataPointToCircle","cx","seriesName","tooltipLabel","xScale","Number","cy","yScale","d1","classNames","radius","gradientStops","getGradientStops","getTooltipText","getTooltipMinMaxText","onClick","activateCircle","deactivateCircle","circle_series_component_decorate","circle_component_CircleComponent","CircleComponent","Array","isArray","circle_component_decorate","grid_panel_component_GridPanelComponent","GridPanelComponent","grid_panel_component_decorate","grid_panel_series_component_GridPanelSeriesComponent","GridPanelSeriesComponent","gridPanels","getGridPanels","className","step","paddingInner","class","grid_panel_series_component_decorate","svg_linear_gradient_component_SvgLinearGradientComponent","SvgLinearGradientComponent","orientation","svg_linear_gradient_component_decorate","svg_radial_gradient_component_SvgRadialGradientComponent","SvgRadialGradientComponent","endOpacity","stopsInput","stopsDefault","startOpacity","svg_radial_gradient_component_decorate","timeline_component_Timeline","Timeline","onDomainChange","initialized","addBrush","getDims","offsetY","xDomain","getXDomain","getXScale","brush","updateBrush","filterId","filter","values","_c","includes","v","external_d3_brush_","extent","on","newDomain","external_d3_selection_","selection","invert","attr","timeline_component_decorate","area_component_AreaComponent","AreaComponent","hasGradient","loadAnimation","getGradient","updatePathEl","areaPath","startingPath","node","transition","path","area_component_decorate","tooltip_area_component_TooltipArea","TooltipArea","anchorOpacity","anchorPos","anchorValues","showPercentage","hover","getValues","xVal","groupName","val","d0","mouseMove","xPos","pageX","closestIndex","findClosestPointIndex","closestPoint","xSet","lastAnchorPos","ev","events","tooltipAnchor","dispatchEvent","minIndex","maxIndex","minDiff","MAX_VALUE","currentIndex","currentElement","curDiff","abs","getToolTipText","tooltipItem","tooltip_area_component_decorate","easeOutExpo","count_helper_count","countFrom","countTo","countDecimals","countDuration","callback","startTime","countDown","decimals","dec","requestAnimationFrame","timestamp","runCount","frameVal","progress","finished","decimalChecker","count_directive_CountUpDirective","CountUpDirective","countPrefix","countSuffix","countChange","countFinish","_countDecimals","_countTo","_countFrom","parseFloat","cancelAnimationFrame","animationReq","valueFormatting","count_directive_decorate","COMPONENTS","chart_common_module_ChartCommonModule","ChartCommonModule","chart_common_module_decorate","calculateViewDimensions","margins","showXAxis","showYAxis","_d","xAxisHeight","_e","yAxisWidth","_f","showXLabel","_g","showYLabel","_h","_j","_k","legendPosition","_l","columns","xOffset","chartHeight","getUniqueXDomainValues","valueSet","Set","results_1","add","from","getScaleType","checkDateType","every","D0Types","area_chart_component_AreaChartComponent","AreaChartComponent","legendTitle","baseValue","curve","external_d3_shape_","trimXAxisTicks","trimYAxisTicks","rotateXAxisTicks","maxXAxisTickLength","maxYAxisTickLength","roundDomains","timelineHeight","timelinePadding","area_chart_component_extends","xAxis","yAxis","showXAxisLabel","showYAxisLabel","legend","timeline","filteredDomain","yDomain","getYDomain","seriesDomain","getSeriesDomain","getYScale","updateTimeline","setColors","getLegendOptions","clipPathId","clipPath","timelineWidth","timelineXDomain","timelineXScale","timelineYScale","timelineTransform","xScaleMin","xScaleMax","autoScale","yScaleMin","yScaleMax","nice","date","num","values_1","isDate","updateDomain","updateHoveredVertical","hoveredVertical","deactivateAll","hideCircles","opts","updateYAxisWidth","updateXAxisHeight","onActivate","entries","onDeactivate","area_chart_component_decorate","area_chart_normalized_component_AreaChartNormalizedComponent","AreaChartNormalizedComponent","area_chart_normalized_component_extends","valueOf","area_chart_normalized_component_decorate","area_chart_stacked_component_AreaChartStackedComponent","AreaChartStackedComponent","area_chart_stacked_component_extends","this_2","area_chart_stacked_component_decorate","area_series_component_AreaSeriesComponent","AreaSeriesComponent","stacked","normalized","currentArea","startingArea","updateGradient","xProperty","y0","d0values","d1values","isInactive","area_series_component_decorate","area_chart_module_AreaChartModule","AreaChartModule","area_chart_module_decorate","bar_component_BarComponent","BarComponent","roundEdges","noBarWhenZero","hideBar","checkToHideBar","getStartingPath","getPath","getStartOpacity","getRadius","edges","bar_component_decorate","bar_horizontal_component_BarHorizontalComponent","BarHorizontalComponent","barPadding","showDataLabel","dataLabelMaxWidth","negative","positive","bar_horizontal_component_extends","rangeRound","onDataLabelMaxWidthChanged","size","bar_horizontal_component_decorate","bar_horizontal_2d_component_BarHorizontal2DComponent","BarHorizontal2DComponent","groupPadding","bar_horizontal_2d_component_extends","groupDomain","getGroupDomain","innerDomain","getInnerDomain","valuesDomain","getValueDomain","groupScale","getGroupScale","innerScale","getInnerScale","getValueScale","paddingOuter","groupTransform","groupIndex","bar_horizontal_2d_component_decorate","bar_horizontal_normalized_component_BarHorizontalNormalizedComponent","BarHorizontalNormalizedComponent","bar_horizontal_normalized_component_extends","valueDomain","bar_horizontal_normalized_component_decorate","bar_horizontal_stacked_component_BarHorizontalStackedComponent","BarHorizontalStackedComponent","bar_horizontal_stacked_component_extends","smallest","biggest","smallestSum","biggestSum","bar_horizontal_stacked_component_decorate","bar_vertical_component_BarVerticalComponent","BarVerticalComponent","dataLabelMaxHeight","bar_vertical_component_extends","yAxisTicks","some","isNaN","onDataLabelMaxHeightChanged","bar_vertical_component_decorate","bar_vertical_2d_component_BarVertical2DComponent","BarVertical2DComponent","bar_vertical_2d_component_extends","bar_vertical_2d_component_decorate","bar_vertical_normalized_component_BarVerticalNormalizedComponent","BarVerticalNormalizedComponent","bar_vertical_normalized_component_extends","bar_vertical_normalized_component_decorate","bar_vertical_stacked_component_BarVerticalStackedComponent","BarVerticalStackedComponent","bar_vertical_stacked_component_extends","bar_vertical_stacked_component_decorate","series_vertical_component_SeriesVerticalComponent","SeriesVerticalComponent","dataLabelHeightChanged","barsForDataLabels","updateTooltipSettings","d0Type","bars","bar","offset1","offset0","ariaLabel","tooltipText","updateDataLabels","section","totalPositive","totalNegative","trackDataLabelBy","barLabel","series_vertical_component_decorate","series_horizontal_component_SeriesHorizontal","SeriesHorizontal","dataLabelWidthChanged","click","series_horizontal_component_decorate","bar_label_component_BarLabelComponent","BarLabelComponent","horizontalPadding","verticalPadding","getSize","formatedValue","barX","barWidth","barY","barHeight","bar_label_component_decorate","bar_chart_module_BarChartModule","BarChartModule","bar_chart_module_decorate","getDomain","minVal","maxVal","getScale","bubble_chart_component_BubbleChartComponent","BubbleChartComponent","maxRadius","minRadius","bubblePadding","bubble_chart_component_extends","rDomain","getRDomain","rScale","getRScale","setScales","getBubblePadding","yMin","xMin","yMax","xMax","xScaleType","yScaleType","Infinity","bubble_chart_component_decorate","bubble_series_component_BubbleSeriesComponent","BubbleSeriesComponent","circles","getCircles","hasRadius","hasTooltipLabel","hasSeriesName","radiusValue","xAxisLabel","yAxisLabel","bubble_series_component_decorate","bubble_chart_module_BubbleChartModule","BubbleChartModule","bubble_chart_module_decorate","force_directed_graph_component_ForceDirectedGraphComponent","ForceDirectedGraphComponent","force","external_d3_force_","forceLink","nodes","links","groupResultsBy","force_directed_graph_component_extends","alpha","restart","trackLinkBy","link","trackNodeBy","onDragStart","$event","alphaTarget","draggingNode","draggingStart","fx","fy","onDrag","onDragEnd","force_directed_graph_component_decorate","read","force_directed_graph_module_ForceDirectedGraphModule","ForceDirectedGraphModule","force_directed_graph_module_decorate","heat_map_cell_component_HeatMapCellComponent","HeatMapCellComponent","gradientUrl","animateToCurrentForm","heat_map_cell_component_decorate","heat_map_cell_series_component_HeatCellSeriesComponent","HeatCellSeriesComponent","cells","getCells","row","cell","heat_map_cell_series_component_decorate","heat_map_component_HeatMapComponent","HeatMapComponent","innerPadding","heat_map_component_extends","rects","getRects","getDimension","N","L","replace","split","f","yVal","rx","heat_map_component_decorate","heat_map_module_HeatMapModule","HeatMapModule","heat_map_module_decorate","line_component_LineComponent","LineComponent","initialPath","line_component_decorate","strokeDasharray","strokeDashoffset","line_chart_component_LineChartComponent","LineChartComponent","line_chart_component_extends","hasRange","line_chart_component_decorate","line_series_component_LineSeriesComponent","LineSeriesComponent","updateGradients","sortData","lineGen","getLineGenerator","areaGen","getAreaGenerator","getRangeGenerator","outerPath","areaGradientStops","line_series_component_decorate","line_chart_module_LineChartModule","LineChartModule","line_chart_module_decorate","twoPI","polar_chart_component_PolarChartComponent","PolarChartComponent","rangeFillOpacity","showSeriesOnHover","yAxisMinScale","labelTrim","labelTrimSize","polar_chart_component_extends","setDims","setTicks","halfWidth","halfHeight","outerRadius","yOffset","yAxisDims","__assign","transformYAxis","transformPlot","xValues","getXValues","yAxisScale","xAxisTickFormatting","thetaTicks","startAngle","dd","startPos","sin","innerRadius","endAngle","pos","radiusTicks","getYValues","polar_chart_component_decorate","polar_series_component_PolarSeriesComponent","PolarSeriesComponent","circleRadius","line","linearScaleType","seriesColor","getAngle","active","inactive","defaultTooltipText","polar_series_component_decorate","advanced_pie_chart_component_AdvancedPieChartComponent","AdvancedPieChartComponent","advanced_pie_chart_component_extends","advanced_pie_chart_component_decorate","pie_label_component_PieLabelComponent","PieLabelComponent","isIE","test","navigator","userAgent","startRadius","explodeSlices","innerPos","centroid","outerPos","textX","textY","midAngle","pie_label_component_decorate","pie_arc_component_PieArcComponent","PieArcComponent","cornerRadius","animate","pointerEvents","dblclick","getPointerEvents","calc","calculateArc","radialGradientId","updateAnimation","selectAll","attrTween","_current","copyOfD","interpolater","external_d3_interpolate_","_timeout","onDblClick","preventDefault","stopPropagation","nativeEvent","pie_arc_component_decorate","pie_chart_component_PieChartComponent","PieChartComponent","labels","doughnut","arcWidth","trimLabels","maxLabelLength","pie_chart_component_extends","hasNoOptionalMarginsSet","translation","pie_chart_component_decorate","gridSize","len","minWidth","rows","cols","ceil","gridLayout","designatedTotal","res","cardWidth","cardHeight","extra","pie_grid_component_PieGridComponent","PieGridComponent","pie_grid_component_extends","getSeries","count","external_d3_format_","other","pie_grid_component_decorate","pie_grid_series_component_PieGridSeriesComponent","PieGridSeriesComponent","layout","arcs","getArcs","arc","pie_grid_series_component_decorate","pie_series_component_PieSeriesComponent","PieSeriesComponent","arcData","pieGenerator","calculateLabelPositions","outerArc","pieData","labelPositions","labelVisible","myArc","showLabels","getTooltipTitle","labelText","pie_series_component_decorate","pie_chart_module_PieChartModule","PieChartModule","pie_chart_module_decorate","polar_chart_module_PolarChartModule","PolarChartModule","polar_chart_module_decorate","card_component_CardComponent","CardComponent","textFontSize","bandHeight","textPadding","labelFontSize","hasValue","card","textWidth","cardData","transformBand","paddedValue","setPadding","bandPath","scaleText","startCount","medianSize","repeat","val_1","decs","valueFormatting_1","textEl","availableWidth","availableHeight","resizeScale","card_component_decorate","card_series_component_CardSeriesComponent","CardSeriesComponent","emptyColor","sortedLengths","cards","getCards","emptySlots","yPadding","xPadding","valueColor","cardColor","bandColor","textColor","card_series_component_decorate","number_card_component_NumberCardComponent","NumberCardComponent","number_card_component_extends","observers","number_card_component_decorate","number_card_module_NumberCardModule","NumberCardModule","number_card_module_decorate","tree_map_cell_component_TreeMapCellComponent","TreeMapCellComponent","cellData","formattedValue","getTextColor","tree_map_cell_component_decorate","tree_map_cell_series_component_TreeMapCellSeriesComponent","TreeMapCellSeriesComponent","children","depth","x0","valueType","tree_map_cell_series_component_decorate","tree_map_component_TreeMapComponent","TreeMapComponent","tree_map_component_extends","treemap","external_d3_hierarchy_","parentId","isRoot","tree_map_component_decorate","tree_map_module_TreeMapModule","TreeMapModule","tree_map_module_decorate","linear_gauge_component_LinearGaugeComponent","LinearGaugeComponent","valueResizeScale","unitsResizeScale","valueTextTransform","valueTranslate","unitsTextTransform","unitsTranslate","linear_gauge_component_extends","hasPreviousValue","previousValue","displayValue","getDisplayValue","transformLine","el","valueTextEl","unitsTextEl","oldScale","resizeScaleWidth","resizeScaleHeight","linear_gauge_component_decorate","gauge_component_GaugeComponent","GaugeComponent","bigSegments","smallSegments","showAxis","angleSpan","showText","rotation","gauge_component_extends","availableRadius","radiusPerArc","textRadius","backgroundArc","valueArc","dataMin","dataMax","textValue","availableSpace","gauge_component_decorate","gauge_arc_component_GaugeArcComponent","GaugeArcComponent","gauge_arc_component_decorate","gauge_axis_component_GaugeAxisComponent","GaugeAxisComponent","rotate","rotationAngle","bigTickSegment","smallTickSegment","big","small","startDistance","textDist","angleDeg","getTextAnchor","skip","text","getTickPath","smallAngle","lineGenerator","gauge_axis_component_decorate","gauge_module_GaugeModule","GaugeModule","gauge_module_decorate","ngx_charts_module_NgxChartsModule","NgxChartsModule","ngx_charts_module_decorate","tick_format_helper_tickFormat","fieldType","groupByType","external_d3_time_format_","formatter"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/animations\"), require(\"@angular/common\"), require(\"@angular/core\"), require(\"@angular/platform-browser\"), require(\"d3-array\"), require(\"d3-brush\"), require(\"d3-color\"), require(\"d3-force\"), require(\"d3-format\"), require(\"d3-hierarchy\"), require(\"d3-interpolate\"), require(\"d3-scale\"), require(\"d3-selection\"), require(\"d3-shape\"), require(\"d3-time-format\"), require(\"rxjs\"), require(\"rxjs/operators\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ngx-charts\", [\"@angular/animations\", \"@angular/common\", \"@angular/core\", \"@angular/platform-browser\", \"d3-array\", \"d3-brush\", \"d3-color\", \"d3-force\", \"d3-format\", \"d3-hierarchy\", \"d3-interpolate\", \"d3-scale\", \"d3-selection\", \"d3-shape\", \"d3-time-format\", \"rxjs\", \"rxjs/operators\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngx-charts\"] = factory(require(\"@angular/animations\"), require(\"@angular/common\"), require(\"@angular/core\"), require(\"@angular/platform-browser\"), require(\"d3-array\"), require(\"d3-brush\"), require(\"d3-color\"), require(\"d3-force\"), require(\"d3-format\"), require(\"d3-hierarchy\"), require(\"d3-interpolate\"), require(\"d3-scale\"), require(\"d3-selection\"), require(\"d3-shape\"), require(\"d3-time-format\"), require(\"rxjs\"), require(\"rxjs/operators\"));\n\telse\n\t\troot[\"ngx-charts\"] = factory(root[\"@angular/animations\"], root[\"@angular/common\"], root[\"@angular/core\"], root[\"@angular/platform-browser\"], root[\"d3-array\"], root[\"d3-brush\"], root[\"d3-color\"], root[\"d3-force\"], root[\"d3-format\"], root[\"d3-hierarchy\"], root[\"d3-interpolate\"], root[\"d3-scale\"], root[\"d3-selection\"], root[\"d3-shape\"], root[\"d3-time-format\"], root[\"rxjs\"], root[\"rxjs/operators\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__angular_animations__, __WEBPACK_EXTERNAL_MODULE__angular_common__, __WEBPACK_EXTERNAL_MODULE__angular_core__, __WEBPACK_EXTERNAL_MODULE__angular_platform_browser__, __WEBPACK_EXTERNAL_MODULE_d3_array__, __WEBPACK_EXTERNAL_MODULE_d3_brush__, __WEBPACK_EXTERNAL_MODULE_d3_color__, __WEBPACK_EXTERNAL_MODULE_d3_force__, __WEBPACK_EXTERNAL_MODULE_d3_format__, __WEBPACK_EXTERNAL_MODULE_d3_hierarchy__, __WEBPACK_EXTERNAL_MODULE_d3_interpolate__, __WEBPACK_EXTERNAL_MODULE_d3_scale__, __WEBPACK_EXTERNAL_MODULE_d3_selection__, __WEBPACK_EXTERNAL_MODULE_d3_shape__, __WEBPACK_EXTERNAL_MODULE_d3_time_format__, __WEBPACK_EXTERNAL_MODULE_rxjs__, __WEBPACK_EXTERNAL_MODULE_rxjs_operators__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".textDataLabel {\\n  font-size: 11px; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ngx-charts {\\n  float: left;\\n  overflow: visible; }\\n  .ngx-charts .circle,\\n  .ngx-charts .bar,\\n  .ngx-charts .arc {\\n    cursor: pointer; }\\n  .ngx-charts .bar.active, .ngx-charts .bar:hover,\\n  .ngx-charts .cell.active,\\n  .ngx-charts .cell:hover,\\n  .ngx-charts .arc.active,\\n  .ngx-charts .arc:hover,\\n  .ngx-charts .card.active,\\n  .ngx-charts .card:hover {\\n    opacity: 0.8;\\n    transition: opacity 100ms ease-in-out; }\\n  .ngx-charts .bar:focus,\\n  .ngx-charts .cell:focus,\\n  .ngx-charts .arc:focus,\\n  .ngx-charts .card:focus {\\n    outline: none; }\\n  .ngx-charts .bar.hidden,\\n  .ngx-charts .cell.hidden,\\n  .ngx-charts .arc.hidden,\\n  .ngx-charts .card.hidden {\\n    display: none; }\\n  .ngx-charts g:focus {\\n    outline: none; }\\n  .ngx-charts .line-series.inactive,\\n  .ngx-charts .line-series-range.inactive,\\n  .ngx-charts .polar-series-path.inactive,\\n  .ngx-charts .polar-series-area.inactive,\\n  .ngx-charts .area-series.inactive {\\n    transition: opacity 100ms ease-in-out;\\n    opacity: .2; }\\n  .ngx-charts .line-highlight {\\n    display: none; }\\n    .ngx-charts .line-highlight.active {\\n      display: block; }\\n  .ngx-charts .area {\\n    opacity: 0.6; }\\n  .ngx-charts .circle:hover {\\n    cursor: pointer; }\\n  .ngx-charts .label {\\n    font-size: 12px;\\n    font-weight: normal; }\\n  .ngx-charts .tooltip-anchor {\\n    fill: black; }\\n  .ngx-charts .gridline-path {\\n    stroke: #ddd;\\n    stroke-width: 1;\\n    fill: none; }\\n  .ngx-charts .refline-path {\\n    stroke: #a8b2c7;\\n    stroke-width: 1;\\n    stroke-dasharray: 5;\\n    stroke-dashoffset: 5; }\\n  .ngx-charts .refline-label {\\n    font-size: 9px; }\\n  .ngx-charts .reference-area {\\n    fill-opacity: 0.05;\\n    fill: #000; }\\n  .ngx-charts .gridline-path-dotted {\\n    stroke: #ddd;\\n    stroke-width: 1;\\n    fill: none;\\n    stroke-dasharray: 1, 20;\\n    stroke-dashoffset: 3; }\\n  .ngx-charts .grid-panel rect {\\n    fill: none; }\\n  .ngx-charts .grid-panel.odd rect {\\n    fill: rgba(0, 0, 0, 0.05); }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".advanced-pie-legend {\\n  float: left;\\n  position: relative;\\n  top: 50%;\\n  transform: translate(0, -50%); }\\n  .advanced-pie-legend .total-value {\\n    font-size: 36px; }\\n  .advanced-pie-legend .total-label {\\n    font-size: 24px;\\n    margin-bottom: 19px; }\\n  .advanced-pie-legend .legend-items-container {\\n    width: 100%; }\\n    .advanced-pie-legend .legend-items-container .legend-items {\\n      white-space: nowrap;\\n      overflow: auto; }\\n      .advanced-pie-legend .legend-items-container .legend-items .legend-item {\\n        margin-right: 20px;\\n        display: inline-block;\\n        cursor: pointer; }\\n        .advanced-pie-legend .legend-items-container .legend-items .legend-item:focus {\\n          outline: none; }\\n        .advanced-pie-legend .legend-items-container .legend-items .legend-item:hover {\\n          color: #000;\\n          -webkit-transition: 0.2s;\\n          -moz-transition: 0.2s;\\n          transition: 0.2s; }\\n        .advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value {\\n          font-size: 24px;\\n          margin-top: -6px;\\n          margin-left: 11px; }\\n        .advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label {\\n          font-size: 14px;\\n          opacity: 0.7;\\n          margin-left: 11px;\\n          margin-top: -6px; }\\n        .advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent {\\n          font-size: 24px;\\n          opacity: 0.7;\\n          margin-left: 11px; }\\n        .advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color {\\n          border-left: 4px solid;\\n          width: 4px;\\n          height: 42px;\\n          float: left;\\n          margin-right: 7px; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".chart-legend {\\n  display: inline-block;\\n  padding: 0;\\n  width: auto !important; }\\n  .chart-legend .legend-title {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    margin-left: 10px;\\n    margin-bottom: 5px;\\n    font-size: 14px;\\n    font-weight: bold; }\\n  .chart-legend ul, .chart-legend li {\\n    padding: 0;\\n    margin: 0;\\n    list-style: none; }\\n  .chart-legend .horizontal-legend li {\\n    display: inline-block; }\\n  .chart-legend .legend-wrap {\\n    width: calc(100% - 10px); }\\n  .chart-legend .legend-labels {\\n    line-height: 85%;\\n    list-style: none;\\n    text-align: left;\\n    float: left;\\n    width: 100%;\\n    border-radius: 3px;\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n    white-space: nowrap;\\n    background: rgba(0, 0, 0, 0.05); }\\n  .chart-legend .legend-label {\\n    cursor: pointer;\\n    font-size: 90%;\\n    margin: 8px;\\n    color: #AFB7C8; }\\n    .chart-legend .legend-label:hover {\\n      color: #000;\\n      -webkit-transition: 0.2s;\\n      -moz-transition: 0.2s;\\n      transition: 0.2s; }\\n    .chart-legend .legend-label .active .legend-label-text {\\n      color: #000; }\\n  .chart-legend .legend-label-color {\\n    display: inline-block;\\n    height: 15px;\\n    width: 15px;\\n    margin-right: 5px;\\n    color: #5b646b;\\n    border-radius: 3px; }\\n  .chart-legend .legend-label-text {\\n    display: inline-block;\\n    vertical-align: top;\\n    line-height: 15px;\\n    font-size: 12px;\\n    width: calc(100% - 20px);\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    overflow: hidden; }\\n  .chart-legend .legend-title-text {\\n    vertical-align: bottom;\\n    display: inline-block;\\n    line-height: 16px;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".chart-legend {\\n  display: inline-block;\\n  padding: 0;\\n  width: auto !important; }\\n  .chart-legend .scale-legend {\\n    text-align: center;\\n    display: flex;\\n    flex-direction: column; }\\n  .chart-legend .scale-legend-wrap {\\n    display: inline-block;\\n    flex: 1;\\n    width: 30px;\\n    border-radius: 5px;\\n    margin: 0 auto; }\\n  .chart-legend .scale-legend-label {\\n    font-size: 12px; }\\n  .chart-legend .horizontal-legend.scale-legend {\\n    flex-direction: row; }\\n  .chart-legend .horizontal-legend .scale-legend-wrap {\\n    width: auto;\\n    height: 30px;\\n    margin: 0 16px; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".timeline .brush-background {\\n  fill: rgba(0, 0, 0, 0.05); }\\n\\n.timeline .brush .selection {\\n  fill: rgba(0, 0, 0, 0.1);\\n  stroke-width: 1px;\\n  stroke: #888888; }\\n\\n.timeline .brush .handle {\\n  fill-opacity: 0; }\\n\\n.timeline .embedded-chart {\\n  opacity: 0.6; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ngx-charts-tooltip-content {\\n  position: fixed;\\n  border-radius: 3px;\\n  z-index: 5000;\\n  display: block;\\n  font-weight: normal;\\n  opacity: 0;\\n  pointer-events: none !important; }\\n  .ngx-charts-tooltip-content.type-popover {\\n    background: #fff;\\n    color: #060709;\\n    border: 1px solid #72809b;\\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12);\\n    font-size: 13px;\\n    padding: 4px; }\\n    .ngx-charts-tooltip-content.type-popover .tooltip-caret {\\n      position: absolute;\\n      z-index: 5001;\\n      width: 0;\\n      height: 0; }\\n      .ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left {\\n        border-top: 7px solid transparent;\\n        border-bottom: 7px solid transparent;\\n        border-left: 7px solid #fff; }\\n      .ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top {\\n        border-left: 7px solid transparent;\\n        border-right: 7px solid transparent;\\n        border-top: 7px solid #fff; }\\n      .ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right {\\n        border-top: 7px solid transparent;\\n        border-bottom: 7px solid transparent;\\n        border-right: 7px solid #fff; }\\n      .ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom {\\n        border-left: 7px solid transparent;\\n        border-right: 7px solid transparent;\\n        border-bottom: 7px solid #fff; }\\n  .ngx-charts-tooltip-content.type-tooltip {\\n    color: #fff;\\n    background: rgba(0, 0, 0, 0.75);\\n    font-size: 12px;\\n    padding: 0 10px;\\n    text-align: center;\\n    pointer-events: auto; }\\n    .ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left {\\n      border-top: 7px solid transparent;\\n      border-bottom: 7px solid transparent;\\n      border-left: 7px solid rgba(0, 0, 0, 0.75); }\\n    .ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top {\\n      border-left: 7px solid transparent;\\n      border-right: 7px solid transparent;\\n      border-top: 7px solid rgba(0, 0, 0, 0.75); }\\n    .ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right {\\n      border-top: 7px solid transparent;\\n      border-bottom: 7px solid transparent;\\n      border-right: 7px solid rgba(0, 0, 0, 0.75); }\\n    .ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom {\\n      border-left: 7px solid transparent;\\n      border-right: 7px solid transparent;\\n      border-bottom: 7px solid rgba(0, 0, 0, 0.75); }\\n  .ngx-charts-tooltip-content .tooltip-label {\\n    display: block;\\n    line-height: 1em;\\n    padding: 8px 5px 5px 5px;\\n    font-size: 1em; }\\n  .ngx-charts-tooltip-content .tooltip-val {\\n    display: block;\\n    font-size: 1.3em;\\n    line-height: 1em;\\n    padding: 0 5px 8px 5px; }\\n  .ngx-charts-tooltip-content .tooltip-caret {\\n    position: absolute;\\n    z-index: 5001;\\n    width: 0;\\n    height: 0; }\\n  .ngx-charts-tooltip-content.position-right {\\n    transform: translate3d(10px, 0, 0); }\\n  .ngx-charts-tooltip-content.position-left {\\n    transform: translate3d(-10px, 0, 0); }\\n  .ngx-charts-tooltip-content.position-top {\\n    transform: translate3d(0, -10px, 0); }\\n  .ngx-charts-tooltip-content.position-bottom {\\n    transform: translate3d(0, 10px, 0); }\\n  .ngx-charts-tooltip-content.animate {\\n    opacity: 1;\\n    transition: opacity 0.3s, transform 0.3s;\\n    transform: translate3d(0, 0, 0);\\n    pointer-events: auto; }\\n\\n.area-tooltip-container {\\n  padding: 5px 0;\\n  pointer-events: none; }\\n\\n.tooltip-item {\\n  text-align: left;\\n  line-height: 1.2em;\\n  padding: 5px 0; }\\n  .tooltip-item .tooltip-item-color {\\n    display: inline-block;\\n    height: 12px;\\n    width: 12px;\\n    margin-right: 5px;\\n    color: #5b646b;\\n    border-radius: 3px; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".force-directed-graph .edge {\\n  stroke: #333; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".gauge .background-arc path {\\n  fill: rgba(0, 0, 0, 0.05); }\\n\\n.gauge .gauge-tick path {\\n  stroke: #666; }\\n\\n.gauge .gauge-tick text {\\n  font-size: 12px;\\n  fill: #666;\\n  font-weight: bold; }\\n\\n.gauge .gauge-tick-large path {\\n  stroke-width: 2px; }\\n\\n.gauge .gauge-tick-small path {\\n  stroke-width: 1px; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".linear-gauge {\\n  cursor: pointer; }\\n  .linear-gauge .background-bar path {\\n    fill: rgba(0, 0, 0, 0.05); }\\n  .linear-gauge .units {\\n    fill: #666; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"ngx-charts-number-card .cell .trimmed-label {\\n  font-size: 12px;\\n  pointer-events: none;\\n  overflow: hidden;\\n  text-align: left;\\n  line-height: 1em; }\\n  ngx-charts-number-card .cell .trimmed-label p {\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    width: 100%;\\n    padding: 0;\\n    margin: 0; }\\n\\nngx-charts-number-card .cell .value-text {\\n  pointer-events: none; }\\n\\nngx-charts-number-card .number-card.clickable .cell .card, ngx-charts-number-card .number-card.clickable .cell .card-band {\\n  cursor: pointer; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".advanced-pie {\\n  display: inline-block;\\n  float: left; }\\n\\n.advanced-pie-legend-wrapper {\\n  display: inline-block; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pie-label {\\n  font-size: 11px; }\\n  .pie-label.animation {\\n    animation: 750ms ease-in fadeIn; }\\n\\n@keyframes fadeIn {\\n  from {\\n    opacity: 0; }\\n  to {\\n    opacity: 1; } }\\n\\n.pie-label-line {\\n  stroke-dasharray: 100%; }\\n  .pie-label-line.animation {\\n    animation: 3s linear drawOut;\\n    transition: d 750ms; }\\n\\n@keyframes drawOut {\\n  from {\\n    stroke-dashoffset: 100%; }\\n  to {\\n    stroke-dashoffset: 0; } }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pie-grid .arc1 {\\n  opacity: 0.4; }\\n\\n.pie-grid .percent-label {\\n  font-size: 16px;\\n  font-weight: 400; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".polar-chart .polar-chart-background {\\n  fill: none; }\\n\\n.polar-chart .radial-gridline-path {\\n  stroke-dasharray: 10 10;\\n  fill: none; }\\n\\n.polar-chart .pie-label-line {\\n  stroke: #2f3646; }\\n\\n.polar-charts-series .polar-series-area {\\n  pointer-events: none; }\\n\\n.polar-series-path {\\n  pointer-events: none; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".tree-map .treemap-val {\\n  font-size: 1.3em;\\n  padding-top: 5px;\\n  display: inline-block; }\\n\\n.tree-map .treemap-label p {\\n  display: table-cell;\\n  text-align: center;\\n  line-height: 1.2em;\\n  vertical-align: middle; }\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\n        var result = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./bar-label.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./base-chart.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./advanced-legend.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./legend.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./scale-legend.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./timeline.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./tooltip.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","declare let global: any;\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root: any;\nif (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n}\n\n// tslint:disable-next-line:variable-name\nexport const MouseEvent = root.MouseEvent as MouseEvent & {\n  prototype?: MouseEvent;\n  new (typeArg: string, eventInitDict?: MouseEventInit): MouseEvent;\n};\n\nexport function createMouseEvent(name: string, bubbles: boolean = false, cancelable: boolean = true): MouseEvent {\n  // Calling new of an event does not work correctly on IE. The following is a tested workaround\n  // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n  if (typeof(MouseEvent) === 'function') {\n    // Sane browsers\n    return new MouseEvent(name, {bubbles, cancelable});\n  } else {\n    // IE\n    const event = document.createEvent('MouseEvent');\n    event.initEvent(name, bubbles, cancelable);\n    return event;\n  }\n}\n","\n        var result = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./force-directed-graph.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./gauge.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./linear-gauge.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","// The export is needed here to generate a valid polyfills.metadata.json file\nexport function ngxChartsPolyfills() {\n  // IE11 fix\n  // Ref: https://github.com/swimlane/ngx-charts/issues/386\n  if (typeof(SVGElement) !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n    SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n  }\n}\n\nngxChartsPolyfills();\n","export enum PlacementTypes {\n  top = 'top' as any,\n  bottom = 'bottom' as any,\n  left = 'left' as any,\n  right = 'right' as any\n}\n","import { PlacementTypes } from './placement.type';\n\nconst caretOffset = 7;\n\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === 'top') {\n    return elDimensions.top - caretOffset;\n  }\n\n  if (alignment === 'bottom') {\n    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n  }\n\n  if (alignment === 'center') {\n    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n  }\n\n  return undefined;\n}\n\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === 'left') {\n    return elDimensions.left - caretOffset;\n  }\n\n  if (alignment === 'right') {\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n  }\n\n  if (alignment === 'center') {\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n  }\n\n  return undefined;\n}\n\n/**\n * Position helper for the popover directive.\n * \n * @export\n * @class PositionHelper\n */\nexport class PositionHelper {\n\n  /**\n   * Calculate vertical alignment position\n   * \n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} alignment\n   * @returns {number}\n   * \n   * @memberOf PositionHelper\n   */\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment): number {\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.height > window.innerHeight) {\n      result = window.innerHeight - popoverDimensions.height;\n    }\n\n    return result;\n  }\n\n  /**\n   * Calculate vertical caret position\n   * \n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} caretDimensions\n   * @param {any} alignment\n   * @returns {number}\n   * \n   * @memberOf PositionHelper\n   */\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {\n    let result;\n\n    if (alignment === 'top') {\n      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n    }\n\n    if (alignment === 'bottom') {\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n    }\n\n    if (alignment === 'center') {\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n    }\n\n    const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n      result += (popoverPosition + popoverDimensions.height - window.innerHeight);\n    }\n\n    return result;\n  }\n\n  /**\n   * Calculate horz alignment position\n   * \n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} alignment\n   * @returns {number}\n   * \n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment): number {\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.width > window.innerWidth) {\n      result = window.innerWidth - popoverDimensions.width;\n    }\n\n    return result;\n  }\n\n  /**\n   * Calculate horz caret position\n   * \n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} caretDimensions\n   * @param {any} alignment\n   * @returns {number}\n   * \n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {\n    let result;\n\n    if (alignment === 'left') {\n      result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n    }\n\n    if (alignment === 'right') {\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n    }\n\n    if (alignment === 'center') {\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n    }\n\n    const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n      result += (popoverPosition + popoverDimensions.width - window.innerWidth);\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if the element's position should be flipped\n   * \n   * @static\n   * @param {any} elDimensions\n   * @param {any} popoverDimensions\n   * @param {any} placement\n   * @param {any} spacing\n   * @returns {boolean}\n   * \n   * @memberOf PositionHelper\n   */\n  static shouldFlip(elDimensions, popoverDimensions, placement, spacing): boolean {\n    let flip = false;\n\n    if (placement === 'right') {\n      if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'left') {\n      if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'top') {\n      if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'bottom') {\n      if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n        flip = true;\n      }\n    }\n\n    return flip;\n  }\n\n  /**\n   * Position caret\n   * \n   * @static\n   * @param {any} placement\n   * @param {any} elmDim\n   * @param {any} hostDim\n   * @param {any} caretDimensions\n   * @param {any} alignment\n   * @returns {*}\n   * \n   * @memberOf PositionHelper\n   */\n  static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment): any {\n    let top = 0;\n    let left = 0;\n\n    if (placement === PlacementTypes.right) {\n      left = -7;\n      top = PositionHelper.calculateVerticalCaret(\n        hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.left) {\n      left = elmDim.width;\n      top = PositionHelper.calculateVerticalCaret(\n        hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.top) {\n      top = elmDim.height;\n      left = PositionHelper.calculateHorizontalCaret(\n        hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.bottom) {\n      top = -7;\n      left = PositionHelper.calculateHorizontalCaret(\n        hostDim, elmDim, caretDimensions, alignment);\n    }\n    \n    return { top, left };\n  }\n\n  /**\n   * Position content\n   * \n   * @static\n   * @param {any} placement\n   * @param {any} elmDim\n   * @param {any} hostDim\n   * @param {any} spacing\n   * @param {any} alignment\n   * @returns {*}\n   * \n   * @memberOf PositionHelper\n   */\n  static positionContent(placement, elmDim, hostDim, spacing, alignment): any {\n    let top = 0;\n    let left = 0;\n\n    if (placement === PlacementTypes.right) {\n      left = hostDim.left + hostDim.width + spacing;\n      top = PositionHelper.calculateVerticalAlignment(\n        hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.left) {\n      left = hostDim.left - elmDim.width - spacing;\n      top = PositionHelper.calculateVerticalAlignment(\n        hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.top) {\n      top = hostDim.top - elmDim.height - spacing;\n      left = PositionHelper.calculateHorizontalAlignment(\n        hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.bottom) {\n      top = hostDim.top + hostDim.height + spacing;\n      left = PositionHelper.calculateHorizontalAlignment(\n        hostDim, elmDim, alignment);\n    }\n\n    return { top, left };\n  }\n\n  /**\n   * Determine placement based on flip\n   * \n   * @static\n   * @param {any} placement\n   * @param {any} elmDim\n   * @param {any} hostDim\n   * @param {any} spacing\n   * @returns {*}\n   * \n   * @memberOf PositionHelper\n   */\n  static determinePlacement(placement, elmDim, hostDim, spacing): any {\n    const shouldFlip = PositionHelper.shouldFlip(\n      hostDim,\n      elmDim,\n      placement,\n      spacing);\n\n    if(shouldFlip) {\n      if (placement === PlacementTypes.right) {\n        return PlacementTypes.left;\n      } else if (placement === PlacementTypes.left) {\n        return PlacementTypes.right;\n      } else if (placement === PlacementTypes.top) {\n        return PlacementTypes.bottom;\n      } else if (placement === PlacementTypes.bottom) {\n        return PlacementTypes.top;\n      }\n    }\n\n    return placement;\n  }\n\n}\n","export enum StyleTypes {\n  popover = 'popover' as any,\n  tooltip = 'tooltip' as any\n}\n","export enum AlignmentTypes {\n  left = 'left' as any,\n  center = 'center' as any,\n  right = 'right' as any\n}\n","export enum ShowTypes {\n  all = 'all' as any,\n  focus = 'focus' as any,\n  mouseover = 'mouseover' as any\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Injectable,\n  Injector,\n  EmbeddedViewRef,\n  Type,\n  Renderer2\n} from '@angular/core';\n\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n * @class InjectionService\n */\n@Injectable()\nexport class InjectionService {\n  static globalRootViewContainer: ComponentRef<any> = null;\n\n  /**\n   * Sets a default global root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   */\n  static setGlobalRootViewContainer(container: ComponentRef<any>): void {\n    InjectionService.globalRootViewContainer = container;\n  }\n\n  private _container: ComponentRef<any>;\n\n  constructor(\n    private applicationRef: ApplicationRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector\n  ) {}\n\n  /**\n   * Gets the root view container to inject the component to.\n   *\n   * @returns {ComponentRef<any>}\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainer(): ComponentRef<any> {\n    const rootComponents = this.applicationRef.components;\n\n    // fix cannot read length of undefined\n    if (rootComponents) {\n      if (rootComponents.length) return rootComponents[0];\n    }\n\n    if (this._container) return this._container;\n    if (InjectionService.globalRootViewContainer) return InjectionService.globalRootViewContainer;\n\n    throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer.');\n  }\n\n  /**\n   * Overrides the default root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param {any} container\n   *\n   * @memberOf InjectionService\n   */\n  setRootViewContainer(container): void {\n    this._container = container;\n  }\n\n  /**\n   * Gets the html element for a component ref.\n   *\n   * @param {ComponentRef<any>} componentRef\n   * @returns {HTMLElement}\n   *\n   * @memberOf InjectionService\n   */\n  getComponentRootNode(componentRef: any): HTMLElement {\n    // the top most component root node has no `hostView`\n    if (!componentRef.hostView) return componentRef.element.nativeElement;\n\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n\n  /**\n   * Gets the root component container html element.\n   *\n   * @returns {HTMLElement}\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainerNode(): HTMLElement {\n    return this.getComponentRootNode(this.getRootViewContainer());\n  }\n\n  /**\n   * Projects the bindings onto the component\n   *\n   * @param {ComponentRef<any>} component\n   * @param {*} options\n   * @returns {ComponentRef<any>}\n   *\n   * @memberOf InjectionService\n   */\n  projectComponentBindings(component: ComponentRef<any>, bindings: any): ComponentRef<any> {\n    if (bindings) {\n      if (bindings.inputs !== undefined) {\n        const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n        for (const bindingName of bindingKeys) {\n          component.instance[bindingName] = bindings.inputs[bindingName];\n        }\n      }\n\n      if (bindings.outputs !== undefined) {\n        const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n        for (const eventName of eventKeys) {\n          component.instance[eventName] = bindings.outputs[eventName];\n        }\n      }\n    }\n\n    return component;\n  }\n\n  /**\n   * Appends a component to a adjacent location\n   *\n   * @template T\n   * @param {Type<T>} componentClass\n   * @param {*} [options={}]\n   * @param {Element} [location=this.getRootViewContainerNode()]\n   * @returns {ComponentRef<any>}\n   *\n   * @memberOf InjectionService\n   */\n  appendComponent<T>(\n    componentClass: Type<T>,\n    bindings: any = {},\n    location: Element = this.getRootViewContainerNode()\n  ): ComponentRef<any> {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentClass);\n    const componentRef: any = componentFactory.create(this.injector);\n    const appRef: any = this.applicationRef;\n    const componentRootNode = this.getComponentRootNode(componentRef);\n\n    // project the options passed to the component instance\n    this.projectComponentBindings(componentRef, bindings);\n\n    appRef.attachView(componentRef.hostView);\n\n    componentRef.onDestroy(() => {\n      appRef.detachView(componentRef.hostView);\n    });\n\n    // use the renderer to append the element for univseral support\n    const renderer: Renderer2 = componentRef.instance.renderer;\n    renderer.appendChild(location, componentRootNode);\n\n    return componentRef;\n  }\n}\n","import { ComponentRef } from '@angular/core';\nimport { InjectionService } from './injection.service';\n\nexport abstract class InjectionRegistery {\n\n  protected abstract type: any;\n\n  protected defaults: any = {};\n  protected components: Map<any, any> = new Map();\n\n  constructor(public injectionService: InjectionService) { }\n\n  getByType(type: any = this.type) {\n    return this.components.get(type);\n  }\n\n  create(bindings: any): any {\n    return this.createByType(this.type, bindings);\n  }\n\n  createByType(type: any, bindings: any): any {\n    bindings = this.assignDefaults(bindings);\n\n    const component = this.injectComponent(type, bindings);\n    this.register(type, component);\n\n    return component;\n  }\n\n  destroy(instance): void {\n    const compsByType = this.components.get(instance.componentType);\n\n    if(compsByType) {\n      const idx = compsByType.indexOf(instance);\n\n      if(idx > -1) {\n        const component = compsByType[idx];\n        component.destroy();\n        compsByType.splice(idx, 1);\n      }\n    }\n  }\n\n  destroyAll(): void {\n    this.destroyByType(this.type);\n  }\n\n  destroyByType(type): void {\n    const comps = this.components.get(type);\n\n    if(comps) {\n      for(const comp of comps) {\n        this.destroy(comp);\n      }\n    }\n  }\n\n  protected assignDefaults(bindings): any {\n    const { inputs, outputs } = this.defaults;\n\n    if(!bindings.inputs && !bindings.outputs) {\n      bindings = { inputs: bindings };\n    }\n\n    if(inputs) {\n      bindings.inputs = Object.assign(inputs, bindings.inputs);\n    }\n\n    if(outputs) {\n      bindings.outputs = Object.assign(outputs, bindings.outputs);\n    }\n\n    return bindings;\n  }\n\n  protected injectComponent(type, bindings): ComponentRef<any> {\n    return this.injectionService.appendComponent(type, bindings);\n  }\n\n  protected register(type, component): void {\n    if(!this.components.has(type)) {\n      this.components.set(type, []);\n    }\n\n    const types = this.components.get(type);\n    types.push(component);\n  }\n\n}\n","\n/**\n * Throttle a function\n *\n * @export\n * @param {*}      func\n * @param {number} wait\n * @param {*}      [options]\n * @returns\n */\nexport function throttle(func: any, wait: number, options?: any) {\n  options = options || {};\n  let context;\n  let args;\n  let result;\n  let timeout = null;\n  let previous = 0;\n\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n\n  return function() {\n    const now = +new Date();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    const remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n *\n * @export\n * @param {number} duration\n * @param {*} [options]\n * @returns\n */\nexport function throttleable(duration: number, options?: any) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n","import {\n  Input, Component, ElementRef, AfterViewInit, ViewEncapsulation,\n  HostListener, ViewChild, HostBinding, Renderer2\n} from '@angular/core';\n\nimport { throttleable } from '../../utils/throttle';\nimport { PositionHelper, PlacementTypes } from './position';\n\nimport { StyleTypes } from './style.type';\nimport { AlignmentTypes } from './alignment.type';\n\n@Component({\n  selector: 'ngx-tooltip-content',\n  template: `\n    <div>\n      <span\n        #caretElm\n        [hidden]=\"!showCaret\"\n        class=\"tooltip-caret position-{{this.placement}}\">\n      </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template\n            [ngTemplateOutlet]=\"template\"\n            [ngTemplateOutletContext]=\"{ model: context }\">\n          </ng-template>\n        </span>\n        <span\n          *ngIf=\"title\"\n          [innerHTML]=\"title\">\n        </span>\n      </div>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  styles: [require('./tooltip.component.scss')]\n})\nexport class TooltipContentComponent implements AfterViewInit {\n\n  @Input() host: any;\n  @Input() showCaret: boolean;\n  @Input() type: StyleTypes;\n  @Input() placement: PlacementTypes;\n  @Input() alignment: AlignmentTypes;\n  @Input() spacing: number;\n  @Input() cssClass: string;\n  @Input() title: string;\n  @Input() template: any;\n  @Input() context: any;\n\n  @ViewChild('caretElm', {static: false}) caretElm;\n\n  @HostBinding('class')\n  get cssClasses(): string {\n    let clz = 'ngx-charts-tooltip-content';\n    clz += ` position-${this.placement}`;\n    clz += ` type-${this.type}`;\n    clz += ` ${this.cssClass}`;\n    return clz;\n  }\n\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2) {\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(this.position.bind(this));\n  }\n\n  position(): void {\n    const nativeElm = this.element.nativeElement;\n    const hostDim = this.host.nativeElement.getBoundingClientRect();\n\n    // if no dims were found, never show\n    if(!hostDim.height && !hostDim.width) return;\n\n    const elmDim = nativeElm.getBoundingClientRect();\n    this.checkFlip(hostDim, elmDim);\n    this.positionContent(nativeElm, hostDim, elmDim);\n\n    if(this.showCaret) {\n      this.positionCaret(hostDim, elmDim);\n    }\n\n    // animate its entry\n    setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n  }\n\n  positionContent(nativeElm, hostDim, elmDim): void {\n    const { top, left } = PositionHelper.positionContent(\n      this.placement, elmDim, hostDim, this.spacing, this.alignment);\n\n    this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n    this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n  }\n\n  positionCaret(hostDim, elmDim): void {\n    const caretElm = this.caretElm.nativeElement;\n    const caretDimensions = caretElm.getBoundingClientRect();\n    const { top, left } = PositionHelper.positionCaret(\n      this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n\n    this.renderer.setStyle(caretElm, 'top', `${top}px`);\n    this.renderer.setStyle(caretElm, 'left', `${left}px`);\n  }\n\n  checkFlip(hostDim, elmDim): void {\n    this.placement = PositionHelper.determinePlacement(\n      this.placement, elmDim, hostDim, this.spacing);\n  }\n\n  @HostListener('window:resize')\n  @throttleable(100)\n  onWindowResize(): void {\n    this.position();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InjectionService } from './injection.service';\nimport { InjectionRegistery } from './injection-registery.service';\nimport { TooltipContentComponent } from './tooltip.component';\n\n@Injectable()\nexport class TooltipService extends InjectionRegistery {\n\n  type: any = TooltipContentComponent;\n\n  constructor(public injectionService: InjectionService) {\n    super(injectionService);\n  }\n\n}\n","import {\n  Directive, Input, Output, EventEmitter, HostListener,\n  ViewContainerRef,\n  Renderer2, OnDestroy\n} from '@angular/core';\n\nimport { PlacementTypes } from './position';\nimport { StyleTypes } from './style.type';\nimport { AlignmentTypes } from './alignment.type';\nimport { ShowTypes } from './show.type';\n\nimport { TooltipService } from './tooltip.service';\n\n@Directive({ selector: '[ngx-tooltip]' })\nexport class TooltipDirective implements OnDestroy {\n\n  @Input() tooltipCssClass: string = '';\n  @Input() tooltipTitle: string = '';\n  @Input() tooltipAppendToBody: boolean = true;\n  @Input() tooltipSpacing: number = 10;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipShowCaret: boolean = true;\n  @Input() tooltipPlacement: PlacementTypes = PlacementTypes.top;\n  @Input() tooltipAlignment: AlignmentTypes = AlignmentTypes.center;\n  @Input() tooltipType: StyleTypes = StyleTypes.popover;\n  @Input() tooltipCloseOnClickOutside: boolean = true;\n  @Input() tooltipCloseOnMouseLeave: boolean = true;\n  @Input() tooltipHideTimeout: number = 300;\n  @Input() tooltipShowTimeout: number = 100;\n  @Input() tooltipTemplate: any;\n  @Input() tooltipShowEvent: ShowTypes = ShowTypes.all;\n  @Input() tooltipContext: any;\n  @Input() tooltipImmediateExit: boolean = false;\n\n  @Output() show = new EventEmitter();\n  @Output() hide = new EventEmitter();\n\n  private get listensForFocus(): boolean {\n    return this.tooltipShowEvent === ShowTypes.all ||\n           this.tooltipShowEvent === ShowTypes.focus;\n  }\n\n  private get listensForHover(): boolean {\n    return this.tooltipShowEvent === ShowTypes.all ||\n           this.tooltipShowEvent === ShowTypes.mouseover;\n  }\n\n  private component: any;\n  private timeout: any;\n  private mouseLeaveContentEvent: any;\n  private mouseEnterContentEvent: any;\n  private documentClickEvent: any;\n\n  constructor(\n    private tooltipService: TooltipService,\n    private viewContainerRef: ViewContainerRef,\n    private renderer: Renderer2) {\n  }\n\n  ngOnDestroy(): void {\n    this.hideTooltip(true);\n  }\n\n  @HostListener('focusin')\n  onFocus(): void {\n    if(this.listensForFocus) {\n       this.showTooltip();\n     }\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    if(this.listensForFocus) {\n      this.hideTooltip(true);\n    }\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    if(this.listensForHover) {\n       this.showTooltip();\n     }\n  }\n\n  @HostListener('mouseleave', ['$event.target'])\n  onMouseLeave(target): void {\n    if(this.listensForHover && this.tooltipCloseOnMouseLeave) {\n      clearTimeout(this.timeout);\n\n      if (this.component) {\n        const contentDom = this.component.instance.element.nativeElement;\n        const contains = contentDom.contains(target);\n        if(contains) return;\n      }\n\n      this.hideTooltip(this.tooltipImmediateExit);\n    }\n  }\n\n  @HostListener('click')\n  onMouseClick() {\n    if(this.listensForHover) {\n      this.hideTooltip(true);\n    }\n  }\n\n  showTooltip(immediate?: boolean): void {\n    if (this.component || this.tooltipDisabled) return;\n\n    const time = immediate ? 0 : this.tooltipShowTimeout;\n\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.tooltipService.destroyAll();\n\n      const options = this.createBoundOptions();\n      this.component = this.tooltipService.create(options);\n\n      // add a tiny timeout to avoid event re-triggers\n      setTimeout(() => {\n        if (this.component) {\n          this.addHideListeners(this.component.instance.element.nativeElement);\n        }\n      }, 10);\n\n      this.show.emit(true);\n    }, time);\n  }\n\n  addHideListeners(tooltip): void {\n    // on mouse enter, cancel the hide triggered by the leave\n    this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n      clearTimeout(this.timeout);\n    });\n\n    // content mouse leave listener\n    if(this.tooltipCloseOnMouseLeave) {\n      this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n        this.hideTooltip(this.tooltipImmediateExit);\n      });\n    }\n\n    // content close on click outside\n    if(this.tooltipCloseOnClickOutside) {\n      this.documentClickEvent = this.renderer.listen(document, 'click', (event) => {\n        const contains = tooltip.contains(event.target);\n        if(!contains) this.hideTooltip();\n      });\n    }\n  }\n\n  hideTooltip(immediate: boolean = false): void {\n    if(!this.component) return;\n\n    const destroyFn = () => {\n      // remove events\n      if(this.mouseLeaveContentEvent) this.mouseLeaveContentEvent();\n      if(this.mouseEnterContentEvent) this.mouseEnterContentEvent();\n      if(this.documentClickEvent) this.documentClickEvent();\n\n      // emit events\n      this.hide.emit(true);\n\n      // destroy component\n      this.tooltipService.destroy(this.component);\n      this.component = undefined;\n    };\n\n    clearTimeout(this.timeout);\n    if(!immediate) {\n      this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n    } else {\n      destroyFn();\n    }\n  }\n\n  private createBoundOptions(): any {\n    return {\n      title: this.tooltipTitle,\n      template: this.tooltipTemplate,\n      host: this.viewContainerRef.element,\n      placement: this.tooltipPlacement,\n      alignment: this.tooltipAlignment,\n      type: this.tooltipType,\n      showCaret: this.tooltipShowCaret,\n      cssClass: this.tooltipCssClass,\n      spacing: this.tooltipSpacing,\n      context: this.tooltipContext\n    };\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TooltipDirective } from './tooltip.directive';\nimport { TooltipContentComponent } from './tooltip.component';\nimport { TooltipService } from './tooltip.service';\n\nimport { InjectionService } from './injection.service';\n\n@NgModule({\n  declarations: [TooltipContentComponent, TooltipDirective],\n  providers: [InjectionService, TooltipService],\n  exports: [TooltipContentComponent, TooltipDirective],\n  imports: [CommonModule],\n  entryComponents: [TooltipContentComponent]\n})\nexport class TooltipModule { }\n","import {\n  Component, Input, OnChanges, ViewContainerRef, ChangeDetectionStrategy, EventEmitter,\n  Output, SimpleChanges\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { TooltipService } from '../tooltip';\n\n@Component({\n  providers: [TooltipService],\n  selector: 'ngx-charts-chart',\n  template: `\n    <div\n      class=\"ngx-charts-outer\"\n      [style.width.px]=\"view[0]\"\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\">\n      <svg\n        class=\"ngx-charts\"\n        [attr.width]=\"chartWidth\"\n        [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === 'scaleLegend'\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\">\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === 'legend'\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\">\n      </ngx-charts-legend>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate('500ms 100ms', style({ opacity: 1 }))\n      ])\n    ])\n  ]\n})\nexport class ChartComponent implements OnChanges {\n\n  @Input() view;\n  @Input() showLegend = false;\n  @Input() legendOptions: any;\n\n  // remove\n  @Input() data;\n  @Input() legendData;\n  @Input() legendType: any;\n  @Input() colors: any;\n  @Input() activeEntries: any[];\n  @Input() animations: boolean = true;\n\n  @Output() legendLabelClick: EventEmitter<any> = new EventEmitter();\n  @Output() legendLabelActivate: EventEmitter<any> = new EventEmitter();\n  @Output() legendLabelDeactivate: EventEmitter<any> = new EventEmitter();\n\n  chartWidth: any;\n  title: any;\n  legendWidth: any;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private tooltipService: TooltipService) {\n    this.tooltipService.injectionService.setRootViewContainer(this.vcr);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    let legendColumns = 0;\n    if (this.showLegend) {\n      this.legendType = this.getLegendType();\n\n      if (!this.legendOptions || this.legendOptions.position === 'right') {\n        if (this.legendType === 'scaleLegend') {\n          legendColumns = 1;\n        } else {\n          legendColumns = 2;\n        }\n      }\n    }\n\n    const chartColumns = 12 - legendColumns;\n\n    this.chartWidth = Math.floor((this.view[0] * chartColumns / 12.0));\n    this.legendWidth = (!this.legendOptions || this.legendOptions.position === 'right')\n      ? Math.floor((this.view[0] * legendColumns / 12.0))\n      : this.chartWidth;\n  }\n\n  getLegendType(): string {\n    if (this.legendOptions.scaleType === 'linear') {\n      return 'scaleLegend';\n    } else {\n      return 'legend';\n    }\n  }\n\n}\n","/**\n * Formats a label given a date, number or string.\n * \n * @export\n * @param {*} label\n * @returns {string}\n */\nexport function formatLabel(label: any): string {\n  if (label instanceof Date) {\n    label = label.toLocaleDateString();\n  } else {\n    label = label.toLocaleString();\n  }\n\n  return label;\n}\n","import {\n  Component, Input, ChangeDetectionStrategy, Output, EventEmitter,\n  SimpleChanges, OnChanges, ChangeDetectorRef, ViewEncapsulation\n } from '@angular/core';\nimport { formatLabel } from '../label.helper';\n\n@Component({\n  selector: 'ngx-charts-legend',\n  template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{title}}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\"\n            [class.horizontal-legend]=\"horizontal\"\n          [style.max-height.px]=\"height - 45\">\n          <li\n            *ngFor=\"let entry of legendEntries; trackBy: trackBy\"\n            class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\">\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n  styles: [require('./legend.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LegendComponent implements OnChanges {\n\n  @Input() data;\n  @Input() title;\n  @Input() colors;\n  @Input() height;\n  @Input() width;\n  @Input() activeEntries;\n  @Input() horizontal = false;\n\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n  @Output() labelActivate: EventEmitter<any> = new EventEmitter();\n  @Output() labelDeactivate: EventEmitter<any> = new EventEmitter();\n\n  legendEntries: any[] = [];\n\n  constructor(private cd: ChangeDetectorRef) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.cd.markForCheck();\n    this.legendEntries = this.getLegendEntries();\n  }\n\n  getLegendEntries(): any[] {\n    const items = [];\n\n    for(const label of this.data) {\n      const formattedLabel = formatLabel(label);\n\n      const idx = items.findIndex((i) => {\n        return i.label === formattedLabel;\n      });\n\n      if (idx === -1) {\n        items.push({\n          label,\n          formattedLabel,\n          color: this.colors.getColor(label)\n        });\n      }\n    }\n\n    return items;\n  }\n\n  isActive(entry): boolean {\n    if(!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.label === d.name;\n    });\n    return item !== undefined;\n  }\n\n  activate(item) {\n    this.labelActivate.emit(item);\n  }\n\n  deactivate(item) {\n    this.labelDeactivate.emit(item);\n  }\n\n  trackBy(index, item): string {\n    return item.label;\n  }\n\n}\n","import {\n  Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'ngx-charts-scale-legend',\n  template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\">\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div\n        class=\"scale-legend-wrap\"\n        [style.background]=\"gradient\">\n      </div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `,\n  styles: [require('./scale-legend.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScaleLegendComponent implements OnChanges {\n\n  @Input() valueRange;\n  @Input() colors;\n  @Input() height;\n  @Input() width;\n  @Input() horizontal = false;\n\n  gradient: any;\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n    const direction = (this.horizontal) ? 'right' : 'bottom';\n    this.gradient = this.sanitizer.bypassSecurityTrustStyle(`linear-gradient(to ${direction}, ${gradientValues})`);\n  }\n\n  /**\n   * Generates the string used in the gradient stylesheet properties\n   * @param  {array} colors array of colors\n   * @param  {array} splits array of splits on a scale of (0, 1)\n   * @return {string}\n   */\n  gradientString(colors, splits): string {\n    // add the 100%\n    splits.push(1);\n    const pairs = [];\n    colors.reverse().forEach((c, i) => {\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n    });\n\n    return pairs.join(', ');\n  }\n\n}\n","import {\n  Component, \n  Input, \n  Output, \n  ChangeDetectionStrategy,   \n  HostListener,\n  EventEmitter\n } from '@angular/core';\n\n@Component({\n  selector: 'ngx-charts-legend-entry',\n  template: `\n    <span \n      [title]=\"formattedLabel\"\n      tabindex=\"-1\"\n      [class.active]=\"isActive\"\n      (click)=\"select.emit(formattedLabel)\">\n      <span\n        class=\"legend-label-color\"\n        [style.background-color]=\"color\"\n        (click)=\"toggle.emit(formattedLabel)\">\n      </span>\n      <span class=\"legend-label-text\">\n        {{trimmedLabel}}\n      </span>\n    </span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LegendEntryComponent {\n\n  @Input() color: string;\n  @Input() label: any;\n  @Input() formattedLabel: string;\n  @Input() isActive: boolean = false;\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  get trimmedLabel(): string {\n    return this.formattedLabel || '(empty)';\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    this.activate.emit({name: this.label});\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.deactivate.emit({name: this.label});\n  }\n\n}\n","export function trimLabel(s, max = 16): string {\n  if(typeof s !== 'string') {\n    if(typeof s === 'number') {\n      return s + '';\n    } else {\n      return '';\n    }\n  }\n  \n  s = s.trim();\n  if(s.length <= max) {\n    return s;\n  } else {\n    return `${s.slice(0, max)}...`;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { formatLabel } from '../label.helper';\n\n@Component({\n  selector: 'ngx-charts-advanced-legend',\n  template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.label)\"\n            (mouseleave)=\"deactivate.emit(legendItem.label)\"\n            (click)=\"select.emit({ name: legendItem.label, value: legendItem.value })\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [require('./advanced-legend.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdvancedLegendComponent implements OnChanges {\n  @Input() width: number;\n  @Input() data;\n  @Input() colors;\n  @Input() label: string = 'Total';\n  @Input() animations: boolean = true;\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  legendItems: any[] = [];\n  total: number;\n  roundedTotal: number;\n\n  @Input() valueFormatting: (value: number) => any;\n  @Input() labelFormatting: (value: string) => any = label => label;\n  @Input() percentageFormatting: (value: number) => any = percentage => percentage;\n\n  defaultValueFormatting: (value: number) => any = value => value.toLocaleString();\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  getTotal(): number {\n    return this.data.map(d => d.value).reduce((sum, d) => sum + d, 0);\n  }\n\n  update(): void {\n    this.total = this.getTotal();\n    this.roundedTotal = this.total;\n\n    this.legendItems = this.getLegendItems();\n  }\n\n  getLegendItems(): any {\n    return this.data.map(d => {\n      const label = formatLabel(d.name);\n      const value = d.value;\n      const color = this.colors.getColor(label);\n      const percentage = this.total > 0 ? (value / this.total) * 100 : 0;\n      const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n\n      return {\n        _value: value,\n        value,\n        color,\n        label: formattedLabel,\n        displayLabel: trimLabel(formattedLabel, 20),\n        origialLabel: d.name,\n        percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n      };\n    });\n  }\n\n  trackBy(item) {\n    return item.formattedLabel;\n  }\n}\n","const cache = {};\n\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nexport function id(): string {\n  let newId = ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n\n  // append a 'a' because neo gets mad\n  newId = `a${newId}`;\n\n  // ensure not already used\n  if(!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n\n  return id();\n}\n","export let colorSets = [\n  {\n    name: 'vivid',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#647c8a', '#3f51b5', '#2196f3', '#00b862', '#afdf0a', '#a7b61a', '#f3e562', '#ff9800', '#ff5722', '#ff4514'\n    ]\n  },\n  {\n    name: 'natural',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#bf9d76', '#e99450', '#d89f59', '#f2dfa7', '#a5d7c6', '#7794b1', '#afafaf', '#707160', '#ba9383', '#d9d5c3'\n    ]\n  },\n  {\n    name: 'cool',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#a8385d', '#7aa3e5', '#a27ea8', '#aae3f5', '#adcded', '#a95963', '#8796c0', '#7ed3ed', '#50abcc', '#ad6886'\n    ]\n  },\n  {\n    name: 'fire',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00'\n    ]\n  },\n  {\n    name: 'solar',\n    selectable: true,\n    group: 'Continuous',\n    domain: [\n      '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00'\n    ]\n  },\n  {\n    name: 'air',\n    selectable: true,\n    group: 'Continuous',\n    domain: [\n      '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b'\n    ]\n  },\n  {\n    name: 'aqua',\n    selectable: true,\n    group: 'Continuous',\n    domain: [\n      '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064'\n    ]\n  },\n  {\n    name: 'flame',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738'\n    ]\n  },\n  {\n    name: 'ocean',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1'\n    ]\n  },\n  {\n    name: 'forest',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32'\n    ]\n  },\n  {\n    name: 'horizon',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0'\n    ]\n  },\n  {\n    name: 'neons',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600'\n    ]\n  },\n  {\n    name: 'picnic',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8'\n    ]\n  },\n  {\n    name: 'night',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#2B1B5A', '#501356', '#183356', '#28203F', '#391B3C', '#1E2B3C', '#120634',\n      '#2D0432', '#051932', '#453080', '#75267D', '#2C507D', '#4B3880', '#752F7D', '#35547D'\n    ]\n  },\n  {\n    name: 'nightLights',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#4e31a5', '#9c25a7', '#3065ab', '#57468b', '#904497', '#46648b', \n      '#32118d', '#a00fb3', '#1052a2', '#6e51bd', '#b63cc3', '#6c97cb', '#8671c1', '#b455be', '#7496c3'\n    ]\n  }\n];\n","export function sortLinear(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    if (direction === 'asc') {\n      return a[property] - b[property];\n    } else {\n      return b[property] - a[property];\n    }\n  });\n}\n\nexport function sortByDomain(data, property, direction = 'asc', domain) {\n  return data.sort((a, b) => {\n    const aVal = a[property];\n    const bVal = b[property];\n\n    const aIdx = domain.indexOf(aVal);\n    const bIdx = domain.indexOf(bVal);\n\n    if (direction === 'asc') {\n      return aIdx - bIdx;\n    } else {\n      return bIdx - aIdx;\n    }\n  });\n}\n\nexport function sortByTime(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    const aDate = a[property].getTime();\n    const bDate = b[property].getTime();\n\n    if (direction === 'asc') {\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    } else {\n      if (aDate > bDate) return -1;\n      if (bDate > aDate) return 1;\n      return 0;\n    }\n  });\n}\n","import * as d3_color from 'd3-color';\n\n/**\n * Converts a hex to RGB\n *\n * @export\n * @param {string} hex\n * @returns {*}\n */\nexport function hexToRgb(value: string): any {\n  // deprecated, use d3.color()\n  return d3_color.rgb(value);\n}\n\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n * @param {any} value\n * @returns {string}\n */\nexport function invertColor(value: string): string {\n  const color = d3_color.rgb(value);\n  const { r, g, b, opacity } = color;\n  if (opacity === 0) {\n    return color.toString();\n  }\n  const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n  const depth = (yiq >= 128) ? -.8 : .8;\n\n  return shadeRGBColor(color, depth);\n}\n\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param {any} { r, g, b }\n * @param {any} percent\n * @returns\n */\nexport function shadeRGBColor({ r, g, b }, percent) {\n  const t = percent < 0 ? 0 : 255;\n  const p = percent < 0 ? percent * -1 : percent;\n\n  r = (Math.round((t - r) * p) + r);\n  g = (Math.round((t - g) * p) + g);\n  b = (Math.round((t - b) * p) + b);\n\n  return `rgb(${r}, ${g}, ${b})`;\n}\n","import { Output, EventEmitter, NgZone } from '@angular/core';\n\n/**\n * Visibility Observer\n */\nexport class VisibilityObserver {\n\n  @Output() visible: EventEmitter<any> = new EventEmitter();\n\n  timeout: any;\n  isVisible: boolean = false;\n\n  constructor(private element: any, private zone: NgZone) {\n    this.runCheck();\n  }\n\n  destroy(): void {\n    clearTimeout(this.timeout);\n  }\n\n  onVisibilityChange(): void {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n\n  runCheck(): void {\n    const check = () => {\n      if (!this.element) {\n        return;\n      }\n\n      // https://davidwalsh.name/offsetheight-visibility\n      const { offsetHeight, offsetWidth } = this.element.nativeElement;\n\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 100);\n        });\n      }\n    };\n\n    this.zone.runOutsideAngular(() => {\n      this.timeout = setTimeout(() => check());\n    });\n  }\n\n}\n","import {\n  ElementRef, NgZone, ChangeDetectorRef, Component, Input,\n  Output, EventEmitter, AfterViewInit, OnDestroy, OnChanges, SimpleChanges\n} from '@angular/core';\n\nimport { fromEvent as observableFromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { VisibilityObserver } from '../utils';\n\n@Component({\n  selector: 'base-chart',\n  template: `<div></div>`\n})\nexport class BaseChartComponent implements OnChanges, AfterViewInit, OnDestroy {\n\n  @Input() results: any;\n  @Input() view: number[];\n  @Input() scheme: any = 'cool';\n  @Input() schemeType: string = 'ordinal';\n  @Input() customColors: any;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  width: number;\n  height: number;\n  resizeSubscription: any;\n  visibilityObserver: VisibilityObserver;\n\n  constructor(\n    protected chartElement: ElementRef,\n    protected zone: NgZone,\n    protected cd: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit(): void {\n    this.bindWindowResizeEvent();\n\n    // listen for visibility of the element for hidden by default scenario\n    this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n    this.visibilityObserver.visible.subscribe(this.update.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.unbindEvents();\n    if (this.visibilityObserver) {\n      this.visibilityObserver.visible.unsubscribe();\n      this.visibilityObserver.destroy();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    if (this.results) {\n      this.results = this.cloneData(this.results);\n    } else {\n      this.results =  [];\n    }\n\n    if (this.view) {\n      this.width = this.view[0];\n      this.height = this.view[1];\n    } else {\n      const dims = this.getContainerDims();\n      if (dims) {\n        this.width = dims.width;\n        this.height = dims.height;\n      }\n    }\n\n    // default values if width or height are 0 or undefined\n    if (!this.width) {\n      this.width = 600;\n    }\n\n    if (!this.height) {\n      this.height = 400;\n    }\n\n    this.width = Math.floor(this.width);\n    this.height = Math.floor(this.height);\n\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n\n  getContainerDims(): any {\n    let width;\n    let height;\n    const hostElem = this.chartElement.nativeElement;\n\n    if (hostElem.parentNode !== null) {\n      // Get the container dimensions\n      const dims = hostElem.parentNode.getBoundingClientRect();\n      width = dims.width;\n      height = dims.height;\n    }\n\n    if (width && height) {\n      return { width, height };\n    }\n\n    return null;\n  }\n\n  /**\n   * Converts all date objects that appear as name\n   * into formatted date strings\n   */\n  formatDates(): void {\n    for (let i = 0; i < this.results.length; i++) {\n      const g = this.results[i];\n\n      if (g.name instanceof Date) {\n        g.name = g.name.toLocaleDateString();\n      }\n\n      if (g.series) {\n        for (let j = 0; j < g.series.length; j++) {\n          const d = g.series[j];\n          if (d.name instanceof Date) {\n            d.name = d.name.toLocaleDateString();\n          }\n        }\n      }\n    }\n  }\n\n  protected unbindEvents(): void {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n\n  private bindWindowResizeEvent(): void {\n    const source = observableFromEvent(window, 'resize');\n    const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n      this.update();\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    });\n    this.resizeSubscription = subscription;\n  }\n\n  /**\n   * Clones the data into a new object\n   *\n   * @private\n   * @param {any} data\n   * @returns {*}\n   *\n   * @memberOf BaseChart\n   */\n  private cloneData(data): any {\n    const results = [];\n\n    for (const item of data) {\n      const copy = {\n        name: item['name']\n      };\n\n      if (item['value'] !== undefined) {\n        copy['value'] = item['value'];\n      }\n\n      if (item['series'] !== undefined) {\n        copy['series'] = [];\n        for (const seriesItem of item['series']) {\n          const seriesItemCopy = Object.assign({}, seriesItem);\n          copy['series'].push(seriesItemCopy);\n        }\n      }\n\n      if(item['extra'] !== undefined) {\n        copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n      }\n\n      results.push(copy);\n    }\n\n    return results;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ngx-charts-axis-label]',\n  template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\">\n      {{label}}\n    </svg:text>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AxisLabelComponent implements OnChanges {\n\n  @Input() orient;\n  @Input() label;\n  @Input() offset;\n  @Input() width;\n  @Input() height;\n\n  x: any;\n  y: any;\n  transform: any;\n  strokeWidth: any;\n  textAnchor: any;\n  element: ElementRef;\n  textHeight = 25;\n  margin = 5;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.strokeWidth = '0.01';\n    this.textAnchor = 'middle';\n    this.transform = '';\n\n    switch (this.orient) {\n      case 'top':\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case 'bottom':\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case 'left':\n        this.y = - (this.offset + this.textHeight + this.margin);\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      case 'right':\n        this.y = this.offset + this.margin;\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      default:\n    }\n  }\n\n}\n","export function reduceTicks(ticks, maxTicks) {\n  if (ticks.length > maxTicks) {\n    const reduced = [];\n    const modulus = Math.floor(ticks.length / maxTicks);\n    for (let i = 0; i < ticks.length; i++) {\n      if (i % modulus === 0) {\n        reduced.push(ticks[i]);\n      }\n    }\n    ticks = reduced;\n  }\n\n  return ticks;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ElementRef,\n  ViewChild,\n  SimpleChanges,\n  AfterViewInit,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { reduceTicks } from './ticks.helper';\n\n@Component({\n  selector: 'g[ngx-charts-x-axis-ticks]',\n  template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\"\n        [attr.transform]=\"tickTransform(tick)\">\n        <title>{{tickFormat(tick)}}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\">\n          {{tickTrim(tickFormat(tick))}}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\"\n      [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\"\n        [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          class=\"gridline-path gridline-path-vertical\"\n          [attr.y1]=\"-gridLineHeight\"\n          y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class XAxisTicksComponent implements OnChanges, AfterViewInit {\n  @Input() scale;\n  @Input() orient;\n  @Input() tickArguments = [5];\n  @Input() tickValues: any[];\n  @Input() tickStroke = '#ccc';\n  @Input() trimTicks: boolean = true;\n  @Input() maxTickLength: number = 16;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() gridLineHeight;\n  @Input() width;\n  @Input() rotateTicks: boolean = true;\n\n  @Output() dimensionsChanged = new EventEmitter();\n\n  verticalSpacing: number = 20;\n  rotateLabels: boolean = false;\n  innerTickSize: number = 6;\n  outerTickSize: number = 6;\n  tickPadding: number = 3;\n  textAnchor: string = 'middle';\n  maxTicksLength: number = 0;\n  maxAllowedLength: number = 16;\n  adjustedScale: any;\n  textTransform: any;\n  ticks: any;\n  tickFormat: (o: any) => any;\n  height: number = 0;\n\n  @ViewChild('ticksel', {static: false}) ticksElement: ElementRef;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.updateDims());\n  }\n\n  updateDims(): void {\n    const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n    if (height !== this.height) {\n      this.height = height;\n      this.dimensionsChanged.emit({ height });\n      setTimeout(() => this.updateDims());\n    }\n  }\n\n  update(): void {\n    const scale = this.scale;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function(d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n\n    const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n\n    this.adjustedScale = this.scale.bandwidth\n      ? function(d) {\n          return this.scale(d) + this.scale.bandwidth() * 0.5;\n        }\n      : this.scale;\n\n    this.textTransform = '';\n    if (angle && angle !== 0) {\n      this.textTransform = `rotate(${angle})`;\n      this.textAnchor = 'end';\n      this.verticalSpacing = 10;\n    } else {\n      this.textAnchor = 'middle';\n    }\n\n    setTimeout(() => this.updateDims());\n  }\n\n  getRotationAngle(ticks): number {\n    let angle = 0;\n    this.maxTicksLength = 0;\n    for (let i = 0; i < ticks.length; i++) {\n      const tick = this.tickFormat(ticks[i]).toString();\n      let tickLength = tick.length;\n      if (this.trimTicks) {\n        tickLength = this.tickTrim(tick).length;\n      }\n\n      if (tickLength > this.maxTicksLength) {\n        this.maxTicksLength = tickLength;\n      }\n    }\n\n    const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n    const charWidth = 8; // need to measure this\n    const wordWidth = len * charWidth;\n\n    let baseWidth = wordWidth;\n    const maxBaseWidth = Math.floor(this.width / ticks.length);\n\n    // calculate optimal angle\n    while (baseWidth > maxBaseWidth && angle > -90) {\n      angle -= 30;\n      baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n    }\n\n    return angle;\n  }\n\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(100);\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n\n    return ticks;\n  }\n\n  getMaxTicks(tickWidth: number): number {\n    return Math.floor(this.width / tickWidth);\n  }\n\n  tickTransform(tick): string {\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n  }\n\n  gridLineTransform(): string {\n    return `translate(0,${-this.verticalSpacing - 5})`;\n  }\n\n  tickTrim(label: string): string {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n}\n","import {\n  Component,\n  Input,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ViewChild,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { XAxisTicksComponent } from './x-axis-ticks.component';\n\n@Component({\n  selector: 'g[ngx-charts-x-axis]',\n  template: `\n    <svg:g\n      [attr.class]=\"xAxisClassName\"\n      [attr.transform]=\"transform\">\n      <svg:g ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"'bottom'\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\">\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class XAxisComponent implements OnChanges {\n\n  @Input() xScale;\n  @Input() dims;\n  @Input() trimTicks: boolean;\n  @Input() rotateTicks: boolean = true;\n  @Input() maxTickLength: number;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() showLabel;\n  @Input() labelText;\n  @Input() ticks: any[];\n  @Input() xAxisTickInterval;\n  @Input() xAxisTickCount: any;\n  @Input() xOrient: string = 'bottom';\n  @Input() xAxisOffset: number = 0;\n\n  @Output() dimensionsChanged = new EventEmitter();\n\n  xAxisClassName: string = 'x axis';\n\n  tickArguments: any;\n  transform: any;\n  labelOffset: number = 0;\n  fill: string = 'none';\n  stroke: string = 'stroke';\n  tickStroke: string = '#ccc';\n  strokeWidth: string = 'none';\n  padding: number = 5;\n\n  @ViewChild(XAxisTicksComponent, {static: false}) ticksComponent: XAxisTicksComponent;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n\n    if (typeof this.xAxisTickCount !== 'undefined') {\n      this.tickArguments = [this.xAxisTickCount];\n    }\n  }\n\n  emitTicksHeight({ height }): void {\n    const newLabelOffset = height + 25 + 5;\n    if (newLabelOffset !== this.labelOffset) {\n      this.labelOffset = newLabelOffset;\n      setTimeout(() => {        \n        this.dimensionsChanged.emit({height});\n      }, 0);\n    }\n  }\n\n}\n","/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param {*} x, y, w, h, r, tl, tr, bl, br\n * @returns {string}\n */\nexport function roundedRect(x, y, w, h, r, [tl, tr, bl, br]: boolean[]) {\n  let retval = '';\n\n  w = Math.floor(w);\n  h = Math.floor(h);\n\n  w = w === 0 ? 1 : w;\n  h = h === 0 ? 1 : h;\n\n  retval = `M${[x + r, y]}`;\n  retval += `h${w - 2 * r}`;\n\n  if (tr) {\n    retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n  } else {\n    retval += `h${r}v${r}`;\n  }\n\n  retval += `v${h - 2 * r}`;\n\n  if (br) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n  } else {\n    retval += `v${r}h${-r}`;\n  }\n\n  retval += `h${2 * r - w}`;\n\n  if (bl) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n  } else {\n    retval += `h${-r}v${-r}`;\n  }\n\n  retval += `v${2 * r - h}`;\n\n  if (tl) {\n    retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n  } else {\n    retval += `v${-r}h${r}`;\n  }\n\n  retval += `z`;\n\n  return retval;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  OnChanges,\n  ElementRef,\n  ViewChild,\n  EventEmitter,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  SimpleChanges\n} from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { reduceTicks } from './ticks.helper';\nimport { roundedRect } from '../../common/shape.helper';\n\n@Component({\n  selector: 'g[ngx-charts-y-axis-ticks]',\n  template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\"\n        [attr.transform]=\"transform(tick)\" >\n        <title>{{tickFormat(tick)}}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\">\n          {{tickTrim(tickFormat(tick))}}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\"\n      [attr.transform]=\"transform(tick)\">\n      <svg:g\n        *ngIf=\"showGridLines\"\n        [attr.transform]=\"gridLineTransform()\">\n        <svg:line *ngIf=\"orient === 'left'\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\" />\n        <svg:line *ngIf=\"orient === 'right'\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\" />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"/>\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{tickTrim(tickFormat(refLine.value))}}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\" >\n            {{refLine.name}}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class YAxisTicksComponent implements OnChanges, AfterViewInit {\n\n  @Input() scale;\n  @Input() orient;\n  @Input() tickArguments = [5];\n  @Input() tickValues: any[];\n  @Input() tickStroke = '#ccc';\n  @Input() trimTicks: boolean = true;\n  @Input() maxTickLength: number = 16;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() gridLineWidth;\n  @Input() height;\n  @Input() referenceLines;\n  @Input() showRefLabels: boolean = false;\n  @Input() showRefLines: boolean = false;\n\n  @Output() dimensionsChanged = new EventEmitter();\n\n  innerTickSize: any = 6;\n  tickPadding: any = 3;\n  tickSpacing: any;\n  verticalSpacing: number = 20;\n  textAnchor: any = 'middle';\n  dy: any;\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n  adjustedScale: any;\n  transform: (o: any) => string;\n  tickFormat: (o: any) => string;\n  ticks: any;\n  width: number = 0;\n  outerTickSize: number = 6;\n  rotateLabels: boolean = false;\n  refMax: number;\n  refMin: number;\n  referenceLineLength: number = 0;\n  referenceAreaPath: string;\n\n  @ViewChild('ticksel', {static: false}) ticksElement: ElementRef;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.updateDims());\n  }\n\n  updateDims(): void {\n    const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n    if (width !== this.width) {\n      this.width = width;\n      this.dimensionsChanged.emit({ width });\n      setTimeout(() => this.updateDims());\n    }\n  }\n\n  update(): void {\n    let scale;\n    const sign = this.orient === 'top' || this.orient === 'right' ? -1 : 1;\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n\n    scale = this.scale;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function(d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n\n    this.adjustedScale = scale.bandwidth ? function(d) {\n      return scale(d) + scale.bandwidth() * 0.5;\n    } : scale;\n\n    if (this.showRefLines && this.referenceLines) {\n      this.setReferencelines();\n    }\n\n    switch (this.orient) {\n      case 'top':\n        this.transform = function(tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = 'middle';\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case 'bottom':\n        this.transform = function(tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = 'middle';\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case 'left':\n        this.transform = function(tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = 'end';\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      case 'right':\n        this.transform = function(tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = 'start';\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      default:\n    }\n    setTimeout(() => this.updateDims());\n  }\n\n  setReferencelines(): void {\n    this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n    this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n    this.referenceLineLength = this.referenceLines.length;\n\n    this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax,\n      0, [false, false, false, false]);\n  }\n\n  getTicks(): any {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(50);\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n\n    return ticks;\n  }\n\n  getMaxTicks(tickHeight: number): number {\n    return Math.floor(this.height / tickHeight);\n  }\n\n  tickTransform(tick): string {\n    return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n  }\n\n  gridLineTransform(): string {\n    return `translate(5,0)`;\n  }\n\n  tickTrim(label: string): string {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ViewChild,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { YAxisTicksComponent } from './y-axis-ticks.component';\n\n@Component({\n  selector: 'g[ngx-charts-y-axis]',\n  template: `\n    <svg:g\n      [attr.class]=\"yAxisClassName\"\n      [attr.transform]=\"transform\">\n      <svg:g ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\">\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class YAxisComponent implements OnChanges {\n\n  @Input() yScale;\n  @Input() dims;\n  @Input() trimTicks: boolean;\n  @Input() maxTickLength: number;\n  @Input() tickFormatting;\n  @Input() ticks: any[];\n  @Input() showGridLines = false;\n  @Input() showLabel;\n  @Input() labelText;\n  @Input() yAxisTickInterval;\n  @Input() yAxisTickCount: any;\n  @Input() yOrient: string = 'left';\n  @Input() referenceLines;\n  @Input() showRefLines;\n  @Input() showRefLabels;\n  @Input() yAxisOffset: number = 0;\n  @Output() dimensionsChanged = new EventEmitter();\n\n  yAxisClassName: string = 'y axis';\n  tickArguments: any;\n  offset: any;\n  transform: any;\n  labelOffset: number = 15;\n  fill: string = 'none';\n  stroke: string = '#CCC';\n  tickStroke: string = '#CCC';\n  strokeWidth: number = 1;\n  padding: number = 5;\n\n  @ViewChild(YAxisTicksComponent, {static: false}) ticksComponent: YAxisTicksComponent;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.offset = -(this.yAxisOffset + this.padding);\n    if (this.yOrient === 'right') {\n      this.labelOffset = 65;\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n    } else {\n      this.offset = this.offset;\n      this.transform = `translate(${this.offset } , 0)`;\n    }\n\n    if (this.yAxisTickCount !== undefined) {\n      this.tickArguments = [this.yAxisTickCount];\n    }\n  }\n\n  emitTicksWidth({ width }): void {\n    if (width !== this.labelOffset && this.yOrient === 'right') {\n      this.labelOffset = width + this.labelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({width});\n      }, 0);\n    } else if (width !== this.labelOffset) {\n      this.labelOffset = width;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({width});\n      }, 0);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AxisLabelComponent } from './axis-label.component';\nimport { XAxisComponent } from './x-axis.component';\nimport { XAxisTicksComponent } from './x-axis-ticks.component';\nimport { YAxisComponent } from './y-axis.component';\nimport { YAxisTicksComponent } from './y-axis-ticks.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n  exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n})\nexport class AxesModule {}\n","import { range } from 'd3-array';\nimport { scaleBand, scaleLinear, scaleOrdinal, scaleQuantile } from 'd3-scale';\n\nimport { colorSets } from '../utils/color-sets';\n\nexport class ColorHelper {\n  scale: any;\n  scaleType: any;\n  colorDomain: any[];\n  domain: any;\n  customColors: any;\n\n  constructor(scheme, type, domain, customColors?) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    this.colorDomain = scheme.domain;\n    this.scaleType = type;\n    this.domain = domain;\n    this.customColors = customColors;\n\n    this.scale = this.generateColorScheme(scheme, type, this.domain);\n  }\n\n  generateColorScheme(scheme, type, domain) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    let colorScale;\n    if (type === 'quantile') {\n      colorScale = scaleQuantile()\n        .range(scheme.domain)\n        .domain(domain);\n    } else if (type === 'ordinal') {\n      colorScale = scaleOrdinal()\n        .range(scheme.domain)\n        .domain(domain);\n    } else if (type === 'linear') {\n      // linear schemes must have at least 2 colors\n      const colorDomain = [...scheme.domain];\n      if (colorDomain.length === 1) {\n        colorDomain.push(colorDomain[0]);\n        this.colorDomain = colorDomain;\n      }\n\n      const points = range(0, 1, 1.0 / colorDomain.length);\n      colorScale = scaleLinear()\n        .domain(points)\n        .range(colorDomain);\n    }\n\n    return colorScale;\n  }\n\n  getColor(value) {\n    if (value === undefined || value === null) {\n      throw new Error('Value can not be null');\n    }\n    if (this.scaleType === 'linear') {\n      const valueScale = scaleLinear()\n        .domain(this.domain)\n        .range([0, 1]);\n\n      return this.scale(valueScale(value));\n    } else {\n      if (typeof this.customColors === 'function') {\n        return this.customColors(value);\n      }\n\n      const formattedValue = value.toString();\n      let found: any; // todo type customColors\n      if (this.customColors && this.customColors.length > 0) {\n        found = this.customColors.find(mapping => {\n          return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n        });\n      }\n\n      if (found) {\n        return found.value;\n      } else {\n        return this.scale(value);\n      }\n    }\n  }\n\n  getLinearGradientStops(value, start) {\n    if (start === undefined) {\n      start = this.domain[0];\n    }\n\n    const valueScale = scaleLinear()\n      .domain(this.domain)\n      .range([0, 1]);\n\n    const colorValueScale = scaleBand()\n      .domain(this.colorDomain)\n      .range([0, 1]);\n\n    const endColor = this.getColor(value);\n\n    // generate the stops\n    const startVal = valueScale(start);\n    const startColor = this.getColor(start);\n\n    const endVal = valueScale(value);\n    let i = 1;\n    let currentVal = startVal;\n    const stops = [];\n\n    stops.push({\n      color: startColor,\n      offset: startVal,\n      originalOffset: startVal,\n      opacity: 1\n    });\n\n    while (currentVal < endVal && i < this.colorDomain.length) {\n      const color = this.colorDomain[i];\n      const offset = colorValueScale(color);\n      if (offset <= startVal) {\n        i++;\n        continue;\n      }\n\n      if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n        break;\n      }\n\n      stops.push({\n        color,\n        offset,\n        opacity: 1\n      });\n      currentVal = offset;\n      i++;\n    }\n\n    if (stops[stops.length - 1].offset < 100) {\n      stops.push({\n        color: endColor,\n        offset: endVal,\n        opacity: 1\n      });\n    }\n\n    if (endVal === startVal) {\n      stops[0].offset = 0;\n      stops[1].offset = 100;\n    } else {\n      // normalize the offsets into percentages\n      if (stops[stops.length - 1].offset !== 100) {\n        for (const s of stops) {\n          s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\n        }\n      }\n    }\n\n    return stops;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  OnChanges,\n  OnInit,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { formatLabel } from '../common/label.helper';\nimport { id } from '../utils/id';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'g[ngx-charts-circle-series]',\n  template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g ngx-charts-svg-linear-gradient\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({name: circle.seriesName})\"\n        [pointerEvents]=\"circle.value === 0 ? 'none': 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick($event, circle.label)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'top'\"\n        [tooltipType]=\"'tooltip'\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n        }),\n        animate(250, style({opacity: 1}))\n      ])\n    ])\n  ]\n})\nexport class CircleSeriesComponent implements OnChanges, OnInit {\n\n  @Input() data;\n  @Input() type = 'standard';\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors: ColorHelper;\n  @Input() scaleType;\n  @Input() visibleValue;\n  @Input() activeEntries: any[];\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  areaPath: any;\n  circle: any; // active circle\n  barVisible: boolean = false;\n  gradientId: string;\n  gradientFill: string;\n\n  ngOnInit() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.circle = this.getActiveCircle();\n  }\n\n  getActiveCircle(): {} {\n    const indexActiveDataPoint = this.data.series.findIndex((d) => {\n      const label = d.name;\n      return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n    });\n\n    if (indexActiveDataPoint === -1) {\n      // No valid point is 'active/hovered over' at this moment.\n      return undefined;\n    }\n\n    return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n  }\n\n  mapDataPointToCircle(d: any, i: number): any {\n    const seriesName = this.data.name;\n\n    const value = d.value;\n    const label = d.name;\n    const tooltipLabel = formatLabel(label);\n\n    let cx;\n    if (this.scaleType === 'time') {\n      cx = this.xScale(label);\n    } else if (this.scaleType === 'linear') {\n      cx = this.xScale(Number(label));\n    } else {\n      cx = this.xScale(label);\n    }\n\n    const cy = this.yScale(this.type === 'standard' ? value : d.d1);\n    const radius = 5;\n    const height = this.yScale.range()[0] - cy;\n    const opacity = 1;\n\n    let color;\n    if (this.colors.scaleType === 'linear') {\n      if (this.type === 'standard') {\n        color = this.colors.getColor(value);\n      } else {\n        color = this.colors.getColor(d.d1);\n      }\n    } else {\n      color = this.colors.getColor(seriesName);\n    }\n\n    const data = Object.assign({}, d, {\n      series: seriesName,\n      value,\n      name: label\n    });\n\n    return {\n      classNames: [`circle-data-${i}`],\n      value,\n      label,\n      data,\n      cx,\n      cy,\n      radius,\n      height,\n      tooltipLabel,\n      color,\n      opacity,\n      seriesName,\n      gradientStops: this.getGradientStops(color),\n      min: d.min,\n      max: d.max\n    };\n  }\n\n  getTooltipText({ tooltipLabel, value, seriesName, min, max}): string {\n    return `\n      <span class=\"tooltip-label\">${seriesName} • ${tooltipLabel}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n  }\n\n  getTooltipMinMaxText(min: any, max: any) {\n    if (min !== undefined || max  !== undefined) {\n      let result = ' (';\n      if (min !== undefined) {\n        if (max === undefined) {\n          result += '≥';\n        }\n        result += min.toLocaleString();\n        if (max !== undefined) {\n          result += ' - ';\n        }\n      } else if (max !== undefined) {\n        result += '≤';\n      }\n      if (max !== undefined) {\n        result += max.toLocaleString();\n      }\n      result += ')';\n      return result;\n    } else {\n      return '';\n    }\n  }\n\n  getGradientStops(color) {\n    return [\n      {\n        offset: 0,\n        color,\n        opacity: 0.2\n      },\n      {\n        offset: 100,\n        color,\n        opacity: 1\n    }];\n  }\n\n  onClick(value, label): void {\n    this.select.emit({\n      name: label,\n      value\n    });\n  }\n\n  isActive(entry): boolean {\n    if(!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  activateCircle(): void {\n    this.barVisible = true;\n    this.activate.emit({name: this.data.name});\n  }\n\n  deactivateCircle(): void {\n    this.barVisible = false;\n    this.circle.opacity = 0;\n    this.deactivate.emit({name: this.data.name});\n  }\n\n}\n","import {\n  Component,\n  Input,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ChangeDetectionStrategy,\n  HostListener\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ngx-charts-circle]',\n  template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CircleComponent implements OnChanges {\n\n  @Input() cx;\n  @Input() cy;\n  @Input() r;\n  @Input() fill;\n  @Input() stroke;\n  @Input() data;\n  @Input() classNames;\n  @Input() circleOpacity;\n  @Input() pointerEvents;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  @HostListener('click')\n  onClick() {\n    this.select.emit(this.data);\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    this.activate.emit(this.data);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.deactivate.emit(this.data);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.classNames = Array.isArray(this.classNames) ?\n      this.classNames.join(' ') : \n      '';\n    this.classNames += 'circle';\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ngx-charts-grid-panel]',\n  template: `\n    <svg:rect\n      [attr.height]=\"height\"\n      [attr.width]=\"width\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      stroke=\"none\"\n      class=\"gridpanel\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GridPanelComponent {\n\n  @Input() path;\n  @Input() width;\n  @Input() height;\n  @Input() x;\n  @Input() y;\n  \n}\n","import { Component, SimpleChanges, Input, OnChanges, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'g[ngx-charts-grid-panel-series]',\n  template: `\n    <svg:g ngx-charts-grid-panel *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\">\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GridPanelSeriesComponent implements OnChanges {\n  gridPanels: any[];\n\n  @Input()\n  data;\n\n  @Input()\n  dims;\n\n  @Input()\n  xScale;\n\n  @Input()\n  yScale;\n\n  @Input()\n  orient;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.gridPanels = this.getGridPanels();\n  }\n\n  getGridPanels(): any[] {\n    return this.data.map((d) => {\n      let offset;\n      let width;\n      let height;\n      let x;\n      let y;\n      let className = 'odd';\n\n      if (this.orient === 'vertical') {\n        const position: number = this.xScale(d.name);\n        const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n\n        if (positionIndex % 2 === 1) {\n          className = 'even';\n        }\n        offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n        width = this.xScale.bandwidth() + offset;\n        height = this.dims.height;\n        x = this.xScale(d.name) - offset / 2;\n        y = 0;\n      } else if (this.orient === 'horizontal') {\n        const position = this.yScale(d.name);\n        const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n\n        if (positionIndex % 2 === 1) {\n          className = 'even';\n        }\n        offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n\n        width = this.dims.width;\n        height = this.yScale.bandwidth() + offset;\n        x = 0;\n        y = this.yScale(d.name) - offset / 2;\n      }\n\n      return {\n        name: d.name,\n        class: className,\n        height,\n        width,\n        x,\n        y\n      };\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ngx-charts-svg-linear-gradient]',\n  template: `\n    <svg:linearGradient\n      [id]=\"name\"\n      [attr.x1]=\"x1\"\n      [attr.y1]=\"y1\"\n      [attr.x2]=\"x2\"\n      [attr.y2]=\"y2\">\n      <svg:stop *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SvgLinearGradientComponent implements OnChanges {\n\n  @Input() orientation = 'vertical';\n  @Input() name;\n  @Input() stops: any[];\n\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.x1 = '0%';\n    this.x2 = '0%';\n    this.y1 = '0%';\n    this.y2 = '0%';\n\n    if (this.orientation === 'horizontal') {\n      this.x2 = '100%';\n    } else if (this.orientation === 'vertical') {\n      this.y1 = '100%';\n    }\n\n  }\n}\n","import {\n  Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ngx-charts-svg-radial-gradient]',\n  template: `\n    <svg:radialGradient\n      [id]=\"name\"\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      gradientUnits=\"userSpaceOnUse\">\n      <svg:stop *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SvgRadialGradientComponent implements OnChanges {\n\n  @Input() color: string;\n  @Input() name: string;\n  @Input() startOpacity: number;\n  @Input() endOpacity = 1;\n  @Input() cx: number = 0;\n  @Input() cy: number = 0;\n\n  @Input()\n  get stops(): any[] {\n    return this.stopsInput || this.stopsDefault;\n  }\n\n  set stops(value: any[]) {\n    this.stopsInput = value;\n  }\n\n  r: string;\n\n  private stopsInput: any[];\n  private stopsDefault: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.r = '30%';\n    if (\n      ('color' in changes) ||\n      ('startOpacity' in changes) ||\n      ('endOpacity' in changes)) {\n        this.stopsDefault = [{\n          offset: 0,\n          color: this.color,\n          opacity: this.startOpacity\n        }, {\n          offset: 100,\n          color: this.color,\n          opacity: this.endOpacity\n        }];\n    }\n  }\n\n}\n","import {\n  Component, Input, Output, EventEmitter, ElementRef,\n  OnChanges, ChangeDetectionStrategy,\n  ChangeDetectorRef, SimpleChanges, ViewEncapsulation\n} from '@angular/core';\nimport { brushX } from 'd3-brush';\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\nimport { select, event as d3event } from 'd3-selection';\n\nimport { id } from '../../utils';\n\n@Component({\n  selector: 'g[ngx-charts-timeline]',\n  template: `\n    <svg:g\n      class=\"timeline\"\n      [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix in=\"SourceGraphic\"\n            type=\"matrix\"\n            values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\" />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\"\n        [attr.width]=\"view[0]\"\n        y=\"0\"\n        [attr.height]=\"height\"\n        class=\"brush-background\"\n      />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `,\n  styles: [require('./timeline.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class Timeline implements OnChanges {\n\n  @Input() view;\n  @Input() state;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend;\n  @Input() miniChart;\n  @Input() autoScale;\n  @Input() scaleType;\n  @Input() height: number = 50;\n\n  @Output() select = new EventEmitter();\n  @Output() onDomainChange = new EventEmitter();\n\n  element: HTMLElement;\n  dims: any;\n  xDomain: any[];\n  xScale: any;\n  brush: any;\n  transform: string;\n  initialized: boolean = false;\n  filterId: any;\n  filter: any;\n\n  constructor(\n    element: ElementRef,\n    private cd: ChangeDetectorRef) {\n      this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n\n    if (!this.initialized) {\n      this.addBrush();\n      this.initialized = true;\n    }\n  }\n\n  update(): void {\n    this.dims = this.getDims();\n    this.height = this.dims.height;\n    const offsetY = this.view[1] - this.height;\n\n    this.xDomain = this.getXDomain();\n    this.xScale = this.getXScale();\n\n    if (this.brush) {\n      this.updateBrush();\n    }\n\n    this.transform = `translate(0 , ${ offsetY })`;\n\n    this.filterId = 'filter' + id().toString();\n    this.filter = `url(#${this.filterId})`;\n\n    this.cd.markForCheck();\n  }\n\n  getXDomain(): any[] {\n    let values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    let domain = [];\n    if (this.scaleType === 'time') {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n\n    return domain;\n  }\n\n  getXScale() {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  addBrush(): void {\n    if (this.brush) return;\n\n    const height = this.height;\n    const width = this.view[0];\n\n    this.brush = brushX()\n      .extent([[0, 0], [width, height]])\n      .on('brush end', () => {\n        const selection = d3event.selection || this.xScale.range();\n        const newDomain = selection.map(this.xScale.invert);\n\n        this.onDomainChange.emit(newDomain);\n        this.cd.markForCheck();\n      });\n\n    select(this.element)\n      .select('.brush')\n      .call(this.brush);\n  }\n\n  updateBrush(): void {\n    if (!this.brush) return;\n\n    const height = this.height;\n    const width = this.view[0];\n\n    this.brush.extent([[0, 0], [width, height]]);\n    select(this.element)\n      .select('.brush')\n      .call(this.brush);\n\n    // clear hardcoded properties so they can be defined by CSS\n    select(this.element).select('.selection')\n      .attr('fill', undefined)\n      .attr('stroke', undefined)\n      .attr('fill-opacity', undefined);\n\n    this.cd.markForCheck();\n  }\n\n  getDims(): any {\n    const width = this.view[0];\n\n    const dims = {\n      width,\n      height: this.height\n    };\n\n    return dims;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  ElementRef,\n  OnChanges,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { select } from 'd3-selection';\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'g[ngx-charts-area]',\n  template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g ngx-charts-svg-linear-gradient\n        orientation=\"vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path\n      class=\"area\"\n      [attr.d]=\"areaPath\"\n      [attr.fill]=\"gradient ? gradientFill : fill\"\n      [style.opacity]=\"opacity\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreaComponent implements OnChanges {\n\n  @Input() data;\n  @Input() path;\n  @Input() startingPath;\n  @Input() fill;\n  @Input() opacity = 1;\n  @Input() startOpacity = 0.5;\n  @Input() endOpacity = 1;\n  @Input() activeLabel;\n  @Input() gradient: boolean = false;\n  @Input() stops: any[];\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  element: HTMLElement;\n  gradientId: string;\n  gradientFill: string;\n  areaPath: string;\n  initialized: boolean = false;\n  gradientStops: any[];\n  hasGradient: boolean = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n\n  update(): void {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n\n    this.updatePathEl();\n  }\n\n  loadAnimation(): void {\n    this.areaPath = this.startingPath;\n    setTimeout(this.update.bind(this), 100);\n  }\n\n  updatePathEl(): void {\n    const node = select(this.element).select('.area');\n\n    if (this.animations) {\n      node.transition().duration(750)\n        .attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: this.startOpacity\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: this.endOpacity\n    }];\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ChangeDetectionStrategy,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { createMouseEvent } from '../events';\n\n@Component({\n  selector: 'g[ngx-charts-tooltip-area]',\n  template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <xhtml:ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div\n            *ngFor=\"let tooltipItem of model\"\n            class=\"tooltip-item\">\n            <span\n              class=\"tooltip-item-color\"\n              [style.background-color]=\"tooltipItem.color\">\n            </span>\n            {{getToolTipText(tooltipItem)}}\n          </xhtml:div>\n        </xhtml:div>\n      </xhtml:ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'right'\"\n        [tooltipType]=\"'tooltip'\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate: defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition('inactive => active', [\n        style({\n          opacity: 0,\n        }),\n        animate(250, style({opacity: 0.7}))\n      ]),\n      transition('active => inactive', [\n        style({\n          opacity: 0.7,\n        }),\n        animate(250, style({opacity: 0}))\n      ])\n    ])\n  ]\n})\nexport class TooltipArea {\n  anchorOpacity: number = 0;\n  anchorPos: number = -1;\n  anchorValues: any[] = [];\n  lastAnchorPos: number;\n\n  @Input() dims;\n  @Input() xSet;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() results;\n  @Input() colors;\n  @Input() showPercentage: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() hover = new EventEmitter();\n\n  @ViewChild('tooltipAnchor', {static: false}) tooltipAnchor;\n\n  getValues(xVal): any[] {\n    const results = [];\n\n    for (const group of this.results) {\n      const item = group.series.find(d => d.name.toString() === xVal.toString());\n      let groupName = group.name;\n      if (groupName instanceof Date) {\n        groupName = groupName.toLocaleDateString();\n      }\n\n      if (item) {\n        const label = item.name;\n        let val = item.value;\n        if (this.showPercentage) {\n          val = (item.d1 - item.d0).toFixed(2) + '%';\n        }\n        let color;\n        if (this.colors.scaleType === 'linear') {\n          let v = val;\n          if (item.d1) {\n            v = item.d1;\n          }\n          color = this.colors.getColor(v);\n        } else {\n          color = this.colors.getColor(group.name);\n        }\n\n        const data = Object.assign({}, item, {\n          value: val,\n          name: label,\n          series: groupName,\n          min: item.min,\n          max: item.max,\n          color\n        });\n\n        results.push(data);\n      }\n    }\n\n    return results;\n  }\n\n  mouseMove(event) {\n    const xPos = event.pageX - event.target.getBoundingClientRect().left;\n\n    const closestIndex = this.findClosestPointIndex(xPos);\n    const closestPoint = this.xSet[closestIndex];\n    this.anchorPos = this.xScale(closestPoint);\n    this.anchorPos = Math.max(0, this.anchorPos);\n    this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n\n    this.anchorValues = this.getValues(closestPoint);\n    if (this.anchorPos !== this.lastAnchorPos) {\n      const ev = createMouseEvent('mouseleave');\n      this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n      this.anchorOpacity = 0.7;\n      this.hover.emit({\n        value: closestPoint\n      });\n      this.showTooltip();\n\n      this.lastAnchorPos = this.anchorPos;\n    }\n  }\n\n  findClosestPointIndex(xPos) {\n    let minIndex = 0;\n    let maxIndex = this.xSet.length - 1;\n    let minDiff = Number.MAX_VALUE;\n    let closestIndex = 0;\n\n    while (minIndex <= maxIndex) {\n      const currentIndex = (minIndex + maxIndex) / 2 | 0;\n      const currentElement = this.xScale(this.xSet[currentIndex]);\n\n      const curDiff = Math.abs(currentElement - xPos);\n\n      if (curDiff < minDiff) {\n        minDiff = curDiff;\n        closestIndex = currentIndex;\n      }\n\n      if (currentElement < xPos) {\n        minIndex = currentIndex + 1;\n      } else if (currentElement > xPos) {\n        maxIndex = currentIndex - 1;\n      } else {\n        minDiff = 0;\n        closestIndex = currentIndex;\n        break;\n      }\n    }\n\n    return closestIndex;\n  }\n\n  showTooltip(): void {\n    const event = createMouseEvent('mouseenter');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n  }\n\n  hideTooltip(): void {\n    const event = createMouseEvent('mouseleave');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    this.anchorOpacity = 0;\n    this.lastAnchorPos = -1;\n  }\n\n  getToolTipText(tooltipItem: any): string {\n    let result: string = '';\n    if (tooltipItem.series !== undefined) {\n      result += tooltipItem.series;\n    } else {\n      result += '???';\n    }\n    result += ': ';\n    if (tooltipItem.value !== undefined) {\n      result += tooltipItem.value.toLocaleString();\n    }\n    if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n      result += ' (';\n      if (tooltipItem.min !== undefined) {\n        if (tooltipItem.max === undefined) {\n          result += '≥';\n        }\n        result += tooltipItem.min.toLocaleString();\n        if (tooltipItem.max !== undefined) {\n          result += ' - ';\n        }\n      } else if (tooltipItem.max !== undefined) {\n        result += '≤';\n      }\n      if (tooltipItem.max !== undefined) {\n        result += tooltipItem.max.toLocaleString();\n      }\n      result += ')';\n    }\n    return result;\n  }\n\n}\n","// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n  return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n}\n\n/**\n * Counts from a number to the end incrementally.\n *\n * @export\n * @param {any} countFrom\n * @param {any} countTo\n * @param {any} countDecimals\n * @param {any} countDuration\n * @param {any} callback\n * @returns\n */\nexport function count(countFrom, countTo, countDecimals, countDuration, callback) {\n  const startVal = Number(countFrom);\n  const endVal = Number(countTo);\n  const countDown = startVal > endVal;\n  const decimals = Math.max(0, countDecimals);\n  const dec = Math.pow(10, decimals);\n  const duration = Number(countDuration) * 1000;\n  let startTime;\n\n  function runCount(timestamp) {\n    let frameVal;\n    const progress = timestamp - startTime;\n\n    if (countDown) {\n      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n    } else {\n      frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n    }\n\n    if (countDown) {\n      frameVal = frameVal < endVal ? endVal : frameVal;\n    } else {\n      frameVal = frameVal > endVal ? endVal : frameVal;\n    }\n\n    frameVal = Math.round(frameVal * dec) / dec;\n\n    const tick = progress < duration;\n    callback({\n      value: frameVal,\n      progress,\n      timestamp,\n      finished: !tick\n    });\n\n    if (tick) {\n      return requestAnimationFrame(val => runCount(val));\n    }\n  }\n\n  return requestAnimationFrame(timestamp => {\n    startTime = timestamp;\n    return runCount(timestamp);\n  });\n}\n\n/**\n * Determine decimals places\n *\n * @export\n * @param {any} countTo\n * @returns\n */\nexport function decimalChecker(countTo) {\n  const endVal = Number(countTo);\n\n  if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n    return 2;\n  }\n\n  return 0;\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, OnDestroy, ElementRef } from '@angular/core';\nimport { count, decimalChecker } from './count.helper';\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n * @class CountUpDirective\n */\n@Component({\n  selector: '[ngx-charts-count-up]',\n  template: `{{value}}`\n})\nexport class CountUpDirective implements OnDestroy {\n  @Input() countDuration: number = 1;\n  @Input() countPrefix: string = '';\n  @Input() countSuffix: string = '';\n  @Input() valueFormatting: any;\n\n  @Input()\n  set countDecimals(val: number) {\n    this._countDecimals = val;\n  }\n\n  get countDecimals(): number {\n    if (this._countDecimals) return this._countDecimals;\n    return decimalChecker(this.countTo);\n  }\n\n  @Input()\n  set countTo(val) {\n    this._countTo = parseFloat(val);\n    this.start();\n  }\n\n  get countTo(): any {\n    return this._countTo;\n  }\n\n  @Input()\n  set countFrom(val) {\n    this._countFrom = parseFloat(val);\n    this.start();\n  }\n\n  get countFrom(): any {\n    return this._countFrom;\n  }\n\n  @Output() countChange = new EventEmitter();\n  @Output() countFinish = new EventEmitter();\n\n  nativeElement: any;\n\n  value: any = '';\n  formattedValue: string;\n\n  private animationReq: any;\n\n  private _countDecimals: number = 0;\n  private _countTo: number = 0;\n  private _countFrom: number = 0;\n\n  constructor(private cd: ChangeDetectorRef, element: ElementRef) {\n    this.nativeElement = element.nativeElement;\n  }\n\n  ngOnDestroy(): void {\n    cancelAnimationFrame(this.animationReq);\n  }\n\n  start(): void {\n    cancelAnimationFrame(this.animationReq);\n\n    const valueFormatting =\n      this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n\n    const callback = ({ value, progress, finished }) => {\n      this.value = valueFormatting(value);\n      this.cd.markForCheck();\n      if (!finished) this.countChange.emit({ value: this.value, progress });\n      if (finished) this.countFinish.emit({ value: this.value, progress });\n    };\n\n    this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChartComponent } from './charts/chart.component';\nimport {\n  ScaleLegendComponent, LegendComponent, LegendEntryComponent, AdvancedLegendComponent\n} from './legend';\nimport { BaseChartComponent } from './base-chart.component';\nimport { AxesModule } from './axes/axes.module';\nimport { TooltipModule } from './tooltip';\nimport { CircleSeriesComponent } from './circle-series.component';\nimport { CircleComponent } from './circle.component';\nimport { GridPanelComponent } from './grid-panel.component';\nimport { GridPanelSeriesComponent } from './grid-panel-series.component';\nimport { SvgLinearGradientComponent } from './svg-linear-gradient.component';\nimport { SvgRadialGradientComponent } from './svg-radial-gradient.component';\nimport { Timeline } from './timeline';\nimport { AreaComponent } from './area.component';\nimport { TooltipArea } from './tooltip-area.component';\nimport { CountUpDirective } from './count';\n\nconst COMPONENTS = [\n  AreaComponent,\n  BaseChartComponent,\n  CountUpDirective,\n  TooltipArea,\n  ChartComponent,\n  LegendComponent,\n  LegendEntryComponent,\n  ScaleLegendComponent,\n  CircleComponent,\n  CircleSeriesComponent,\n  GridPanelComponent,\n  GridPanelSeriesComponent,\n  SvgLinearGradientComponent,\n  SvgRadialGradientComponent,\n  Timeline,\n  AdvancedLegendComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AxesModule,\n    TooltipModule\n  ],\n  declarations: [\n    ...COMPONENTS\n  ],\n  exports: [\n    CommonModule,\n    AxesModule,\n    TooltipModule,\n    ...COMPONENTS\n  ]\n})\nexport class ChartCommonModule { }\n","export interface ViewDimensions {\n  width: number;\n  height: number;\n  xOffset: number;\n}\n\nexport function calculateViewDimensions({\n  width, height, margins, showXAxis = false, showYAxis = false, xAxisHeight = 0,\n  yAxisWidth = 0, showXLabel = false, showYLabel = false, showLegend = false,\n  legendType = 'ordinal', legendPosition = 'right', columns = 12\n}): ViewDimensions {\n  let xOffset = margins[3];\n  let chartWidth = width;\n  let chartHeight = height - margins[0] - margins[2];\n\n  if (showLegend && legendPosition === 'right') {\n    if (legendType === 'ordinal') {\n      columns -= 2;\n    } else {\n      columns -= 1;\n    }\n  }\n\n  chartWidth = chartWidth * columns / 12;\n\n  chartWidth = chartWidth - margins[1] - margins[3];\n\n  if (showXAxis) {\n    chartHeight -= 5;\n    chartHeight -= xAxisHeight;\n\n    if (showXLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartHeight -= offset;\n    }\n  }\n\n  if (showYAxis) {\n    chartWidth -= 5;\n    chartWidth -= yAxisWidth;\n    xOffset += yAxisWidth;\n    xOffset += 10;\n\n    if (showYLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartWidth -= offset;\n      xOffset += offset;\n    }\n  }\n\n  chartWidth = Math.max(0, chartWidth);\n  chartHeight = Math.max(0, chartHeight);\n\n  return {\n    width: Math.floor(chartWidth),\n    height: Math.floor(chartHeight),\n    xOffset: Math.floor(xOffset)\n  };\n}\n","/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n * @param results\n */\nexport function getUniqueXDomainValues(results: any[]): any[] {\n  const valueSet = new Set();\n  for (const result of results) {\n    for (const d of result.series) {\n      valueSet.add(d.name);\n    }\n  }\n  return Array.from(valueSet);\n}\n\n/**\n * Get the scaleType of enumerable of values.\n * @param values\n * @returns {string} 'time', 'linear' or 'ordinal'\n */\nexport function getScaleType(values: any[], checkDateType = true): string {\n  if (checkDateType) {\n    const allDates = values.every(value => value instanceof Date);\n    if (allDates) {\n      return 'time';\n    }\n  }\n\n  const allNumbers = values.every(value => typeof value === 'number');\n  if (allNumbers) {\n      return 'linear';\n    }\n\n  return 'ordinal';\n}\n","import { Component, Input, Output, EventEmitter, OnChanges, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { formatLabel } from '../common/label.helper';\n\nexport enum D0Types {\n  positive = 'positive',\n  negative = 'negative'\n}\n\n@Component({\n  selector: 'g[ngx-charts-series-vertical]',\n  template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"'vertical'\"\n      [roundEdges]=\"bar.roundEdges\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [isActive]=\"isActive(bar.data)\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n      [animations]=\"animations\">\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"'vertical'\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(500, style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class SeriesVerticalComponent implements OnChanges {\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() seriesName: string;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() roundEdges: boolean;\n  @Input() animations: boolean = true;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dataLabelHeightChanged = new EventEmitter();\n\n  tooltipPlacement: string;\n  tooltipType: string;\n\n  bars: any;\n  x: any;\n  y: any;\n  barsForDataLabels: Array<{ x: number; y: number; width: number; height: number; total: number; series: string }> = [];\n\n  ngOnChanges(changes): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateTooltipSettings();\n    let width;\n    if (this.series.length) {\n      width = this.xScale.bandwidth();\n    }\n    width = Math.round(width);\n    const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type = D0Types.positive;\n\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = d.name;\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n\n      const bar: any = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n\n      if (this.type === 'standard') {\n        bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n        bar.x = this.xScale(label);\n\n        if (value < 0) {\n          bar.y = this.yScale(0);\n        } else {\n          bar.y = this.yScale(value);\n        }\n      } else if (this.type === 'stacked') {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n\n      if (this.colors.scaleType === 'ordinal') {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === 'standard') {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n\n      bar.tooltipText = this.tooltipDisabled\n        ? undefined\n        : `\n        <span class=\"tooltip-label\">${tooltipLabel}</span>\n        <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n      `;\n\n      return bar;\n    });\n\n    this.updateDataLabels();\n  }\n\n  updateDataLabels() {\n    if (this.type === 'stacked') {\n      this.barsForDataLabels = [];\n      const section: any = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      if (section.total > 0) {\n        section.height = this.yScale(totalPositive);\n      } else {\n        section.height = this.yScale(totalNegative);\n      }\n      section.width = this.xScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section: any = {};\n        section.series = this.seriesName ? this.seriesName : d.name;\n        section.total = d.value;\n        section.x = this.xScale(d.name);\n        section.y = this.yScale(0);\n        section.height = this.yScale(section.total) - this.yScale(0);\n        section.width = this.xScale.bandwidth();\n        return section;\n      });\n    }\n  }\n\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\n    this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  trackBy(index, bar): string {\n    return bar.label;\n  }\n\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  HostListener,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ngx-charts-area-chart',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\">\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\">\n        </svg:g>\n        <svg:g ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy:trackBy\">\n            <svg:g ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\">\n        <svg:g *ngFor=\"let series of results; trackBy:trackBy\">\n          <svg:g ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [require('../common/base-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AreaChartComponent extends BaseChartComponent {\n\n  @Input() legend;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() state;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() baseValue: any = 'auto';\n  @Input() autoScale;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: number;\n  @Input() yScaleMax: number;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate',{static: false}) seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xSet: any;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  clipPathId: string;\n  clipPath: string;\n  scaleType: string;\n  series: any;\n  margin = [10, 20, 10, 20];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  filteredDomain: any;\n  legendOptions: any;\n\n  timelineWidth: any;\n  timelineHeight: number = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding: number = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset }, ${ this.margin[0] })`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      min = this.xScaleMin\n        ? this.xScaleMin\n        : Math.min(...values);\n\n      max = this.xScaleMax\n        ? this.xScaleMax\n        : Math.max(...values);\n    }\n\n    if (this.scaleType === 'time') {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => (a - b));\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n    if (this.baseValue !== 'auto') {\n      values.push(this.baseValue);\n    }\n\n    const min = this.yScaleMin\n      ? this.yScaleMin\n      : Math.min(...values);\n\n    const max = this.yScaleMax\n      ? this.yScaleMax\n      : Math.max(...values);\n\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime();\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear();\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .padding(0.1);\n    }\n\n    scale.range([0, width])\n        .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getScaleType(values): string {\n    let date = true;\n    let num = true;\n    for (const value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        num = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n\n    if (num) {\n      return 'linear';\n    }\n\n    return 'ordinal';\n  }\n\n  isDate(value): boolean {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item): void {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ngx-charts-area-chart-normalized',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\">\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\">\n        </svg:g>\n        <svg:g ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy:trackBy\">\n            <svg:g ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              normalized=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g ngx-charts-circle-series\n                type=\"stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\">\n        <svg:g *ngFor=\"let series of results; trackBy:trackBy\">\n          <svg:g ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            normalized=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [require('../common/base-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AreaChartNormalizedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n  @Input() showGridLines: boolean = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate',{static: false}) seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  xSet: any[]; // the set of all values on the X Axis\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  tooltipAreas: any[];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  filteredDomain: any;\n  legendOptions: any;\n\n  timelineWidth: any;\n  timelineHeight: number = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding: number = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n\n      let total = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          total += d.value;\n        }\n      }\n\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n\n        if (total > 0) {\n          d.d0 = (d.d0 * 100) / total;\n          d.d1 = (d.d1 * 100) / total;\n        } else {\n          d.d0 = 0;\n          d.d1 = 0;\n        }\n      }\n    }\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'time') {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => (a - b));\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    return [0, 100];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime();\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear();\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .padding(0.1);\n    }\n\n    scale\n      .range([0, width])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item): void {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  HostListener,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ngx-charts-area-chart-stacked',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\">\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\">\n        </svg:g>\n        <svg:g ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy:trackBy\">\n            <svg:g ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              stacked=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy:trackBy\">\n              <svg:g ngx-charts-circle-series\n                type=\"stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\">\n        <svg:g *ngFor=\"let series of results; trackBy:trackBy\">\n          <svg:g ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            stacked=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [require('../common/base-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AreaChartStackedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n  @Input() showGridLines: boolean = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: number;\n  @Input() yScaleMax: number;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false}) tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate',{static: false}) seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  xSet: any[]; // the set of all values on the X Axis\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  filteredDomain: any;\n  legendOptions: any;\n\n  timelineWidth: any;\n  timelineHeight: number = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding: number = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= (this.timelineHeight + this.margin[2] + this.timelinePadding);\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n      for (const group of this.results) {\n\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n      }\n    }\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${ this.dims.xOffset }, ${ -this.margin[2] })`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      min = this.xScaleMin\n        ? this.xScaleMin\n        : Math.min(...values);\n\n      max = this.xScaleMax\n        ? this.xScaleMax\n        : Math.max(...values);\n    }\n\n    if (this.scaleType === 'time') {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => (a - b));\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let sum = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          sum += d.value;\n        }\n      }\n\n      domain.push(sum);\n    }\n\n    const min = this.yScaleMin\n      ? this.yScaleMin\n      : Math.min(0, ...domain);\n\n    const max = this.yScaleMax\n      ? this.yScaleMax\n      : Math.max(...domain);\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime();\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear();\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .padding(0.1);\n    }\n\n    scale\n      .range([0, width])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { area } from 'd3-shape';\n\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\n\n@Component({\n  selector: 'g[ngx-charts-area-series]',\n  template: `\n    <svg:g ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreaSeriesComponent implements OnChanges {\n\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() baseValue: any = 'auto';\n  @Input() colors;\n  @Input() scaleType;\n  @Input() stacked: boolean = false;\n  @Input() normalized: boolean = false;\n  @Input() gradient;\n  @Input() curve;\n  @Input() activeEntries: any[];\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  opacity: number;\n  path: string;\n  startingPath: string;\n\n  hasGradient: boolean;\n  gradientStops: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateGradient();\n\n    let currentArea;\n    let startingArea;\n\n    const xProperty = (d) => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n\n    if (this.stacked || this.normalized) {\n      currentArea = area<any>()\n        .x(xProperty)\n        .y0((d, i) => this.yScale(d.d0))\n        .y1((d, i) => this.yScale(d.d1));\n\n      startingArea = area<any>()\n        .x(xProperty)\n        .y0(d => this.yScale.range()[0])\n        .y1(d => this.yScale.range()[0]);\n    } else {\n      currentArea = area<any>()\n        .x(xProperty)\n        .y0(() => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue))\n        .y1(d => this.yScale(d.value));\n\n      startingArea = area<any>()\n        .x(xProperty)\n        .y0(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue))\n        .y1(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue));\n    }\n\n    currentArea.curve(this.curve);\n    startingArea.curve(this.curve);\n\n    this.opacity = .8;\n\n    let data = this.data.series;\n    if (this.scaleType === 'linear') {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === 'time') {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n\n    this.path = currentArea(data);\n    this.startingPath = startingArea(data);\n  }\n\n  updateGradient() {\n    if (this.colors.scaleType === 'linear') {\n      this.hasGradient = true;\n      if (this.stacked || this.normalized) {        \n        const d0values = this.data.series.map(d => d.d0);\n        const d1values = this.data.series.map(d => d.d1);\n        const max = Math.max(...d1values);\n        const min = Math.min(...d0values);\n        this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      } else {\n        const values = this.data.series.map(d => d.value);\n        const max = Math.max(...values);\n        this.gradientStops = this.colors.getLinearGradientStops(max);\n      }\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n    }\n  }\n\n  isActive(entry): boolean {\n    if(!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry): boolean {\n    if(!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { AreaChartComponent } from './area-chart.component';\nimport { AreaChartNormalizedComponent } from './area-chart-normalized.component';\nimport { AreaChartStackedComponent } from './area-chart-stacked.component';\nimport { AreaSeriesComponent } from './area-series.component';\nimport { ChartCommonModule } from '../common/chart-common.module';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    AreaChartComponent,\n    AreaChartNormalizedComponent,\n    AreaChartStackedComponent,\n    AreaSeriesComponent\n  ],\n  exports: [\n    AreaChartComponent,\n    AreaChartNormalizedComponent,\n    AreaChartStackedComponent,\n    AreaSeriesComponent\n  ]\n})\nexport class AreaChartModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  SimpleChanges,\n  OnChanges,\n  ChangeDetectionStrategy\n } from '@angular/core';\nimport { select } from 'd3-selection';\nimport { roundedRect } from '../common/shape.helper';\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'g[ngx-charts-bar]',\n  template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient\n        [orientation]=\"orientation\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BarComponent implements OnChanges {\n\n  @Input() fill;\n  @Input() data;\n  @Input() width;\n  @Input() height;\n  @Input() x;\n  @Input() y;\n  @Input() orientation;\n  @Input() roundEdges: boolean = true;\n  @Input() gradient: boolean = false;\n  @Input() offset = 0;\n  @Input() isActive: boolean = false;\n  @Input() stops: any[];\n  @Input() animations: boolean = true;\n  @Input() ariaLabel: string;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  element: any;\n  path: any;\n  gradientId: any;\n  gradientFill: any;\n  startOpacity: any;\n  initialized: boolean = false;\n  gradientStops: any[];\n  hasGradient: boolean = false;\n  hideBar: boolean = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n\n  update(): void {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n    \n    this.updatePathEl();\n    this.checkToHideBar();\n  }\n\n  loadAnimation(): void {\n    this.path = this.getStartingPath();\n    setTimeout(this.update.bind(this), 100);\n  }\n\n  updatePathEl(): void {\n    const node = select(this.element).select('.bar');\n    const path = this.getPath();\n    if (this.animations) {\n     node.transition().duration(500)\n         .attr('d', path);\n    } else {\n      node.attr('d', path);\n    }    \n  }\n\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: this.getStartOpacity()\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n    }];\n  }\n\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === 'horizontal') {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    } else {\n      if (this.orientation === 'vertical') {\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === 'horizontal') {\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    }\n\n    return path;\n  }\n\n  getPath() {\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      } else if (this.orientation === 'horizontal') {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      }\n    } else {\n      path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n    }\n\n    return path;\n  }\n\n  getRadius(): number {\n    let radius = 0;\n\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n\n    return radius;\n  }\n\n  getStartOpacity(): number {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n\n  get edges() {\n    let edges = [false, false, false, false];\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        if (this.data.value > 0) {\n          edges =  [true, true, false, false];\n        } else {\n          edges =  [false, false, true, true];\n        }\n      } else if (this.orientation === 'horizontal') {\n        if (this.data.value > 0) {\n          edges =  [false, true, false, true];\n        } else {\n          edges =  [true, false, true, false];\n        }\n      }\n    }\n    return edges;\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    this.activate.emit(this.data);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.deactivate.emit(this.data);\n  }\n\n  private checkToHideBar() {\n    this.hideBar = this.noBarWhenZero\n      && (this.orientation === 'vertical' && this.height === 0\n          || this.orientation === 'horizontal' && this.width === 0);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-horizontal',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [require('../common/base-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BarHorizontalComponent extends BaseChartComponent {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() roundEdges: boolean = true;\n  @Input() xScaleMax: number;\n  @Input() xScaleMin: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  yScale: any;\n  xScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxWidth: any = { negative: 0, positive: 0 };\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getXScale(): any {\n    this.xDomain = this.getXDomain();\n\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.xDomain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(): any {\n    this.yDomain = this.getYDomain();\n    const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .domain(this.yDomain);\n  }\n\n  getXDomain(): any[] {\n    const values = this.results.map(d => d.value);\n    const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n    return [min, max];\n  }\n\n  getYDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.yDomain;\n    } else {\n      domain = this.xDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-horizontal-2d',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n      (legendLabelClick)=\"onClick($event)\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          orient=\"horizontal\">\n        </svg:g>\n        <svg:g ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\">\n        </svg:g>\n        <svg:g ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy:trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g ngx-charts-series-horizontal\n            [xScale]=\"valueScale\"\n            [activeEntries]=\"activeEntries\"\n            [yScale]=\"innerScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [require('../common/base-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontal2DComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() groupPadding = 16;\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() roundEdges: boolean = true;\n  @Input() xScaleMax: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n \n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxWidth: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {negative: 0, positive: 0};          \n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative]; \n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valuesDomain = this.getValueDomain();\n\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .paddingOuter(spacing / 2)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale(): any {\n    const height = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, height])\n      .paddingInner(spacing)\n      .domain(this.innerDomain);\n  }\n\n  getValueScale(): any {\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valuesDomain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getGroupDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax\n      ? Math.max(this.xScaleMax, ...domain)\n      : Math.max(0, ...domain);\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(0, ${this.groupScale(group.name)})`;\n  }\n\n  onClick(data, group?): void {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valuesDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valuesDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event, groupIndex) {         \n    if (event.size.negative)  {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }  \n    if (groupIndex === (this.results.length - 1)) {      \n      setTimeout(() => this.update());\n    }        \n  } \n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-horizontal-normalized',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n      (legendLabelClick)=\"onClick($event)\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\">\n        </svg:g>\n        <svg:g ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:g\n          *ngFor=\"let group of results; trackBy:trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g ngx-charts-series-horizontal\n            type=\"normalized\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [require('../common/base-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontalNormalizedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    return [0, 100];\n  }\n\n  getYScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale(): any {\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group): string {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  onClick(data, group?): void {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-horizontal-stacked',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n      (legendLabelClick)=\"onClick($event)\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\">\n        </svg:g>\n        <svg:g ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy:trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g ngx-charts-series-horizontal\n            type=\"stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [activeEntries]=\"activeEntries\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [require('../common/base-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontalStackedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() xScaleMax: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxWidth: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {negative: 0, positive: 0};          \n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative]; \n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax\n      ? Math.max(this.xScaleMax, ...domain)\n      : Math.max(...domain);\n    return [min, max];\n  }\n\n  getYScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale(): any {\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group): string {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  onClick(data, group?): void {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event, groupIndex) {                \n    if (event.size.negative)  {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }  \n    if (groupIndex === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }        \n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-vertical',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\">\n        </svg:g>\n        <svg:g ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:g ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n          >          \n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [require('../common/base-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BarVerticalComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() roundEdges: boolean = true;\n  @Input() yScaleMax: number;\n  @Input() yScaleMin: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xScale: any;\n  yScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: ColorHelper;\n  margin: any[] = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n   \n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {negative: 0, positive: 0};          \n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20]; \n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;    \n    }\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] + this.dataLabelMaxHeight.negative })`;\n  }\n\n  getXScale(): any {\n    this.xDomain = this.getXDomain();\n    const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand()\n      .range([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.xDomain);\n  }\n\n  getYScale(): any {\n    this.yDomain = this.getYDomain();\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getXDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getYDomain() {\n    const values = this.results.map(d => d.value);\n\n    let min = this.yScaleMin\n      ? Math.min(this.yScaleMin, ...values)\n      : Math.min(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      min = Math.min(min, ...this.yAxisTicks);\n    }\n\n    let max = this.yScaleMax\n      ? Math.max(this.yScaleMax, ...values)\n      : Math.max(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      max = Math.max(max, ...this.yAxisTicks);\n    }\n    return [min, max];\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.xDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  \n  onDataLabelMaxHeightChanged(event) {      \n    if (event.size.negative)  {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }      \n    if (event.index === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }      \n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-vertical-2d',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n      (legendLabelClick)=\"onClick($event)\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          orient=\"vertical\">\n        </svg:g>\n        <svg:g ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\">\n        </svg:g>\n        <svg:g ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:g ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy:trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n        </svg:g>\n    </ngx-charts-chart>\n  `,\n  styles: [require('../common/base-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarVertical2DComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() scaleType = 'ordinal';\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() groupPadding = 16;\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() roundEdges: boolean = true;\n  @Input() yScaleMax: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {negative: 0, positive: 0};          \n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20]; \n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;    \n    }\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valuesDomain = this.getValueDomain();\n\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  onDataLabelMaxHeightChanged(event, groupIndex) {               \n    if (event.size.negative)  {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);              \n    }  \n    if (groupIndex === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }   \n  }\n\n  getGroupScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .paddingOuter(spacing / 2)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale(): any {\n    const width = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n    return scaleBand()\n      .rangeRound([0, width])\n      .paddingInner(spacing)\n      .domain(this.innerDomain);\n  }\n\n  getValueScale(): any {\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valuesDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax\n      ? Math.max(this.yScaleMax, ...domain)\n      : Math.max(0, ...domain);\n      \n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(${this.groupScale(group.name)}, 0)`;\n  }\n\n  onClick(data, group?) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valuesDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valuesDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({width}) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({height}) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-vertical-normalized',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n      (legendLabelClick)=\"onClick($event)\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\">\n        </svg:g>\n        <svg:g ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:g\n          *ngFor=\"let group of results; trackBy:trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g ngx-charts-series-vertical\n            type=\"normalized\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styles: [require('../common/base-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarVerticalNormalizedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    return [0, 100];\n  }\n\n  getXScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale(): any {\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  onClick(data, group?) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({width}) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({height}) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-vertical-stacked',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n      (legendLabelClick)=\"onClick($event)\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\">\n        </svg:g>\n        <svg:g ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy:trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\">\n          <svg:g ngx-charts-series-vertical\n            type=\"stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styles: [require('../common/base-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({opacity: 0, transform: 'scale(0)'}))\n      ])\n    ])\n  ]\n})\nexport class BarVerticalStackedComponent extends BaseChartComponent {\n\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() yScaleMax: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  tickFormatting: (label: string) => string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = {negative: 0, positive: 0};\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {negative: 0, positive: 0};          \n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20]; \n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;    \n    }\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax\n      ? Math.max(this.yScaleMax, ...domain)\n      : Math.max(...domain);\n    return [min, max];\n  }\n\n  getXScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale(): any {\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  onDataLabelMaxHeightChanged(event, groupIndex) {                   \n    if (event.size.negative)  {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);              \n    }  \n    if (groupIndex === (this.results.length - 1)) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  onClick(data, group?) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({width}) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({height}) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group?) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  TemplateRef  \n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { formatLabel } from '../common/label.helper';\nimport { D0Types } from './series-vertical.component';\n\n@Component({\n  selector: 'g[ngx-charts-series-horizontal]',\n  template: `\n    <svg:g ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy:trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"'horizontal'\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\">\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g ngx-charts-bar-label *ngFor=\"let b of barsForDataLabels; let i = index; trackBy:trackDataLabelBy\"         \n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"'horizontal'\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({size:$event, index:i})\"      \n      />\n    </svg:g> \n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(500, style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class SeriesHorizontal implements OnChanges {\n  bars: any;\n  x: any;\n  y: any;       \n  barsForDataLabels: Array<{x: number, y: number, width: number, height: number, \n                            total: number, series: string}> = [];\n  \n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() seriesName: string;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() roundEdges: boolean;\n  @Input() animations: boolean = true;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dataLabelWidthChanged = new EventEmitter();\n\n  tooltipPlacement: string;\n  tooltipType: string;\n \n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n   \n    this.updateTooltipSettings();\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type: D0Types;\n    d0Type = D0Types.positive;\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = d.name;\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n\n      const bar: any = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        formattedLabel\n      };\n\n      bar.height = this.yScale.bandwidth();\n\n      if (this.type === 'standard') {\n        bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n        if (value < 0) {\n          bar.x = this.xScale(value);\n        } else {\n          bar.x = this.xScale(xScaleMin);\n        }\n        bar.y = this.yScale(label);\n      } else if (this.type === 'stacked') {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n\n      if (this.colors.scaleType === 'ordinal') {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === 'standard') {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' +  bar.ariaLabel;\n      }\n\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${tooltipLabel}</span>\n        <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n      `;\n\n      return bar;\n    });\n    \n    this.updateDataLabels();\n\n  }\n\n  updateDataLabels() {\n\n    if (this.type === 'stacked') {        \n      this.barsForDataLabels = [];          \n      const section: any = {};      \n      section.series =  this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;        \n      // if total is positive then we show it on the right, otherwise on the left\n      if (section.total > 0) {\n        section.width = this.xScale(totalPositive);\n      } else {\n        section.width = this.xScale(totalNegative);\n      }         \n      section.height = this.yScale.bandwidth();       \n      this.barsForDataLabels.push(section);          \n    } else {\n        this.barsForDataLabels = this.series.map(d => {\n        const section: any = {}; \n        section.series =  this.seriesName ? this.seriesName : d.name;\n        section.total = d.value;          \n        section.x = this.xScale(0);\n        section.y = this.yScale(d.name);\n        section.width = this.xScale(section.total) - this.xScale(0);\n        section.height = this.yScale.bandwidth();         \n        return section; \n        });\n      }            \n  }\n  \n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\n    this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  trackBy(index, bar) {\n    return bar.label;\n  }\n\n  trackDataLabelBy(index, barLabel) {       \n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n\n  click(data): void {\n    this.select.emit(data);\n  }\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ChangeDetectionStrategy,\n    ElementRef,\n    Output,    \n    EventEmitter\n  } from '@angular/core';\nimport { formatLabel } from '../common/label.helper';\n  \n@Component({\n  selector: 'g[ngx-charts-bar-label]',\n  template: `  \n    <svg:text   \n      class=\"textDataLabel\" \n      alignment-baseline=\"middle\"     \n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\" \n      [attr.y]=\"y\">\n      {{formatedValue}}     \n    </svg:text>          \n\n  `,\n  styles: [require('./bar-label.component.scss')],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\n  export class BarLabelComponent implements OnChanges {\n  \n    @Input() value;\n    @Input() valueFormatting: any;\n    @Input() barX;\n    @Input() barY; \n    @Input() barWidth;\n    @Input() barHeight; \n    @Input() orientation;\n    \n    @Output() dimensionsChanged: EventEmitter<any> = new EventEmitter();    \n     \n    element: any;\n    x: number;\n    y: number;\n    horizontalPadding: number = 2;\n    verticalPadding: number = 5;\n    formatedValue: string;\n    transform: string;\n    textAnchor: string;    \n    \n    constructor(element: ElementRef) {\n      this.element = element.nativeElement;\n    }\n    \n    ngOnChanges(changes: SimpleChanges): void {      \n      this.update();\n    }\n\n    getSize(): any {\n      const h = this.element.getBoundingClientRect().height;\n      const w = this.element.getBoundingClientRect().width;\n      return { height: h, width: w, negative: this.value < 0 };            \n    }\n    \n    ngAfterViewInit() {                         \n      this.dimensionsChanged.emit(this.getSize());        \n    }\n    \n    update(): void {  \n      if (this.valueFormatting) {\n        this.formatedValue = this.valueFormatting(this.value);\n      } else {\n        this.formatedValue = formatLabel(this.value);  \n      }\n      \n      if (this.orientation === 'horizontal') {\n          this.x = this.barX + this.barWidth;    \n          // if the value is negative then it's on the left of the x0. \n          // we need to put the data label in front of the bar\n          if (this.value < 0) {\n            this.x = this.x - this.horizontalPadding;\n            this.textAnchor = 'end';\n          } else {\n            this.x = this.x + this.horizontalPadding;\n            this.textAnchor = 'start'; \n          }\n          this.y = this.barY + this.barHeight / 2;    \n\n      } else {\n        // orientation must be \"vertical\"      \n        this.x = this.barX + this.barWidth / 2;    \n        this.y = this.barY + this.barHeight;  \n         \n        if (this.value < 0) {\n          this.y = this.y + this.verticalPadding;          \n          this.textAnchor = 'end';\n        } else {\n          this.y = this.y - this.verticalPadding;   \n          this.textAnchor = 'start'; \n        }\n        this.transform = `rotate(-45, ${ this.x } , ${ this.y })`;\n      }\n      \n    }  \n  }\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { BarComponent } from './bar.component';\nimport { BarHorizontalComponent } from './bar-horizontal.component';\nimport { BarHorizontal2DComponent } from './bar-horizontal-2d.component';\nimport { BarHorizontalNormalizedComponent } from './bar-horizontal-normalized.component';\nimport { BarHorizontalStackedComponent } from './bar-horizontal-stacked.component';\nimport { BarVerticalComponent } from './bar-vertical.component';\nimport { BarVertical2DComponent } from './bar-vertical-2d.component';\nimport { BarVerticalNormalizedComponent } from './bar-vertical-normalized.component';\nimport { BarVerticalStackedComponent } from './bar-vertical-stacked.component';\nimport { SeriesHorizontal } from './series-horizontal.component';\nimport { SeriesVerticalComponent } from './series-vertical.component';\nimport { BarLabelComponent } from './bar-label.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    BarComponent,\n    BarHorizontalComponent,\n    BarHorizontal2DComponent,\n    BarHorizontalNormalizedComponent,\n    BarHorizontalStackedComponent,\n    BarVerticalComponent,\n    BarVertical2DComponent,\n    BarVerticalNormalizedComponent,\n    BarVerticalStackedComponent,\n    BarLabelComponent,\n    SeriesHorizontal,\n    SeriesVerticalComponent\n  ],\n  exports: [\n    BarComponent,\n    BarHorizontalComponent,\n    BarHorizontal2DComponent,\n    BarHorizontalNormalizedComponent,\n    BarHorizontalStackedComponent,\n    BarVerticalComponent,\n    BarVertical2DComponent,\n    BarVerticalNormalizedComponent,\n    BarVerticalStackedComponent,\n    BarLabelComponent,\n    SeriesHorizontal,\n    SeriesVerticalComponent    \n  ]\n})\nexport class BarChartModule {}\n","import { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\n\nexport function getDomain(values, scaleType, autoScale, minVal?, maxVal?): number[] {\n    let domain: number[] = [];\n    if (scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      if (!autoScale) {\n        values.push(0);\n      }\n    }\n    \n    if (scaleType === 'time' || scaleType === 'linear') {\n      const min = minVal ? minVal : Math.min(...values);\n      const max = maxVal ? maxVal : Math.max(...values);\n\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n\n    return domain;\n}\n\nexport function getScale(domain, range: number[], scaleType, roundDomains): any {\n  let scale: any;\n\n  if (scaleType === 'time') {\n    scale = scaleTime()\n      .range(range)\n      .domain(domain);\n  } else if (scaleType === 'linear') {\n    scale = scaleLinear()\n      .range(range)\n      .domain(domain);\n\n    if (roundDomains) {\n      scale = scale.nice();\n    }\n  } else if (scaleType === 'ordinal') {\n    scale = scalePoint()\n      .range([range[0], range[1]])\n      .domain(domain);\n  }\n\n  return scale;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleLinear } from 'd3-scale';\n\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { getScaleType } from '../common/domain.helper';\nimport { getDomain, getScale } from './bubble-chart.utils';\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'ngx-charts-bubble-chart',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\">\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"/>\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"/>\n        <svg:g ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"/>\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy:trackBy\" [@animationState]=\"'active'\">\n            <svg:g ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\" />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styles: [require('../common/base-chart.component.scss')],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n        }),\n        animate(500, style({\n          opacity: 0\n        }))\n      ])\n    ])\n  ]\n})\nexport class BubbleChartComponent extends BaseChartComponent {\n  @Input() showGridLines: boolean = true;\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis: boolean = true;\n  @Input() yAxis: boolean = true;\n  @Input() showXAxisLabel: boolean;\n  @Input() showYAxisLabel: boolean;\n  @Input() xAxisLabel: string;\n  @Input() yAxisLabel: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains: boolean = false;\n  @Input() maxRadius = 10;\n  @Input() minRadius = 3;\n  @Input() autoScale: boolean;\n  @Input() schemeType = 'ordinal';\n  @Input() tooltipDisabled: boolean = false;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: any;\n  @Input() yScaleMax: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  colors: ColorHelper;\n  scaleType = 'linear';\n  margin = [10, 20, 10, 20];\n  bubblePadding = [0, 0, 0, 0];\n  data: any;\n\n  legendOptions: any;\n  transform: string;\n\n  clipPath: string;\n  clipPathId: string;\n\n  seriesDomain: any[];\n  xDomain: any[];\n  yDomain: any[];\n  rDomain: number[];\n\n  xScaleType: string;\n  yScaleType: string;\n\n  yScale: any;\n  xScale: any;\n  rScale: any;\n\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n\n  activeEntries: any[] = [];\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.seriesDomain = this.results.map(d => d.name);\n    this.rDomain = this.getRDomain();\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n\n    this.transform = `translate(${ this.dims.xOffset },${ this.margin[0] })`;\n\n    const colorDomain = this.schemeType === 'ordinal' ? this.seriesDomain : this.rDomain;\n    this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n\n    this.data = this.results;\n\n    this.minRadius = Math.max(this.minRadius, 1);\n    this.maxRadius = Math.max(this.maxRadius, 1);\n\n    this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n\n    this.bubblePadding = [0, 0, 0, 0];\n    this.setScales();\n\n    this.bubblePadding = this.getBubblePadding();\n    this.setScales();\n\n    this.legendOptions = this.getLegendOptions();\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  getBubblePadding() {\n    let yMin = 0;\n    let xMin = 0;\n    let yMax = this.dims.height;\n    let xMax = this.dims.width;\n\n    for (const s of this.data) {\n      for (const d of s.series) {\n        const r = this.rScale(d.r);\n        const cx = (this.xScaleType === 'linear') ? this.xScale(Number(d.x)) : this.xScale(d.x);\n        const cy = (this.yScaleType === 'linear') ? this.yScale(Number(d.y)) : this.yScale(d.y);\n        xMin = Math.max(r - cx, xMin);\n        yMin = Math.max(r - cy, yMin);\n        yMax = Math.max(cy + r, yMax);\n        xMax = Math.max(cx + r, xMax);\n      }\n    }\n\n    xMax = Math.max(xMax - this.dims.width, 0);\n    yMax = Math.max(yMax - this.dims.height, 0);\n\n    return [yMin, xMax, yMax, xMin];\n  }\n\n  setScales() {\n    let width = this.dims.width;\n    if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n      width = width - this.bubblePadding[1];\n    }\n    let height = this.dims.height;\n    if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n      height = height - this.bubblePadding[2];\n    }\n    this.xScale = this.getXScale(this.xDomain, width);\n    this.yScale = this.getYScale(this.yDomain, height);\n  }\n\n  getYScale(domain, height): any {\n    return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n  }\n\n  getXScale(domain, width): any {\n    return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n  }\n\n  getRScale(domain, range): any {\n    const scale = scaleLinear()\n      .range(range)\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getLegendOptions(): any {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      position: this.legendPosition,\n      title: undefined\n    };\n\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.rDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  getXDomain(): any[] {\n    const values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.x)) {\n          values.push(d.x);\n        }\n      }\n    }\n\n    this.xScaleType = getScaleType(values);\n    return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n  }\n\n  getYDomain(): any[] {\n    const values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.y)) {\n          values.push(d.y);\n        }\n      }\n    }\n\n    this.yScaleType = getScaleType(values);\n    return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n  }\n\n  getRDomain(): number[] {\n    let min = Infinity;\n    let max = -Infinity;\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        const value = Number(d.r) || 1;\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n      }\n    }\n\n    return [min, max];\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item): void {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item): void {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  OnChanges,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { formatLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'g[ngx-charts-bubble-series]',\n  template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick($event, circle.label)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"'top'\"\n          [tooltipType]=\"'tooltip'\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'scale(0)'\n        }),\n        animate(250, style({opacity: 1, transform: 'scale(1)'}))\n      ])\n    ])\n  ]\n})\nexport class BubbleSeriesComponent implements OnChanges {\n\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() rScale;\n  @Input() xScaleType;\n  @Input() yScaleType;\n  @Input() colors;\n  @Input() visibleValue;\n  @Input() activeEntries: any[];\n  @Input() xAxisLabel: string;\n  @Input() yAxisLabel: string;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  areaPath: any;\n  circles: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.circles = this.getCircles();\n  }\n\n  getCircles(): any[] {\n    const seriesName = this.data.name;\n\n    return this.data.series.map((d, i) => {\n      if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n        const y = d.y;\n        const x = d.x;\n        const r = d.r;\n\n        const radius = this.rScale(r || 1);\n        const tooltipLabel = formatLabel(d.name);\n\n        const cx = (this.xScaleType === 'linear') ? this.xScale(Number(x)) : this.xScale(x);\n        const cy = (this.yScaleType === 'linear') ? this.yScale(Number(y)) : this.yScale(y);\n\n        const color = (this.colors.scaleType === 'linear') ?\n          this.colors.getColor(r) :\n          this.colors.getColor(seriesName);\n\n        const isActive = !this.activeEntries.length ? true : this.isActive({name: seriesName});\n        const opacity = isActive ? 1 : 0.3;\n\n        const data = Object.assign({}, d, {\n          series: seriesName,\n          name: d.name,\n          value: d.y,\n          x: d.x,\n          radius: d.r\n        });\n\n        return {\n          data,\n          x,\n          y,\n          r,\n          classNames: [`circle-data-${i}`],\n          value: y,\n          label: x,\n          cx,\n          cy,\n          radius,\n          tooltipLabel,\n          color,\n          opacity,\n          seriesName,\n          isActive,\n          transform: `translate(${cx},${cy})`\n        };\n      }\n    }).filter((circle) => circle !== undefined);\n  }\n\n  getTooltipText(circle): string {\n    const hasRadius = typeof circle.r !== 'undefined';\n    const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n    const hasSeriesName = circle.seriesName && circle.seriesName.length;\n\n    const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n    const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n    const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n    const x = formatLabel(circle.x);\n    const y = formatLabel(circle.y);\n    const name = (hasSeriesName && hasTooltipLabel) ?\n      `${circle.seriesName} • ${circle.tooltipLabel}` :\n      circle.seriesName + circle.tooltipLabel;\n    const tooltipTitle = (hasSeriesName || hasTooltipLabel) ?\n      `<span class=\"tooltip-label\">${name}</span>` :\n      '';\n\n    return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${xAxisLabel}</label> ${x}<br />\n        <label>${yAxisLabel}</label> ${y}\n      </span>\n      <span class=\"tooltip-val\">\n        ${radiusValue}\n      </span>\n    `;\n  }\n\n  onClick(value, label): void {\n    this.select.emit({\n      name: label,\n      value\n    });\n  }\n\n  isActive(entry): boolean {\n    if(!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isVisible(circle): boolean {\n    if (this.activeEntries.length > 0) {\n      return this.isActive({name: circle.seriesName});\n    }\n\n    return circle.opacity !== 0;\n  }\n\n  activateCircle(circle): void {\n    circle.barVisible = true;\n    this.activate.emit({name: this.data.name});\n  }\n\n  deactivateCircle(circle): void {\n    circle.barVisible = false;\n    this.deactivate.emit({name: this.data.name});\n  }\n\n  trackBy(index, circle): string {\n    return `${circle.data.series} ${circle.data.name}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { BubbleChartComponent } from './bubble-chart.component';\nimport { BubbleSeriesComponent } from './bubble-series.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    BubbleChartComponent,\n    BubbleSeriesComponent\n  ],\n  exports: [\n    BubbleChartComponent,\n    BubbleSeriesComponent\n  ]\n})\nexport class BubbleChartModule {}\n","import {\n  Component,\n  ContentChild,\n  ElementRef,\n  HostListener,\n  Input,\n  TemplateRef,\n  ViewChild,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { forceCollide, forceLink, forceManyBody, forceSimulation, forceX, forceY } from 'd3-force';\n\nimport { ChartComponent } from '../common/charts/chart.component';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\n/* tslint:disable */\nimport { MouseEvent } from '../events';\n\n@Component({\n  selector: 'ngx-charts-force-directed-graph',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\">\n      <svg:g [attr.transform]=\"transform\" class=\"force-directed-graph chart\">\n        <svg:g class=\"links\">\n          <svg:g *ngFor=\"let link of links; trackBy:trackLinkBy\">\n            <ng-template *ngIf=\"linkTemplate\"\n              [ngTemplateOutlet]=\"linkTemplate\"\n              [ngTemplateOutletContext]=\"{ $implicit: link }\">\n            </ng-template>\n            <svg:line *ngIf=\"!linkTemplate\"\n              strokeWidth=\"1\" class=\"edge\"\n              [attr.x1]=\"link.source.x\"\n              [attr.y1]=\"link.source.y\"\n              [attr.x2]=\"link.target.x\"\n              [attr.y2]=\"link.target.y\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g class=\"nodes\">\n          <svg:g *ngFor=\"let node of nodes; trackBy:trackNodeBy\"\n            [attr.transform]=\"'translate(' + node.x + ',' + node.y + ')'\"\n            [attr.fill]=\"colors.getColor(groupResultsBy(node))\"\n            [attr.stroke]=\"colors.getColor(groupResultsBy(node))\"\n            (mousedown)=\"onDragStart(node, $event)\"\n            (click)=\"onClick({name: node.value})\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"'top'\"\n            [tooltipType]=\"'tooltip'\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : node.value\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"node\">\n            <ng-template *ngIf=\"nodeTemplate\"\n              [ngTemplateOutlet]=\"nodeTemplate\"\n              [ngTemplateOutletContext]=\"{ $implicit: node }\">\n            </ng-template>\n            <svg:circle *ngIf=\"!nodeTemplate\" r=\"5\" />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styles: [require('../common/base-chart.component.scss'), require('./force-directed-graph.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ForceDirectedGraphComponent extends BaseChartComponent {\n  @Input()\n  force: any = forceSimulation<any>()\n    .force('charge', forceManyBody())\n    .force('collide', forceCollide(5))\n    .force('x', forceX())\n    .force('y', forceY());\n\n  @Input() forceLink: any = forceLink<any, any>().id(node => node.value);\n  @Input() legend: boolean;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() nodes: any[] = [];\n  @Input() links: Array<{ source: any; target: any }> = [];\n  @Input() activeEntries: any[] = [];\n  @Input() tooltipDisabled: boolean = false;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('linkTemplate', {static: false}) linkTemplate: TemplateRef<any>;\n  @ContentChild('nodeTemplate', {static: false}) nodeTemplate: TemplateRef<any>;\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n  @ViewChild(ChartComponent, { read: ElementRef,static: false })\n  chart: ElementRef;\n\n  colors: ColorHelper;\n  dims: ViewDimensions;\n  draggingNode: any;\n  draggingStart: { x: number; y: number };\n  margin = [0, 0, 0, 0];\n  results = [];\n  seriesDomain: any;\n  transform: string;\n  legendOptions: any;\n\n  @Input() groupResultsBy: (node: any) => string = node => node.value;\n\n  update(): void {\n    super.update();\n\n    // center graph\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n\n    this.seriesDomain = this.getSeriesDomain();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `\n      translate(${this.dims.xOffset + this.dims.width / 2}, ${this.margin[0] + this.dims.height / 2})\n    `;\n    if (this.force) {\n      this.force\n        .nodes(this.nodes)\n        .force('link', this.forceLink.links(this.links))\n        .alpha(0.5)\n        .restart();\n    }\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  onActivate(event): void {\n    if (this.activeEntries.indexOf(event) > -1) return;\n    this.activeEntries = [event, ...this.activeEntries];\n    this.activate.emit({ value: event, entries: this.activeEntries });\n  }\n\n  onDeactivate(event): void {\n    const idx = this.activeEntries.indexOf(event);\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: event, entries: this.activeEntries });\n  }\n\n  getSeriesDomain(): any[] {\n    return this.nodes\n      .map(d => this.groupResultsBy(d))\n      .reduce((nodes: any[], node): any[] => (nodes.includes(node) ? nodes : nodes.concat([node])), [])\n      .sort();\n  }\n\n  trackLinkBy(index, link): any {\n    return link.index;\n  }\n\n  trackNodeBy(index, node): any {\n    return node.value;\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n\n  getLegendOptions() {\n    return {\n      scaleType: 'ordinal',\n      domain: this.seriesDomain,\n      colors: this.colors,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n\n  // Easier to use Angular2 event management than use d3.drag\n  onDragStart(node, $event: MouseEvent): void {\n    this.force.alphaTarget(0.3).restart();\n    this.draggingNode = node;\n    this.draggingStart = { x: $event.x - node.x, y: $event.y - node.y };\n    this.draggingNode.fx = $event.x - this.draggingStart.x;\n    this.draggingNode.fy = $event.y - this.draggingStart.y;\n  }\n\n  @HostListener('document:mousemove', ['$event'])\n  onDrag($event: MouseEvent): void {\n    if (!this.draggingNode) return;\n\n    this.draggingNode.fx = $event.x - this.draggingStart.x;\n    this.draggingNode.fy = $event.y - this.draggingStart.y;\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onDragEnd($event: MouseEvent): void {\n    if (!this.draggingNode) return;\n\n    this.force.alphaTarget(0);\n    this.draggingNode.fx = undefined;\n    this.draggingNode.fy = undefined;\n    this.draggingNode = undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ForceDirectedGraphComponent } from './force-directed-graph.component';\nimport { ChartCommonModule } from '../common/chart-common.module';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    ForceDirectedGraphComponent,\n  ],\n  exports: [\n    ForceDirectedGraphComponent,\n  ]\n})\nexport class ForceDirectedGraphModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  ElementRef,\n  OnChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { select } from 'd3-selection';\n\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'g[ngx-charts-heat-map-cell]',\n  template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-linear-gradient\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        style=\"cursor: pointer\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeatMapCellComponent implements OnChanges {\n\n  @Input() fill;\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() data;\n  @Input() label;\n  @Input() gradient: boolean = false;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  element: HTMLElement;\n  transform: string;\n  activeRange: any[];\n  startOpacity: number;\n  gradientId: string;\n  gradientUrl: string;\n  gradientStops: any[];\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.transform = `translate(${this.x} , ${this.y})`;\n\n    this.startOpacity = 0.3;\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n\n    if (this.animations) {\n      this.loadAnimation();\n    }\n  }\n\n  getGradientStops() {\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: this.startOpacity\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n    }];\n  }\n\n  loadAnimation(): void {\n    const node = select(this.element).select('.cell');\n    node.attr('opacity', 0);\n    this.animateToCurrentForm();\n  }\n\n  animateToCurrentForm(): void {\n    const node = select(this.element).select('.cell');\n    \n    node.transition().duration(750)\n      .attr('opacity', 1);\n  }\n\n  onClick() {\n    this.select.emit(this.data);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  OnChanges,\n  OnInit,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { formatLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'g[ngx-charts-heat-map-cell-series]',\n  template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy:trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick($event, c.label, c.series)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"'top'\"\n      [tooltipType]=\"'tooltip'\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{series: c.series, name: c.label, value: c.data}\">\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeatCellSeriesComponent implements OnChanges, OnInit {\n\n  @Input() data;\n  @Input() colors;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() gradient: boolean;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipText: any;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations: boolean = true;\n  \n  @Output() select = new EventEmitter();\n\n  cells: any[];\n\n  ngOnInit() {\n    if (!this.tooltipText) {\n      this.tooltipText = this.getTooltipText;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.cells = this.getCells();\n  }\n\n  getCells() {\n    const cells = [];\n\n    this.data.map((row) => {\n      row.series.map((cell) => {\n        const value = cell.value;\n\n        cells.push({\n          row,\n          cell,\n          x: this.xScale(row.name),\n          y: this.yScale(cell.name),\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: this.colors.getColor(value),\n          data: value,\n          label: formatLabel(cell.name),\n          series: row.name\n        });\n      });\n    });\n\n    return cells;\n  }\n\n  getTooltipText({ label, data, series }): string {\n    return `\n      <span class=\"tooltip-label\">${series} • ${label}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n  }\n\n  trackBy(index, item): string {\n    return item.tooltipText;\n  }\n\n  onClick(value, label, series): void {\n    this.select.emit({\n      name: label,\n      value,\n      series\n    });\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleBand } from 'd3-scale';\n\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport {getScaleType} from '../common/domain.helper';\n\n@Component({\n  selector: 'ngx-charts-heat-map',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\">\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\">\n        </svg:g>\n        <svg:g ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:rect *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [require('../common/base-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HeatMapComponent extends BaseChartComponent {\n\n  @Input() legend;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n  @Input() innerPadding: number | number[] = 8;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipText: any;\n  @Input() min: any;\n  @Input() max: any;\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xDomain: any[];\n  yDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  color: any;\n  colors: ColorHelper;\n  colorScale: any;\n  transform: string;\n  rects: any[];\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  scaleType: string = 'linear';\n\n  update(): void {\n    super.update();\n\n    this.formatDates();\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.scaleType = getScaleType(this.valueDomain, false);\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.scaleType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.scaleType === 'linear') {\n      let min = this.min;\n      let max = this.max;\n      if (!this.min) {\n        min = Math.min(0, ...this.valueDomain);\n      }\n      if (!this.max) {\n        max = Math.max(...this.valueDomain);\n      }\n      this.valueDomain = [min, max];\n    }\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.rects = this.getRects();\n  }\n\n  getXDomain(): any {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  /**\n   * Converts the input to gap paddingInner in fraction\n   * Supports the following inputs:\n   *    Numbers: 8\n   *    Strings: \"8\", \"8px\", \"8%\"\n   *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n   *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n   *\n   * @param {(string | number | Array<string | number>)} value\n   * @param {number} [index=0]\n   * @param {number} N\n   * @param {number} L\n   * @returns {number}\n   *\n   * @memberOf HeatMapComponent\n   */\n  getDimension(value: string | number | Array<string | number>, index = 0, N: number, L: number): number {\n    if (typeof value === 'string') {\n      value = value\n        .replace('[', '')\n        .replace(']', '')\n        .replace('px', '')\n        .replace('\\'', '');\n\n      if (value.includes(',')) {\n        value = value.split(',');\n      }\n    }\n    if (Array.isArray(value) && typeof index === 'number') {\n      return this.getDimension(value[index], null, N, L);\n    }\n    if (typeof value === 'string' && value.includes('%')) {\n      return +value.replace('%', '') / 100;\n    }\n    return N / (L / +value + 1);\n  }\n\n  getXScale(): any {\n    const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .domain(this.xDomain)\n      .paddingInner(f);\n  }\n\n  getYScale(): any {\n    const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n    return scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .domain(this.yDomain)\n      .paddingInner(f);\n  }\n\n  getRects(): any[] {\n    const rects = [];\n\n    this.xDomain.map((xVal) => {\n      this.yDomain.map((yVal) => {\n        rects.push({\n          x: this.xScale(xVal),\n          y: this.yScale(yVal),\n          rx: 3,\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: 'rgba(200,200,200,0.03)'\n        });\n      });\n    });\n\n    return rects;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n  }\n\n  getLegendOptions() {\n    return {\n      scaleType: this.scaleType,\n      domain: this.valueDomain,\n      colors: this.scaleType === 'ordinal' ? this.colors : this.colors.scale,\n      title: this.scaleType === 'ordinal' ? this.legendTitle : undefined,\n      position: this.legendPosition\n    };\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { HeatMapCellComponent } from './heat-map-cell.component';\nimport { HeatCellSeriesComponent } from './heat-map-cell-series.component';\nimport { HeatMapComponent } from './heat-map.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    HeatMapCellComponent,\n    HeatCellSeriesComponent,\n    HeatMapComponent\n  ],\n  exports: [\n    HeatMapCellComponent,\n    HeatCellSeriesComponent,\n    HeatMapComponent\n  ]\n})\nexport class HeatMapModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ElementRef,\n  ChangeDetectionStrategy,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { select } from 'd3-selection';\n\n@Component({\n  selector: 'g[ngx-charts-line]',\n  template: `\n    <svg:path\n      [@animationState]=\"'active'\"\n      class=\"line\"\n      [attr.d]=\"initialPath\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      stroke-width=\"1.5px\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({\n          strokeDasharray: 2000,\n          strokeDashoffset: 2000,\n        }),\n        animate(1000, style({\n          strokeDashoffset: 0\n        }))\n      ])\n    ])\n  ]\n})\nexport class LineComponent implements OnChanges {\n\n  @Input() path;\n  @Input() stroke;\n  @Input() data;\n  @Input() fill: string = 'none';\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  initialized: boolean = false;\n  initialPath: string;\n\n  constructor(private element: ElementRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.initialPath = this.path;\n    } else {\n      this.updatePathEl();\n    }\n  }\n\n  updatePathEl(): void {\n    const node = select(this.element.nativeElement).select('.line');\n\n    if (this.animations) {\n      node\n        .transition().duration(750)\n        .attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  HostListener,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ngx-charts-line-chart',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-line-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [hasRange]=\"hasRange\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styles: [require('../common/base-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(\n          500,\n          style({\n            opacity: 0\n          })\n        )\n      ])\n    ])\n  ]\n})\nexport class LineChartComponent extends BaseChartComponent {\n  @Input() legend;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() autoScale;\n  @Input() timeline;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() rangeFillOpacity: number;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() showRefLines: boolean = false;\n  @Input() referenceLines: any;\n  @Input() showRefLabels: boolean = true;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: number;\n  @Input() yScaleMax: number;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate',{static: false}) seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xSet: any;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  yScale: any;\n  xScale: any;\n  colors: ColorHelper;\n  scaleType: string;\n  transform: string;\n  clipPath: string;\n  clipPathId: string;\n  series: any;\n  areaPath: any;\n  margin = [10, 20, 10, 20];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  filteredDomain: any;\n  legendOptions: any;\n  hasRange: boolean; // whether the line has a min-max range around it\n  timelineWidth: any;\n  timelineHeight: number = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding: number = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n\n    if (this.scaleType === 'time') {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime()\n        .range([0, width])\n        .domain(domain);\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear()\n        .range([0, width])\n        .domain(domain);\n\n      if (this.roundDomains) {\n        scale = scale.nice();\n      }\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .range([0, width])\n        .padding(0.1)\n        .domain(domain);\n    }\n\n    return scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item): void {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    this.deactivateAll();\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { area, line } from 'd3-shape';\n\nimport { id } from '../utils/id';\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\n\n@Component({\n  selector: 'g[ngx-charts-line-series]',\n  template: `\n    <svg:g>\n      <defs>\n        <svg:g ngx-charts-svg-linear-gradient *ngIf=\"hasGradient\"\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n     <svg:g ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LineSeriesComponent implements OnChanges {\n\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() scaleType;\n  @Input() curve: any;\n  @Input() activeEntries: any[];\n  @Input() rangeFillOpacity: number;\n  @Input() hasRange: boolean;\n  @Input() animations: boolean = true;\n\n  path: string;\n  outerPath: string;\n  areaPath: string;\n  gradientId: string;\n  gradientUrl: string;\n  hasGradient: boolean;\n  gradientStops: any[];\n  areaGradientStops: any[];\n  stroke: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateGradients();\n\n    const data = this.sortData(this.data.series);\n\n    const lineGen = this.getLineGenerator();\n    this.path = lineGen(data) || '';\n\n    const areaGen = this.getAreaGenerator();\n    this.areaPath = areaGen(data) || '';\n\n    if (this.hasRange) {\n      const range = this.getRangeGenerator();\n      this.outerPath = range(data) || '';\n    }\n\n    if (this.hasGradient) {\n      this.stroke = this.gradientUrl;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      if (max === min) {\n        this.stroke = this.colors.getColor(max);\n      }\n    } else {\n      this.stroke = this.colors.getColor(this.data.name);\n    }\n  }\n\n  getLineGenerator(): any {\n    return line<any>()\n      .x(d => {\n        const label = d.name;\n        let value;\n        if (this.scaleType === 'time') {\n          value = this.xScale(label);\n        } else if (this.scaleType === 'linear') {\n          value = this.xScale(Number(label));\n        } else {\n          value = this.xScale(label);\n        }\n        return value;\n      })\n      .y(d => this.yScale(d.value))\n      .curve(this.curve);\n  }\n\n  getRangeGenerator(): any {\n    return area<any>()\n        .x(d => {\n          const label = d.name;\n          let value;\n          if (this.scaleType === 'time') {\n            value = this.xScale(label);\n          } else if (this.scaleType === 'linear') {\n            value = this.xScale(Number(label));\n          } else {\n            value = this.xScale(label);\n          }\n          return value;\n        })\n        .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))\n        .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))\n        .curve(this.curve);\n  }\n\n  getAreaGenerator(): any {\n    const xProperty = (d) => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n\n    return area<any>()\n      .x(xProperty)\n      .y0(() => this.yScale.range()[0])\n      .y1(d => this.yScale(d.value))\n      .curve(this.curve);\n  }\n\n  sortData(data) {\n    if (this.scaleType === 'linear') {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === 'time') {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n\n    return data;\n  }\n\n  updateGradients() {\n    if (this.colors.scaleType === 'linear') {\n      this.hasGradient = true;\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = `url(#${this.gradientId})`;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      this.areaGradientStops = this.colors.getLinearGradientStops(max);\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n      this.areaGradientStops = undefined;\n    }\n  }\n\n  isActive(entry): boolean {\n    if(!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry): boolean {\n    if(!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { LineComponent } from './line.component';\nimport { LineChartComponent } from './line-chart.component';\nimport { LineSeriesComponent } from './line-series.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    LineComponent,\n    LineChartComponent,\n    LineSeriesComponent\n  ],\n  exports: [\n    LineComponent,\n    LineChartComponent,\n    LineSeriesComponent\n  ]\n})\nexport class LineChartModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\nimport { curveCardinalClosed } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { getScaleType } from '../common/domain.helper';\nimport { isDate } from '../utils/types';\n\nconst twoPI = 2 * Math.PI;\n\n@Component({\n  selector: 'ngx-charts-polar-chart',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\">\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle\n            class=\"polar-chart-background\"\n            cx=\"0\" cy=\"0\"\n            [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\" cy=\"0\"\n              [attr.r]=\"r\" />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\">\n            </svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:g ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"'bottom'\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\">\n        </svg:g>\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy:trackBy\" [@animationState]=\"'active'\">\n            <svg:g ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styles: [\n    require('../common/base-chart.component.scss'),\n    require('../pie-chart/pie-chart.component.scss'),\n    require('./polar-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n        }),\n        animate(500, style({\n          opacity: 0\n        }))\n      ])\n    ])\n  ]\n})\nexport class PolarChartComponent extends BaseChartComponent {\n\n  @Input() legend: boolean;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis: boolean;\n  @Input() yAxis: boolean;\n  @Input() showXAxisLabel: boolean;\n  @Input() showYAxisLabel: boolean;\n  @Input() xAxisLabel: string;\n  @Input() yAxisLabel: string;\n  @Input() autoScale: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() curve: any = curveCardinalClosed;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() rangeFillOpacity: number = 0.15;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: (o: any) => any;\n  @Input() yAxisTickFormatting: (o: any) => any;\n  @Input() roundDomains: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() showSeriesOnHover: boolean = true;\n  @Input() gradient: boolean = false;\n  @Input() yAxisMinScale: number = 0;\n  @Input() labelTrim: boolean = true;\n  @Input() labelTrimSize: number = 10;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  yAxisDims: ViewDimensions;\n  labelOffset: number;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  yScale: any;  // -> rScale\n  xScale: any;  // -> tScale\n  yAxisScale: any; // -> yScale\n  colors: ColorHelper;\n  scaleType: string;\n  transform: string;\n  transformPlot: string;\n  transformYAxis: string;\n  transformXAxis: string;\n  series: any; // ???\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  filteredDomain: any;\n  legendOptions: any;\n  thetaTicks: any[];\n  radiusTicks: number[];\n  outerRadius: number;\n\n  update(): void {\n    super.update();\n\n    this.setDims();\n    this.setScales();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.setTicks();\n  }\n\n  setDims() {\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    const halfWidth = Math.floor((this.dims.width / 2));\n    const halfHeight = Math.floor((this.dims.height / 2));\n\n    const outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);\n\n    const yOffset = Math.max(0, halfHeight - outerRadius);\n\n    this.yAxisDims = {\n      ...this.dims,\n      width: halfWidth\n    };\n\n    this.transform = `translate(${ this.dims.xOffset }, ${ this.margin[0] })`;\n    this.transformYAxis = `translate(0, ${yOffset})`;\n    this.labelOffset = this.dims.height + 40;\n    this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n  }\n\n  setScales() {\n    const xValues = this.getXValues();\n    this.scaleType = getScaleType(xValues);\n    this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, twoPI);\n    this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n    this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n  }\n\n  setTicks() {\n    let tickFormat;\n    if (this.xAxisTickFormatting) {\n      tickFormat = this.xAxisTickFormatting;\n    } else if (this.xScale.tickFormat) {\n      tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n    } else {\n      tickFormat = d => {\n        if (isDate(d)) {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n\n    const outerRadius = this.outerRadius;\n    const s = 1.1;\n\n    this.thetaTicks = this.xDomain.map(d => {\n      const startAngle = this.xScale(d);\n      const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n      const label = tickFormat(d);\n\n      const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n      const pos = [dd, s * startPos[1]];\n      return {\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle: startAngle,\n        value: outerRadius,\n        label,\n        startPos,\n        pos\n      };\n    });\n\n    const minDistance = 10;\n\n    /* from pie chart, abstract out -*/\n    for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n      const a = this.thetaTicks[i];\n\n      for (let j = i + 1; j < this.thetaTicks.length; j++) {\n        const b = this.thetaTicks[j];\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n\n    this.radiusTicks = this.yAxisScale\n      .ticks(Math.floor((this.dims.height / 50)))\n      .map(d => this.yScale(d));\n  }\n\n  getXValues(): any[] {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n    return values;\n  }\n\n  getXDomain(values = this.getXValues()): any[] {\n    if (this.scaleType === 'time') {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    }\n    return values;\n  }\n\n  getYValues(): any[] {\n    const domain = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n    return domain;\n  }\n\n  getYDomain(domain = this.getYValues()): any[] {\n    let min = Math.min(...domain);\n    const max = Math.max(this.yAxisMinScale, ...domain);\n\n    min = Math.max(0, min);\n    if (!this.autoScale) {\n      min = Math.min(0, min);\n    }\n\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    switch (this.scaleType) {\n      case 'time':\n        return scaleTime()\n          .range([0, width])\n          .domain(domain);\n      case 'linear':\n        const scale = scaleLinear()\n          .range([0, width])\n          .domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n      default:\n        return scalePoint()\n          .range([0, width - twoPI / domain.length])\n          .padding(0)\n          .domain(domain);\n    }\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([0, height])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    const domain = (this.schemeType === 'ordinal') ?\n      this.seriesDomain :\n      this.yDomain.reverse();\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    if (this.schemeType === 'ordinal') {\n      return {\n        scaleType: this.schemeType,\n        colors: this.colors,\n        domain: this.seriesDomain,\n        title: this.legendTitle,\n        position: this.legendPosition\n      };\n    }\n    return {\n      scaleType: this.schemeType,\n      colors: this.colors.scale,\n      domain: this.yDomain,\n      title: undefined,\n      position: this.legendPosition\n    };\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = this.showSeriesOnHover ? [ item, ...this.activeEntries ] : this.activeEntries;\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n}\n","\nexport function isDate(value) {\n  return toString.call(value) === '[object Date]';\n}\n\nexport function isNumber(value) {\n  return typeof value === 'number';\n}\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\nimport { lineRadial } from 'd3-shape';\n\nimport { id } from '../utils/id';\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\n\n@Component({\n  selector: 'g[ngx-charts-polar-series]',\n  template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g ngx-charts-svg-radial-gradient *ngIf=\"hasGradient\"\n          orientation=\"vertical\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'top'\"\n        tooltipType=\"tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\">\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PolarSeriesComponent implements OnChanges {\n  @Input() name;\n  @Input() data;\n  @Input() xScale; // Theta\n  @Input() yScale; // R\n  @Input() colors;\n  @Input() scaleType;\n  @Input() curve: any;\n  @Input() activeEntries: any[];\n  @Input() rangeFillOpacity: number;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipText: (o: any) => string;\n  @Input() gradient: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations: boolean = true;\n\n  path: string;\n  circles: any[];\n  circleRadius: number = 3;\n\n  outerPath: string;\n  areaPath: string;\n  gradientId: string;\n  gradientUrl: string;\n  hasGradient: boolean;\n  gradientStops: any[];\n  areaGradientStops: any[];\n  seriesColor: string;\n\n  active: boolean;\n  inactive: boolean;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateGradients();\n\n    const line = this.getLineGenerator();\n\n    const data = this.sortData(this.data.series);\n\n    const seriesName = this.data.name;\n    const linearScaleType = this.colors.scaleType === 'linear';\n    const min = this.yScale.domain()[0];\n    this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n\n    this.path = line(data) || '';\n\n    this.circles = data.map(d => {\n      const a = this.getAngle(d);\n      const r = this.getRadius(d);\n      const value = d.value;\n\n      const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n\n      const cData = Object.assign({}, d, {\n        series: seriesName,\n        value,\n        name: d.name\n      });\n\n      return {\n        data: cData,\n        cx: r * Math.sin(a),\n        cy: -r * Math.cos(a),\n        value,\n        color,\n        label: d.name\n      };\n    });\n\n    this.active = this.isActive(this.data);\n    this.inactive = this.isInactive(this.data);\n    this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n  }\n\n  getAngle(d) {\n    const label = d.name;\n    if (this.scaleType === 'time') {\n      return this.xScale(label);\n    } else if (this.scaleType === 'linear') {\n      return this.xScale(Number(label));\n    }\n    return this.xScale(label);\n  }\n\n  getRadius(d) {\n    return this.yScale(d.value);\n  }\n\n  getLineGenerator(): any {\n    return lineRadial<any>()\n      .angle(d => this.getAngle(d))\n      .radius(d => this.getRadius(d))\n      .curve(this.curve);\n  }\n\n  sortData(data) {\n    if (this.scaleType === 'linear') {\n      return sortLinear(data, 'name');\n    } else if (this.scaleType === 'time') {\n      return sortByTime(data, 'name');\n    }\n    return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry): boolean {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n\n  defaultTooltipText({ label, value }): string {\n    return `\n      <span class=\"tooltip-label\">${this.data.name} • ${label}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n\n  updateGradients() {\n    this.hasGradient = this.gradient || this.colors.scaleType === 'linear';\n\n    if (!this.hasGradient) {\n      return;\n    }\n\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n\n    if (this.colors.scaleType === 'linear') {\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n    } else {\n      this.gradientStops = undefined;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-advanced-pie-chart',\n  template: `\n    <div\n      [style.width.px]=\"width\"\n      [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\"\n        [style.width.px]=\"dims.width\"\n        [style.height.px]=\"dims.height\">\n        <ngx-charts-chart\n          [view]=\"[width, height]\"\n          [showLegend]=\"false\"\n          [animations]=\"animations\">\n          <svg:g\n            [attr.transform]=\"transform\"\n            class=\"pie chart\">\n            <svg:g ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              [animations]=\"animations\">\n            </svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div\n        class=\"advanced-pie-legend-wrapper\"\n        [style.width.px]=\"width - dims.width\"\n        [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\">\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `,\n  styles: [require('../common/base-chart.component.scss'), require('./advanced-pie-chart.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdvancedPieChartComponent extends BaseChartComponent {\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[] = [];\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipText: any;\n  @Input() label: string = 'Total';\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate',{static: false}) tooltipTemplate: TemplateRef<any>;\n\n  data: any;\n  dims: ViewDimensions;\n  domain: any[];\n  outerRadius: number;\n  innerRadius: number;\n  transform: string;\n  colors: ColorHelper;\n  legendWidth: number;\n  margin = [20, 20, 20, 20];\n\n  @Input() valueFormatting: (value: number) => any;\n  @Input() nameFormatting: (value: string) => any;\n  @Input() percentageFormatting: (value: number) => any;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: (this.width * 4) / 12.0,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.domain = this.getDomain();\n    this.setColors();\n\n    const xOffset = this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.legendWidth = this.width - this.dims.width - this.margin[1];\n\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n    this.innerRadius = this.outerRadius * 0.75;\n\n    this.transform = `translate(${xOffset} , ${yOffset})`;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n  onActivate(event): void {\n    if (this.activeEntries.indexOf(event) > -1) return;\n    this.activeEntries = [event, ...this.activeEntries];\n    this.activate.emit({ value: event, entries: this.activeEntries });\n  }\n\n  onDeactivate(event): void {\n    const idx = this.activeEntries.indexOf(event);\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: event, entries: this.activeEntries });\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { arc } from 'd3-shape';\n\nimport { trimLabel } from '../common/trim-label.helper';\n\n@Component({\n  selector: 'g[ngx-charts-pie-label]',\n  template: `\n    <title>{{label}}</title>\n    <svg:g\n      [attr.transform]=\"attrTransform\"\n      [style.transform]=\"styleTransform\"\n      [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\">\n        {{labelTrim ? trimLabel(label, labelTrimSize) : label}}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\">\n    </svg:path>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieLabelComponent implements OnChanges {\n  @Input() data;\n  @Input() radius;\n  @Input() label;\n  @Input() color;\n  @Input() max;\n  @Input() value;\n  @Input() explodeSlices;\n  @Input() animations: boolean = true;\n  @Input() labelTrim: boolean = true;\n  @Input() labelTrimSize: number = 10;\n\n  trimLabel: (label: string, max?: number) => string;\n  line: string;\n\n  private readonly isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n\n  constructor() {\n    this.trimLabel = trimLabel;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    let startRadius = this.radius;\n    if (this.explodeSlices) {\n      startRadius = this.radius * this.value / this.max;\n    }\n\n    const innerArc = arc()\n      .innerRadius(startRadius)\n      .outerRadius(startRadius);\n\n    // Calculate innerPos then scale outer position to match label position\n    const innerPos = innerArc.centroid(this.data);\n\n    let scale = this.data.pos[1] / innerPos[1];\n    if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n      scale = 1;\n    }\n    const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n\n    this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n  }\n\n  get textX(): number {\n    return this.data.pos[0];\n  }\n\n  get textY(): number {\n    return this.data.pos[1];\n  }\n\n  get styleTransform(): string {\n    return this.isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n  }\n\n  get attrTransform(): string {\n    return !this.isIE ? null : `translate(${this.textX},${this.textY})`;\n  }\n\n  get textTransition(): string {\n    return this.isIE || !this.animations ? null : 'transform 0.75s';\n  }\n\n  textAnchor(): any {\n    return this.midAngle(this.data) < Math.PI ? 'start' : 'end';\n  }\n\n  midAngle(d): number {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  SimpleChanges,\n  OnChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { interpolate } from 'd3-interpolate';\nimport { select } from 'd3-selection';\nimport { arc } from 'd3-shape';\n\nimport { id } from '../utils/id';\n/* tslint:disable */\nimport { MouseEvent } from '../events';\n\n@Component({\n  selector: 'g[ngx-charts-pie-arc]',\n  template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient\n          [color]=\"fill\"\n          orientation=\"vertical\"\n          [name]=\"radialGradientId\"\n          [startOpacity]=\"startOpacity\"\n        />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieArcComponent implements OnChanges {\n  @Input() fill;\n  @Input() startAngle: number = 0;\n  @Input() endAngle: number = Math.PI * 2;\n  @Input() innerRadius;\n  @Input() outerRadius;\n  @Input() cornerRadius: number = 0;\n  @Input() value;\n  @Input() max;\n  @Input() data;\n  @Input() explodeSlices: boolean = false;\n  @Input() gradient: boolean = false;\n  @Input() animate: boolean = true;\n  @Input() pointerEvents: boolean = true;\n  @Input() isActive: boolean = false;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dblclick = new EventEmitter();\n\n  element: HTMLElement;\n  path: any;\n  startOpacity: number;\n  radialGradientId: string;\n  linearGradientId: string;\n  gradientFill: string;\n  initialized: boolean = false;\n  private _timeout;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  getGradient() {\n    return this.gradient ? this.gradientFill : this.fill;\n  }\n\n  getPointerEvents() {\n    return this.pointerEvents ? 'auto' : 'none';\n  }\n\n  update(): void {\n    const calc = this.calculateArc();\n    this.startOpacity = 0.5;\n    this.radialGradientId = 'linearGrad' + id().toString();\n    this.gradientFill = `url(#${this.radialGradientId})`;\n\n    if (this.animate) {\n      if (this.initialized) {\n        this.updateAnimation();\n      } else {\n        this.loadAnimation();\n        this.initialized = true;\n      }\n    } else {\n      this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n    }\n  }\n\n  calculateArc(): any {\n    let outerRadius = this.outerRadius;\n    if (this.explodeSlices && this.innerRadius === 0) {\n      outerRadius = (this.outerRadius * this.value) / this.max;\n    }\n\n    return arc()\n      .innerRadius(this.innerRadius)\n      .outerRadius(outerRadius)\n      .cornerRadius(this.cornerRadius);\n  }\n\n  loadAnimation(): void {\n    const node = select(this.element)\n      .selectAll('.arc')\n      .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n\n    const calc = this.calculateArc();\n\n    node\n      .transition()\n      .attrTween('d', function(d) {\n        (<any>this)._current = (<any>this)._current || d;\n        const copyOfD = Object.assign({}, d);\n        copyOfD.endAngle = copyOfD.startAngle;\n        const interpolater = interpolate(copyOfD, copyOfD);\n        (<any>this)._current = interpolater(0);\n        return function(t) {\n          return calc(interpolater(t));\n        };\n      })\n      .transition()\n      .duration(750)\n      .attrTween('d', function(d) {\n        (<any>this)._current = (<any>this)._current || d;\n        const interpolater = interpolate((<any>this)._current, d);\n        (<any>this)._current = interpolater(0);\n        return function(t) {\n          return calc(interpolater(t));\n        };\n      });\n  }\n\n  updateAnimation(): void {\n    const node = select(this.element)\n      .selectAll('.arc')\n      .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n\n    const calc = this.calculateArc();\n\n    node\n      .transition()\n      .duration(750)\n      .attrTween('d', function(d) {\n        (<any>this)._current = (<any>this)._current || d;\n        const interpolater = interpolate((<any>this)._current, d);\n        (<any>this)._current = interpolater(0);\n        return function(t) {\n          return calc(interpolater(t));\n        };\n      });\n  }\n\n  onClick(): void {\n    clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n  }\n\n  onDblClick(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this._timeout);\n\n    this.dblclick.emit({\n      data: this.data,\n      nativeEvent: event\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-pie-chart',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n      (legendLabelClick)=\"onClick($event)\">\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styles: [\n    require('../common/base-chart.component.scss'),\n    require('./pie-chart.component.scss')\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieChartComponent extends BaseChartComponent {\n\n  @Input() labels = false;\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() explodeSlices = false;\n  @Input() doughnut = false;\n  @Input() arcWidth = 0.25;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[] = [];\n  @Input() tooltipDisabled: boolean = false;\n  @Input() labelFormatting: any;\n  @Input() trimLabels: boolean = true;\n  @Input() maxLabelLength: number = 10;\n  @Input() tooltipText: any;\n  @Output() dblclick = new EventEmitter();\n  // optional margins\n  @Input() margins: number[];\n  @Output() select = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false}) tooltipTemplate: TemplateRef<any>;\n\n  translation: string;\n  outerRadius: number;\n  innerRadius: number;\n  data: any;\n  colors: ColorHelper;\n  domain: any;\n  dims: any;\n  legendOptions: any;\n\n  update(): void {\n    super.update();\n\n    if (this.labels && this.hasNoOptionalMarginsSet()) {\n      this.margins = [30, 80, 30, 80];\n    } else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n      // default value for margins\n      this.margins = [20, 20, 20, 20];\n    }\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margins,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n\n    const xOffset = this.margins[3] + this.dims.width / 2;\n    const yOffset = this.margins[0] + this.dims.height / 2;\n    this.translation = `translate(${xOffset}, ${yOffset})`;\n    this.outerRadius = Math.min(this.dims.width, this.dims.height);\n    if (this.labels) {\n      // make room for labels\n      this.outerRadius /= 3;\n    } else {\n      this.outerRadius /= 2;\n    }\n    this.innerRadius = 0;\n    if (this.doughnut) {\n      this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n    }\n\n    this.domain = this.getDomain();\n\n    // sort data according to domain\n    this.data = this.results.sort((a, b) => {\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n    });\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n  }\n\n  getDomain(): any[] {\n    const items = [];\n\n    this.results.map(d => {\n      let label = d.name;\n      if (label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label.toLocaleString();\n      }\n\n      if (items.indexOf(label) === -1) {\n        items.push(label);\n      }\n    });\n\n    return items;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    return {\n      scaleType: 'ordinal',\n      domain: this.domain,\n      colors: this.colors,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [ item, ...this.activeEntries ];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  private hasNoOptionalMarginsSet(): boolean {\n    return !this.margins || this.margins.length <= 0;\n  }\n}\n","import { scaleBand } from 'd3-scale';\n\nexport function gridSize(dims, len, minWidth) {\n  let rows = 1;\n  let cols = len;\n  const width = dims.width;\n\n  if (width > minWidth) {\n    while (width / cols < minWidth) {\n      rows += 1;\n      cols = Math.ceil(len / rows);\n    }\n  }\n\n  return [cols, rows];\n}\n\nexport function gridLayout(dims, data, minWidth, designatedTotal) {\n  const xScale: any = scaleBand<number>();\n  const yScale: any = scaleBand<number>();\n  const width = dims.width;\n  const height = dims.height;\n\n  const [columns, rows] = gridSize(dims, data.length, minWidth);\n\n  const xDomain = [];\n  const yDomain = [];\n  for (let i = 0; i < rows; i++) {\n    yDomain.push(i);\n  }\n  for (let i = 0; i < columns; i++) {\n    xDomain.push(i);\n  }\n  xScale.domain(xDomain);\n  yScale.domain(yDomain);\n\n  xScale.rangeRound([0, width], 0.1);\n  yScale.rangeRound([0, height], 0.1);\n\n  const res = [];\n  const total = designatedTotal ? designatedTotal : getTotal(data);\n  const cardWidth = xScale.bandwidth();\n  const cardHeight = yScale.bandwidth();\n\n  for (let i = 0; i < data.length; i++) {\n    res[i] = {};\n    res[i].data = {\n      name: data[i] ? data[i].name : '',\n      value: data[i] ? data[i].value : undefined,\n      extra: data[i] ? data[i].extra : undefined,\n    };\n    res[i].x = xScale(i % columns);\n    res[i].y = yScale(Math.floor(i / columns));\n    res[i].width = cardWidth;\n    res[i].height = cardHeight;\n    res[i].data.percent = (total > 0) ? res[i].data.value / total : 0;\n    res[i].data.total = total;\n  }\n\n  return res;\n}\n\nfunction getTotal(results) {\n  return results\n    .map(d => d ? d.value : 0)\n    .reduce((sum, val) => sum + val, 0);\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { min } from 'd3-array';\nimport { format } from 'd3-format';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { trimLabel } from '../common/trim-label.helper';\nimport { gridLayout } from '../common/grid-layout.helper';\nimport { formatLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'ngx-charts-pie-grid',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"false\"\n      [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g\n          *ngFor=\"let series of series\"\n          class=\"pie-grid-item\"\n          [attr.transform]=\"series.transform\">\n          <svg:g ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"'top'\"\n            [tooltipType]=\"'tooltip'\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({data: series})\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n          />\n          <svg:text *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\">\n          </svg:text>\n          <svg:text *ngIf=\"!animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            text-anchor=\"middle\">\n            {{series.percent.toLocaleString()}}\n          </svg:text>\n          <svg:text\n            class=\"label\"\n            dy=\"0.5em\"\n            x=\"0\"\n            y=\"5\"\n            text-anchor=\"middle\">\n            {{series.label}}\n          </svg:text>\n          <svg:text *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\">\n          </svg:text>\n          <svg:text *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\">\n            {{label}}: {{series.total.toLocaleString()}}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styles: [\n    require('../common/base-chart.component.scss'),\n    require('./pie-grid.component.scss')\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PieGridComponent extends BaseChartComponent {\n  @Input() designatedTotal: number;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipText: (o: any) => any;\n  @Input() label: string = 'Total';\n  @Input() minWidth: number = 150;\n\n  dims: ViewDimensions;\n  data: any[];\n  transform: string;\n  series: any[];\n  domain: any[];\n  colorScale: ColorHelper;\n  margin = [20, 20, 20, 20];\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.domain = this.getDomain();\n\n    this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n\n    this.series = this.getSeries();\n    this.setColors();\n\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n\n  defaultTooltipText({ data }): string {\n    const label = trimLabel(formatLabel(data.name));\n    const val = data.value.toLocaleString();\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getSeries(): any[] {\n    const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n\n    return this.data.map((d) => {\n      const baselineLabelHeight = 20;\n      const padding = 10;\n      const name = d.data.name;\n      const label = formatLabel(name);\n      const value = d.data.value;\n      const radius = (min([d.width - padding, d.height - baselineLabelHeight]) / 2) - 5;\n      const innerRadius = radius * 0.9;\n\n      let count = 0;\n      const colors = () => {\n        count += 1;\n        if (count === 1) {\n          return 'rgba(100,100,100,0.3)';\n        } else {\n          return this.colorScale.getColor(label);\n        }\n      };\n\n      const xPos = d.x + (d.width - padding) / 2;\n      const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n\n      return {\n        transform: `translate(${xPos}, ${yPos})`,\n        colors,\n        innerRadius,\n        outerRadius: radius,\n        name,\n        label: trimLabel(label),\n        total: value,\n        value,\n        percent: format('.1%')(d.data.percent),\n        data: [d, {\n          data: {\n            other: true,\n            value: total - value,\n            name: d.data.name\n          }\n        }]\n      };\n    });\n  }\n\n  getTotal(): any {\n    return this.results\n      .map(d => d.value)\n      .reduce((sum, d) => sum + d, 0);\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colorScale = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { pie } from 'd3-shape';\n\n@Component({\n  selector: 'g[ngx-charts-pie-grid-series]',\n  template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g ngx-charts-pie-arc *ngFor=\"let arc of arcs; trackBy:trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\">\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class PieGridSeriesComponent implements OnChanges {\n\n  @Input() colors;\n  @Input() data;\n  @Input() innerRadius = 70;\n  @Input() outerRadius = 80;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  element: HTMLElement;\n  layout: any;\n  arcs: any;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.layout = pie<any, any>()\n      .value((d) => d.data.value).sort(null);\n\n    this.arcs = this.getArcs();\n  }\n\n  getArcs(): any[] {\n    return this.layout(this.data).map((arc, index) => {\n      const label = arc.data.data.name;\n      const other = arc.data.data.other;\n\n      if (index === 0) {\n        arc.startAngle = 0;\n      }\n\n      const color = this.colors(label);\n      return {\n        data: arc.data.data,\n        class: 'arc ' + 'arc' + index,\n        fill: color,\n        startAngle: other ? 0 : arc.startAngle,\n        endAngle: arc.endAngle,\n        animate: this.animations && !other,\n        pointerEvents: !other\n      };\n    });\n  }\n\n  onClick(data): void {\n    this.select.emit({\n      name: this.data[0].data.name,\n      value: this.data[0].data.value\n    });\n  }\n\n  trackBy(index, item): string {\n    return item.data.name;\n  }\n\n  label(arc): string {\n    return arc.data.name;\n  }\n\n  color(arc): any {\n    return this.colors(this.label(arc));\n  }\n\n}\n","import {\n  Component,\n  SimpleChanges,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { max } from 'd3-array';\nimport { arc, pie } from 'd3-shape';\n\nimport { formatLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'g[ngx-charts-pie-series]',\n  template: `\n    <svg:g *ngFor=\"let arc of data; trackBy:trackBy\">\n      <svg:g ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\">\n      </svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'top'\"\n        [tooltipType]=\"'tooltip'\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\">\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieSeriesComponent implements OnChanges {\n  @Input() colors;\n  @Input() series: any = [];\n  @Input() dims;\n  @Input() innerRadius = 60;\n  @Input() outerRadius = 80;\n  @Input() explodeSlices;\n  @Input() showLabels;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() labelFormatting: any;\n  @Input() trimLabels: boolean = true;\n  @Input() maxLabelLength: number = 10;\n  @Input() tooltipText: (o: any) => any;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dblclick = new EventEmitter();\n\n  max: number;\n  data: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    const pieGenerator = pie<any, any>()\n      .value(d => d.value)\n      .sort(null);\n\n    const arcData = pieGenerator(this.series);\n\n    this.max = max(arcData, d => {\n      return d.value;\n    });\n\n    this.data = this.calculateLabelPositions(arcData);\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n\n  midAngle(d): number {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n\n  outerArc(): any {\n    const factor = 1.5;\n\n    return arc()\n      .innerRadius(this.outerRadius * factor)\n      .outerRadius(this.outerRadius * factor);\n  }\n\n  calculateLabelPositions(pieData): any {\n    const factor = 1.5;\n    const minDistance = 10;\n    const labelPositions = pieData;\n\n    labelPositions.forEach(d => {\n      d.pos = this.outerArc().centroid(d);\n      d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n    });\n\n    for (let i = 0; i < labelPositions.length - 1; i++) {\n      const a = labelPositions[i];\n      if (!this.labelVisible(a)) {\n        continue;\n      }\n\n      for (let j = i + 1; j < labelPositions.length; j++) {\n        const b = labelPositions[j];\n        if (!this.labelVisible(b)) {\n          continue;\n        }\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n\n    return labelPositions;\n  }\n\n  labelVisible(myArc): boolean {\n    return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n  }\n\n  getTooltipTitle(a) {\n    return this.tooltipTemplate ? undefined : this.tooltipText(a);\n  }\n\n  labelText(myArc): string {\n    if (this.labelFormatting) {\n      return this.labelFormatting(myArc.data.name);\n    }\n    return this.label(myArc);\n  }\n\n  label(myArc): string {\n    return formatLabel(myArc.data.name);\n  }\n\n  defaultTooltipText(myArc): string {\n    const label = this.label(myArc);\n    const val = formatLabel(myArc.data.value);\n\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n\n  color(myArc): any {\n    return this.colors.getColor(this.label(myArc));\n  }\n\n  trackBy(index, item): string {\n    return item.data.name;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { AdvancedPieChartComponent } from './advanced-pie-chart.component';\nimport { PieLabelComponent } from './pie-label.component';\nimport { PieArcComponent } from './pie-arc.component';\nimport { PieChartComponent } from './pie-chart.component';\nimport { PieGridComponent } from './pie-grid.component';\nimport { PieGridSeriesComponent } from './pie-grid-series.component';\nimport { PieSeriesComponent } from './pie-series.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    AdvancedPieChartComponent,\n    PieLabelComponent,\n    PieArcComponent,\n    PieChartComponent,\n    PieGridComponent,\n    PieGridSeriesComponent,\n    PieSeriesComponent\n  ],\n  exports: [\n    AdvancedPieChartComponent,\n    PieLabelComponent,\n    PieArcComponent,\n    PieChartComponent,\n    PieGridComponent,\n    PieGridSeriesComponent,\n    PieSeriesComponent\n  ]\n})\nexport class PieChartModule {}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { PolarChartComponent } from './polar-chart.component';\nimport { PolarSeriesComponent } from './polar-series.component';\nimport { PieChartModule } from '../pie-chart/';\nimport { LineChartModule } from '../line-chart/';\n\n@NgModule({\n  imports: [ChartCommonModule, PieChartModule, LineChartModule],\n  declarations: [\n    PolarChartComponent,\n    PolarSeriesComponent\n  ],\n  exports: [\n    PolarChartComponent,\n    PolarSeriesComponent\n  ]\n})\nexport class PolarChartModule {}\n","import {\n  Component, Input, Output, EventEmitter, ElementRef,\n  SimpleChanges, OnChanges, ViewChild, ChangeDetectionStrategy,\n  ChangeDetectorRef, NgZone, OnDestroy\n} from '@angular/core';\nimport { trimLabel } from '../common/trim-label.helper';\nimport { roundedRect } from '../common/shape.helper';\nimport { count, decimalChecker } from '../common/count';\n\n@Component({\n  selector: 'g[ngx-charts-card]',\n  template: `\n    <svg:g\n      [attr.transform]=\"transform\"\n      class=\"cell\"\n      (click)=\"onClick()\">\n      <svg:rect\n        class=\"card\"\n        [style.fill]=\"color\"\n        [attr.width]=\"cardWidth\"\n        [attr.height]=\"cardHeight\"\n        rx=\"3\"\n        ry=\"3\"\n      />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{label}}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\">\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\">\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\">\n        {{value}}\n      </svg:text>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CardComponent implements OnChanges, OnDestroy {\n\n  @Input() color;\n  @Input() bandColor;\n  @Input() textColor;\n\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() label;\n  @Input() data;\n  @Input() medianSize: number;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  @ViewChild('textEl',{static: false}) textEl: ElementRef;\n\n  element: HTMLElement;\n  value: string = '';\n  transform: string;\n  formattedLabel: string;\n  cardWidth: number;\n  cardHeight: number;\n  textWidth: number;\n  textFontSize: number = 12;\n  textTransform: string = '';\n  initialized: boolean = false;\n  animationReq: any;\n\n  bandHeight: number = 10;\n  transformBand: string;\n  textPadding = [10, 20, 5, 20];\n  labelFontSize = 15;\n\n  bandPath: string;\n\n  constructor(element: ElementRef, private cd: ChangeDetectorRef, private zone: NgZone) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  ngOnDestroy(): void {\n    cancelAnimationFrame(this.animationReq);\n  }\n\n  update(): void {\n    this.zone.run(() => {\n      const hasValue = this.data && typeof this.data.value !== 'undefined';\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const labelFormatting = this.labelFormatting || (card => trimLabel(card.label, 55));\n\n      this.transform = `translate(${this.x} , ${this.y})`;\n\n      this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n      this.cardWidth = Math.max(0, this.width);\n      this.cardHeight = Math.max(0, this.height);\n\n      this.label = this.data ? this.data.name : '';\n\n      const cardData = {\n        label: this.label,\n        data: this.data,\n        value: this.data.value\n      };\n\n      this.formattedLabel = labelFormatting(cardData);\n      this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n\n      const value = hasValue ? valueFormatting(cardData) : '';\n\n      this.value = this.paddedValue(value);\n      this.setPadding();\n\n      this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n\n      setTimeout(() => {\n        this.scaleText();\n        this.value = value;\n        if (hasValue && !this.initialized) {\n          setTimeout(() => this.startCount(), 20);\n        }\n      }, 8);\n    });\n  }\n\n  paddedValue(value: string) {\n    if (this.medianSize && this.medianSize > value.length) {\n      value += '\\u2007'.repeat(this.medianSize - value.length);\n    }\n    return value;\n  }\n\n  startCount(): void {\n    if (!this.initialized && this.animations) {\n      cancelAnimationFrame(this.animationReq);\n\n      const val = this.data.value;\n      const decs = decimalChecker(val);\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n\n      const callback = ({value, finished}) => {\n        this.zone.run(() => {\n          value = finished ? val : value;\n          this.value = valueFormatting({label: this.label, data: this.data, value});\n          if (!finished) {\n            this.value = this.paddedValue(this.value);\n          }\n          this.cd.markForCheck();\n        });\n      };\n\n      this.animationReq = count(0, val, decs, 1, callback);\n      this.initialized = true;\n    }\n  }\n\n  scaleText(): void {\n    this.zone.run(() => {\n      const { width, height } = this.textEl.nativeElement.getBoundingClientRect();\n      if (width === 0 || height === 0) {\n        return;\n      }\n\n      const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n      const availableWidth = this.cardWidth - 2 * textPadding;\n      const availableHeight = this.cardHeight / 3;\n\n      const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n      this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n      this.labelFontSize = Math.min(this.textFontSize, 15);\n\n      this.setPadding();\n      this.cd.markForCheck();\n    });\n  }\n\n  setPadding() {\n    this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n    const padding = this.cardHeight / 2;\n    this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n    this.textPadding[2] = padding - this.labelFontSize;\n  }\n\n  onClick(): void {\n    this.select.emit({\n      name: this.data.name,\n      value: this.data.value\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { invertColor } from '../utils/color-utils';\n\nexport interface CardModel {\n  x;\n  y;\n  width: number;\n  height: number;\n  color: string;\n  label: string;\n  data;\n  tooltipText: string;\n}\n\n@Component({\n  selector: 'g[ngx-charts-card-series]',\n  template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy:trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g ngx-charts-card *ngFor=\"let c of cards; trackBy:trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CardSeriesComponent implements OnChanges {\n\n  @Input() data: any[];\n  @Input() slots: any[];\n  @Input() dims;\n  @Input() colors;\n  @Input() innerPadding = 15;\n\n  @Input() cardColor;\n  @Input() bandColor;\n  @Input() emptyColor = 'rgba(0, 0, 0, 0)';\n  @Input() textColor;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  cards: CardModel[];\n  emptySlots: any[];\n  medianSize: number;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    if (this.data.length > 2) {\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n\n      const sortedLengths = this.data\n        .map(d => {\n          const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n          return hasValue ? valueFormatting({\n            data: d.data,\n            label: d ? d.data.name : '',\n            value: (d && d.data) ? d.data.value : ''\n          }).length : 0;\n        })\n        .sort((a, b) => b - a);\n      const idx = Math.ceil(this.data.length / 2);\n      this.medianSize = sortedLengths[idx];\n    }\n\n    const cards = this.getCards();\n    this.cards = cards.filter(d => d.data.value !== null);\n    this.emptySlots = cards.filter(d => d.data.value === null);\n  }\n\n  getCards(): any[] {\n    const yPadding = typeof this.innerPadding === 'number' ?\n      this.innerPadding :\n      this.innerPadding[0] + this.innerPadding[2];\n    const xPadding = typeof this.innerPadding === 'number' ?\n      this.innerPadding :\n      this.innerPadding[1] + this.innerPadding[3];\n\n    return this.data\n      .map((d, index) => {\n        let label = d.data.name;\n        if (label && label.constructor.name === 'Date') {\n          label = label.toLocaleDateString();\n        } else {\n          label = label ? label.toLocaleString() : label;\n        }\n        d.data.name = label;\n\n        const value = d.data.value;\n        const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n        const color = this.cardColor || valueColor || '#000';\n        return {\n          x: d.x,\n          y: d.y,\n          width: d.width - xPadding,\n          height: d.height - yPadding,\n          color,\n          bandColor: this.bandColor || valueColor,\n          textColor: this.textColor || invertColor(color),\n          label,\n          data: d.data,\n          tooltipText: `${label}: ${value}`\n        };\n      });\n  }\n\n  trackBy(index, card): string {\n    return card.label;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n}\n","import {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input\n} from '@angular/core';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { gridLayout, gridSize } from '../common/grid-layout.helper';\n\n@Component({\n  selector: 'ngx-charts-number-card',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"false\"\n      [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styles: [\n    require('../common/base-chart.component.scss'),\n    require('./card.component.scss')\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NumberCardComponent extends BaseChartComponent {\n  @Input() cardColor: string;\n  @Input() bandColor: string;\n  @Input() emptyColor: string = 'rgba(0, 0, 0, 0)';\n  @Input() innerPadding = 15;\n  @Input() textColor: string;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() designatedTotal: number;\n\n  dims: ViewDimensions;\n  data: any[];\n  slots: any[];\n  colors: ColorHelper;\n  transform: string;\n  domain: any[];\n  margin = [10, 10, 10, 10];\n\n  backgroundCards: any[];\n\n  get clickable() {\n    return !!this.select.observers.length;\n  }\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.domain = this.getDomain();\n\n    this.setColors();\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n\n    const size = gridSize(this.dims, this.results.length, 150);\n    const N = size[0] * size[1];\n\n    const data = this.results.slice();\n\n    while (data.length < N) {\n      data.push({value: null});\n    }\n\n    this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { CardComponent } from './card.component';\nimport { CardSeriesComponent } from './card-series.component';\nimport { NumberCardComponent } from './number-card.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    CardComponent,\n    CardSeriesComponent,\n    NumberCardComponent\n  ],\n  exports: [\n    CardComponent,\n    CardSeriesComponent,\n    NumberCardComponent\n  ]\n})\nexport class NumberCardModule {}\n","import { Component, Input, Output, EventEmitter, ElementRef, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { select } from 'd3-selection';\n\nimport { invertColor } from '../utils/color-utils';\nimport { trimLabel } from '../common/trim-label.helper';\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'g[ngx-charts-tree-map-cell]',\n  template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-linear-gradient\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [style.cursor]=\"'pointer'\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\">\n        <xhtml:p\n          [style.color]=\"getTextColor()\"\n          [style.height]=\"height + 'px'\"\n          [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\">\n          </xhtml:span>\n          <xhtml:br />\n          <xhtml:span *ngIf=\"animations\"\n            class=\"treemap-val\" \n            ngx-charts-count-up \n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\">\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\"\n            class=\"treemap-val\">\n            {{formattedValue}}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TreeMapCellComponent implements OnChanges {\n  @Input() data;\n  @Input() fill;\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() label;\n  @Input() value;\n  @Input() valueType;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() gradient: boolean = false;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  gradientStops: any[];\n  gradientId: string;\n  gradientUrl: string;\n\n  element: HTMLElement;\n  transform: string;\n  formattedLabel: string;\n  formattedValue: string;\n  initialized: boolean = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(): void {\n    this.update();\n\n    this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n    const labelFormatting = this.labelFormatting || (cell => trimLabel(cell.label, 55));\n\n    const cellData = {\n      data: this.data,\n      label: this.label,\n      value: this.value\n    };\n\n    this.formattedValue = this.valueFormatting(cellData.value);\n    this.formattedLabel = labelFormatting(cellData);\n\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n  }\n\n  update(): void {\n    if (this.initialized) {\n      this.animateToCurrentForm();\n    } else {\n      if (this.animations) {\n        this.loadAnimation();\n      }\n      this.initialized = true;\n    }\n  }\n\n  loadAnimation(): void {\n    const node = select(this.element).select('.cell');\n\n    node\n      .attr('opacity', 0)\n      .attr('x', this.x)\n      .attr('y', this.y);\n\n    this.animateToCurrentForm();\n  }\n\n  getTextColor(): string {\n    return invertColor(this.fill);\n  }\n\n  animateToCurrentForm(): void {\n    const node = select(this.element).select('.cell');\n\n    if (this.animations) {\n      node\n        .transition()\n        .duration(750)\n        .attr('opacity', 1)\n        .attr('x', this.x)\n        .attr('y', this.y)\n        .attr('width', this.width)\n        .attr('height', this.height);\n    } else {\n      node\n        .attr('opacity', 1)\n        .attr('x', this.x)\n        .attr('y', this.y)\n        .attr('width', this.width)\n        .attr('height', this.height);\n    }\n  }\n\n  onClick(): void {\n    this.select.emit({\n      name: this.label,\n      value: this.value\n    });\n  }\n\n  getGradientStops() {\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: 0.3\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n      }\n    ];\n  }\n}\n","import {\n  Component,\n  OnChanges,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ngx-charts-tree-map-cell-series]',\n  template: `\n    <svg:g ngx-charts-tree-map-cell *ngFor=\"let c of cells; trackBy:trackBy\"\n      [data]=\"c\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueType]=\"c.valueType\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"'top'\"\n      [tooltipType]=\"'tooltip'\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\">\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TreeMapCellSeriesComponent implements OnChanges {\n\n  @Input() data;\n  @Input() dims;\n  @Input() colors;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() gradient: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  cells: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.cells = this.getCells();\n  }\n\n  getCells(): any[] {\n    return this.data.children\n      .filter((d) => {\n        return d.depth === 1;\n      })\n      .map((d, index) => {\n        const label = d.id;\n\n        const data = {\n          name: label,\n          value: d.value\n        };\n\n        return {\n          data,\n          x: d.x0,\n          y: d.y0,\n          width: d.x1 - d.x0,\n          height: d.y1 - d.y0,\n          fill: this.colors.getColor(label),\n          label,\n          value: d.value,\n          valueType: d.valueType\n        };\n      });\n  }\n\n  getTooltipText({ label, value }): string {\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.label;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { treemap, stratify } from 'd3-hierarchy';\n\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'ngx-charts-tree-map',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"false\"\n      [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styles: [require('./tree-map.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TreeMapComponent extends BaseChartComponent {\n\n  @Input() results;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() gradient: boolean = false;\n\n  @Output() select = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  dims: any;\n  domain: any;\n  transform: any;\n  colors: ColorHelper;\n  treemap: any;\n  data: any;\n  margin = [10, 10, 10, 10];\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.domain = this.getDomain();\n\n    this.treemap = treemap<any>()\n      .size([this.dims.width, this.dims.height]);\n\n    const rootNode = {\n      name: 'root',\n      value: 0,\n      isRoot: true\n    };\n\n    const root = stratify<any>()\n      .id(d => {\n        let label = d.name;\n\n        if (label.constructor.name === 'Date') {\n          label = label.toLocaleDateString();\n        } else {\n          label = label.toLocaleString();\n        }\n        return label;\n      })\n      .parentId(d => d.isRoot ? null : 'root')\n      ([rootNode, ...this.results])\n      .sum(d => d.value);\n\n    this.data = this.treemap(root);\n\n    this.setColors();\n\n    this.transform = `translate(${ this.dims.xOffset } , ${ this.margin[0] })`;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { TreeMapCellComponent } from './tree-map-cell.component';\nimport { TreeMapCellSeriesComponent } from './tree-map-cell-series.component';\nimport { TreeMapComponent } from './tree-map.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    TreeMapCellComponent,\n    TreeMapCellSeriesComponent,\n    TreeMapComponent\n  ],\n  exports: [\n    TreeMapCellComponent,\n    TreeMapCellSeriesComponent,\n    TreeMapComponent\n  ]\n})\nexport class TreeMapModule {}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  ViewChild,\n  AfterViewInit,\n  ViewEncapsulation,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { scaleLinear } from 'd3-scale';\n\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'ngx-charts-linear-gauge',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"false\"\n      [animations]=\"animations\"\n      (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"'horizontal'\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\">\n        </svg:g>\n        <svg:g ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"'horizontal'\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\">\n        </svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\">\n              {{displayValue}}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\">\n              {{units}}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styles: [\n    require('../common/base-chart.component.scss'),\n    require('./linear-gauge.component.scss')\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinearGaugeComponent extends BaseChartComponent implements AfterViewInit {\n\n  @Input() min: number = 0;\n  @Input() max: number = 100;\n  @Input() value: number = 0;\n  @Input() units: string;\n  @Input() previousValue;\n  @Input() valueFormatting: any;\n\n  @ViewChild('valueTextEl',{static: false}) valueTextEl: ElementRef;\n  @ViewChild('unitsTextEl',{static: false}) unitsTextEl: ElementRef;\n\n  dims: ViewDimensions;\n  valueDomain: any;\n  valueScale: any;\n\n  colors: ColorHelper;\n  transform: string;\n  margin: any[] = [10, 20, 10, 20];\n  transformLine: string;\n\n  valueResizeScale: number = 1;\n  unitsResizeScale: number = 1;\n  valueTextTransform: string = '';\n  valueTranslate: string = '';\n  unitsTextTransform: string = '';\n  unitsTranslate: string = '';\n  displayValue: string;\n  hasPreviousValue: boolean;\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    setTimeout(() => {\n      this.scaleText('value');\n      this.scaleText('units');\n    });\n  }\n\n  update(): void {\n    super.update();\n\n    this.hasPreviousValue = this.previousValue !== undefined;\n    this.max = Math.max(this.max, this.value);\n    this.min = Math.min(this.min, this.value);\n    if (this.hasPreviousValue) {\n      this.max = Math.max(this.max, this.previousValue);\n      this.min = Math.min(this.min, this.previousValue);\n    }\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n\n    this.setColors();\n\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n\n    this.transform = `translate(${ xOffset }, ${ yOffset })`;\n    this.transformLine = `translate(${ this.margin[3] + this.valueScale(this.previousValue) }, ${ yOffset })`;\n    this.valueTranslate = `translate(0, -15)`;\n    this.unitsTranslate = `translate(0, 15)`;\n    setTimeout(() => this.scaleText('value'), 50);\n    setTimeout(() => this.scaleText('units'), 50);\n  }\n\n  getValueDomain(): any[] {\n    return [this.min, this.max];\n  }\n\n  getValueScale(): any {\n    return scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n  }\n\n  getDisplayValue(): string {\n    if (this.valueFormatting) {\n      return this.valueFormatting(this.value);\n    }\n    return this.value.toLocaleString();\n  }\n\n  scaleText(element, repeat: boolean = true): void {\n    let el;\n    let resizeScale;\n    if (element === 'value') {\n      el = this.valueTextEl;\n      resizeScale = this.valueResizeScale;\n    } else {\n      el = this.unitsTextEl;\n      resizeScale = this.unitsResizeScale;\n    }\n\n    const { width, height } = el.nativeElement.getBoundingClientRect();\n    if (width === 0 || height === 0) return;\n    const oldScale = resizeScale;\n    const availableWidth = this.dims.width;\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n    const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n    const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n\n    if (resizeScale !== oldScale) {\n      if (element === 'value') {\n        this.valueResizeScale = resizeScale;\n        this.valueTextTransform = `scale(${ resizeScale }, ${ resizeScale })`;\n      } else {\n        this.unitsResizeScale = resizeScale;\n        this.unitsTextTransform = `scale(${ resizeScale }, ${ resizeScale })`;\n      }\n      this.cd.markForCheck();\n      if (repeat) {\n        setTimeout(() => { this.scaleText(element, false); }, 50);\n      }\n    }\n  }\n\n  onClick(): void {\n    this.select.emit({\n      name: 'Value',\n      value: this.value\n    });\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', [this.value], this.customColors);\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  ViewChild,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear } from 'd3-scale';\n\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'ngx-charts-gauge',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styles: [require('../common/base-chart.component.scss'), require('./gauge.component.scss')],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GaugeComponent extends BaseChartComponent implements AfterViewInit {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() min: number = 0;\n  @Input() max: number = 100;\n  @Input() textValue: string;\n  @Input() units: string;\n  @Input() bigSegments: number = 10;\n  @Input() smallSegments: number = 5;\n  @Input() results: any[];\n  @Input() showAxis: boolean = true;\n  @Input() startAngle: number = -120;\n  @Input() angleSpan: number = 240;\n  @Input() activeEntries: any[] = [];\n  @Input() axisTickFormatting: any;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() valueFormatting: (value: any) => string;\n  @Input() showText: boolean = true;\n\n  // Specify margins\n  @Input() margin: any[];\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate', {static: false})tooltipTemplate: TemplateRef<any>;\n\n  @ViewChild('textEl',{static: false}) textEl: ElementRef;\n\n  dims: ViewDimensions;\n  domain: any[];\n  valueDomain: any;\n  valueScale: any;\n\n  colors: ColorHelper;\n  transform: string;\n\n  outerRadius: number;\n  textRadius: number; // max available radius for the text\n  resizeScale: number = 1;\n  rotation: string = '';\n  textTransform: string = 'scale(1, 1)';\n  cornerRadius: number = 10;\n  arcs: any[];\n  displayValue: string;\n  legendOptions: any;\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    setTimeout(() => this.scaleText());\n  }\n\n  update(): void {\n    super.update();\n\n    if (!this.showAxis) {\n      if (!this.margin) {\n        this.margin = [10, 20, 10, 20];\n      }\n    } else {\n      if (!this.margin) {\n        this.margin = [60, 100, 60, 100];\n      }\n    }\n\n    // make the starting angle positive\n    if (this.startAngle < 0) {\n      this.startAngle = (this.startAngle % 360) + 360;\n    }\n\n    this.angleSpan = Math.min(this.angleSpan, 360);\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n\n    this.domain = this.getDomain();\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n\n    this.arcs = this.getArcs();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n\n    this.transform = `translate(${xOffset}, ${yOffset})`;\n    this.rotation = `rotate(${this.startAngle})`;\n    setTimeout(() => this.scaleText(), 50);\n  }\n\n  getArcs(): any[] {\n    const arcs = [];\n\n    const availableRadius = this.outerRadius * 0.7;\n\n    const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n    const arcWidth = radiusPerArc * 0.7;\n    this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n    this.cornerRadius = Math.floor(arcWidth / 2);\n\n    let i = 0;\n    for (const d of this.results) {\n      const outerRadius = this.outerRadius - i * radiusPerArc;\n      const innerRadius = outerRadius - arcWidth;\n\n      const backgroundArc = {\n        endAngle: (this.angleSpan * Math.PI) / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: this.max,\n          name: d.name\n        }\n      };\n\n      const valueArc = {\n        endAngle: (Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI) / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: d.value,\n          name: d.name\n        }\n      };\n\n      const arc = {\n        backgroundArc,\n        valueArc\n      };\n\n      arcs.push(arc);\n      i++;\n    }\n\n    return arcs;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getValueDomain(): any[] {\n    const values = this.results.map(d => d.value);\n    const dataMin = Math.min(...values);\n    const dataMax = Math.max(...values);\n\n    if (this.min !== undefined) {\n      this.min = Math.min(this.min, dataMin);\n    } else {\n      this.min = dataMin;\n    }\n\n    if (this.max !== undefined) {\n      this.max = Math.max(this.max, dataMax);\n    } else {\n      this.max = dataMax;\n    }\n\n    return [this.min, this.max];\n  }\n\n  getValueScale(): any {\n    return scaleLinear()\n      .range([0, this.angleSpan])\n      .nice()\n      .domain(this.valueDomain);\n  }\n\n  getDisplayValue(): string {\n    const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n\n    if (this.textValue && 0 !== this.textValue.length) {\n      return this.textValue.toLocaleString();\n    }\n\n    if (this.valueFormatting) {\n      return this.valueFormatting(value);\n    }\n\n    return value.toLocaleString();\n  }\n\n  scaleText(repeat: boolean = true): void {\n    if (!this.showText) {\n      return;\n    }\n    const { width } = this.textEl.nativeElement.getBoundingClientRect();\n    const oldScale = this.resizeScale;\n\n    if (width === 0) {\n      this.resizeScale = 1;\n    } else {\n      const availableSpace = this.textRadius;\n      this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;\n    }\n\n    if (this.resizeScale !== oldScale) {\n      this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n      this.cd.markForCheck();\n      if (repeat) {\n        setTimeout(() => this.scaleText(false), 50);\n      }\n    }\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  getLegendOptions(): any {\n    return {\n      scaleType: 'ordinal',\n      colors: this.colors,\n      domain: this.domain,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n  onActivate(item): void {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item): void {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  trackBy(index, item): string {\n    return item.valueArc.data.name;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { formatLabel } from '../common/label.helper';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'g[ngx-charts-gauge-arc]',\n  template: `\n    <svg:g ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\">\n    </svg:g>\n    <svg:g ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"'top'\"\n      [tooltipType]=\"'tooltip'\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\">\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GaugeArcComponent {\n\n  @Input() backgroundArc: any;\n  @Input() valueArc: any;\n  @Input() cornerRadius: any;\n  @Input() colors: ColorHelper;\n  @Input() isActive: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() valueFormatting: (value: any) => string;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  tooltipText(arc): string {\n    const label = formatLabel(arc.data.name);\n    let val;\n\n    if(this.valueFormatting) {\n      val = this.valueFormatting(arc.data.value);\n    } else {\n      val = formatLabel(arc.data.value);\n    }\n\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { line } from 'd3-shape';\n\n@Component({\n  selector: 'g[ngx-charts-gauge-axis]',\n  template: `\n    <svg:g [attr.transform]=\"rotate\">\n        <svg:g *ngFor=\"let tick of ticks.big\"\n            class=\"gauge-tick gauge-tick-large\">\n            <svg:path [attr.d]=\"tick.line\" />\n        </svg:g>\n        <svg:g *ngFor=\"let tick of ticks.big\"\n            class=\"gauge-tick gauge-tick-large\">\n            <svg:text\n                [style.textAnchor]=\"tick.textAnchor\"\n                [attr.transform]=\"tick.textTransform\"\n                alignment-baseline=\"central\">\n                {{tick.text}}\n            </svg:text>\n        </svg:g>\n        <svg:g *ngFor=\"let tick of ticks.small\"\n            class=\"gauge-tick gauge-tick-small\">\n            <svg:path [attr.d]=\"tick.line\" />\n        </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GaugeAxisComponent implements OnChanges {\n  @Input() bigSegments: any;\n  @Input() smallSegments: any;\n  @Input() min: any;\n  @Input() max: any;\n  @Input() angleSpan: number;\n  @Input() startAngle: number;\n  @Input() radius: any;\n  @Input() valueScale: any;\n  @Input() tickFormatting: any;\n\n  ticks: any;\n  rotationAngle: number;\n  rotate: string = '';\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.update();\n  }\n\n  update(): void {\n    this.rotationAngle = -90 + this.startAngle;\n    this.rotate = `rotate(${ this.rotationAngle })`;\n    this.ticks = this.getTicks();\n  }\n\n  getTicks(): any {\n    const bigTickSegment = this.angleSpan / this.bigSegments;\n    const smallTickSegment = bigTickSegment / (this.smallSegments);\n    const tickLength = 20;\n    const ticks = {\n      big: [],\n      small: []\n    };\n\n    const startDistance = this.radius + 10;\n    const textDist = startDistance + tickLength + 10;\n\n    for (let i = 0; i <= this.bigSegments; i++) {\n      const angleDeg = i * bigTickSegment;\n      const angle = angleDeg * Math.PI / 180;\n\n      const textAnchor = this.getTextAnchor(angleDeg);\n\n      let skip = false;\n      if (i === 0 && this.angleSpan === 360) {\n        skip = true;\n      }\n\n      if (!skip) {\n        let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n        if (this.tickFormatting) {\n          text = this.tickFormatting(text);\n        }\n        ticks.big.push({\n          line: this.getTickPath(startDistance, tickLength, angle),\n          textAnchor,\n          text,\n          textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${ -this.rotationAngle })\n          `\n        });\n      }\n\n      if (i === this.bigSegments) {\n        continue;\n      }\n\n      for (let j = 1; j <= this.smallSegments; j++) {\n        const smallAngleDeg = angleDeg + j * smallTickSegment;\n        const smallAngle = smallAngleDeg * Math.PI / 180;\n\n        ticks.small.push({\n          line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n        });\n      }\n    }\n\n    return ticks;\n  }\n\n  getTextAnchor(angle) {\n    // [0, 45] = 'middle';\n    // [46, 135] = 'start';\n    // [136, 225] = 'middle';\n    // [226, 315] = 'end';\n\n    angle = (this.startAngle + angle) % 360;\n    let textAnchor = 'middle';\n    if (angle > 45 && angle <= 135) {\n      textAnchor = 'start';\n    } else if (angle > 225 && angle <= 315) {\n      textAnchor = 'end';\n    }\n    return textAnchor;\n  }\n\n  getTickPath(startDistance, tickLength, angle): any {\n    const y1 = startDistance * Math.sin(angle);\n    const y2 = (startDistance + tickLength) * Math.sin(angle);\n    const x1 = startDistance * Math.cos(angle);\n    const x2 = (startDistance + tickLength) * Math.cos(angle);\n\n    const points = [{x: x1, y: y1}, {x: x2, y: y2}];\n    const lineGenerator = line<any>().x(d => d.x).y(d => d.y);\n    return lineGenerator(points);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { LinearGaugeComponent } from './linear-gauge.component';\nimport { GaugeComponent } from './gauge.component';\nimport { GaugeArcComponent } from './gauge-arc.component';\nimport { GaugeAxisComponent } from './gauge-axis.component';\nimport { PieChartModule } from '../pie-chart/pie-chart.module';\nimport { BarChartModule } from '../bar-chart/bar-chart.module';\n\n@NgModule({\n  imports: [ChartCommonModule, PieChartModule, BarChartModule],\n  declarations: [\n    LinearGaugeComponent,\n    GaugeComponent,\n    GaugeArcComponent,\n    GaugeAxisComponent\n  ],\n  exports: [\n    LinearGaugeComponent,\n    GaugeComponent,\n    GaugeArcComponent,\n    GaugeAxisComponent\n  ]\n})\nexport class GaugeModule {}\n","import './polyfills';\n\nimport { NgModule } from '@angular/core';\nimport { ChartCommonModule } from './common/chart-common.module';\nimport { AreaChartModule } from './area-chart/area-chart.module';\nimport { BarChartModule } from './bar-chart/bar-chart.module';\nimport { BubbleChartModule } from './bubble-chart/bubble-chart.module';\nimport { ForceDirectedGraphModule } from './force-directed-graph/force-directed-graph.module';\nimport { HeatMapModule } from './heat-map/heat-map.module';\nimport { LineChartModule } from './line-chart/line-chart.module';\nimport { PolarChartModule } from './polar-chart/polar-chart.module';\nimport { NumberCardModule } from './number-card/number-card.module';\nimport { PieChartModule } from './pie-chart/pie-chart.module';\nimport { TreeMapModule } from './tree-map/tree-map.module';\nimport { GaugeModule } from './gauge/gauge.module';\n\n@NgModule({\n  exports: [\n    ChartCommonModule,\n    AreaChartModule,\n    BarChartModule,\n    BubbleChartModule,\n    ForceDirectedGraphModule,\n    HeatMapModule,\n    LineChartModule,\n    PolarChartModule,\n    NumberCardModule,\n    PieChartModule,\n    TreeMapModule,\n    GaugeModule\n  ]\n})\nexport class NgxChartsModule {}\n","import { timeFormat } from 'd3-time-format';\n\nexport function tickFormat(fieldType, groupByType): (label: string) => string {\n  return function(label: string): string {\n    if (label === 'No Value' || label === 'Other') {\n      return label;\n    }\n    if (fieldType === 'date' && groupByType === 'groupBy') {\n      const formatter = timeFormat('MM/DD/YYYY');\n      return formatter(<any>label);\n    }\n\n    return label.toString();\n  };\n}\n","export * from './ngx-charts.module';\nexport * from './common';\nexport * from './area-chart';\nexport * from './bar-chart';\nexport * from './bubble-chart';\nexport * from './force-directed-graph';\nexport * from './heat-map';\nexport * from './line-chart';\nexport * from './polar-chart';\nexport * from './number-card';\nexport * from './pie-chart';\nexport * from './tree-map';\nexport * from './gauge';\n","\n        var result = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./card.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./advanced-pie-chart.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./pie-chart.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./pie-grid.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./polar-chart.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./tree-map.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","module.exports = __WEBPACK_EXTERNAL_MODULE__angular_animations__;","module.exports = __WEBPACK_EXTERNAL_MODULE__angular_common__;","module.exports = __WEBPACK_EXTERNAL_MODULE__angular_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE__angular_platform_browser__;","module.exports = __WEBPACK_EXTERNAL_MODULE_d3_array__;","module.exports = __WEBPACK_EXTERNAL_MODULE_d3_brush__;","module.exports = __WEBPACK_EXTERNAL_MODULE_d3_color__;","module.exports = __WEBPACK_EXTERNAL_MODULE_d3_force__;","module.exports = __WEBPACK_EXTERNAL_MODULE_d3_format__;","module.exports = __WEBPACK_EXTERNAL_MODULE_d3_hierarchy__;","module.exports = __WEBPACK_EXTERNAL_MODULE_d3_interpolate__;","module.exports = __WEBPACK_EXTERNAL_MODULE_d3_scale__;","module.exports = __WEBPACK_EXTERNAL_MODULE_d3_selection__;","module.exports = __WEBPACK_EXTERNAL_MODULE_d3_shape__;","module.exports = __WEBPACK_EXTERNAL_MODULE_d3_time_format__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_operators__;"],"sourceRoot":""}